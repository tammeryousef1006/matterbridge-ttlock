"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var DerTypes_exports = {};
__export(DerTypes_exports, {
  Pkcs7: () => Pkcs7,
  SHA256_CMS: () => SHA256_CMS,
  X509: () => X509,
  X520: () => X520,
  X962: () => X962
});
module.exports = __toCommonJS(DerTypes_exports);
var import_DerCodec = require("../codec/DerCodec.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var X962;
((X9622) => {
  X9622.PublicKeyEcPrime256v1 = (key) => ({
    type: {
      algorithm: (0, import_DerCodec.ObjectId)("2A8648CE3D0201"),
      curve: (0, import_DerCodec.ObjectId)("2A8648CE3D030107")
    },
    bytes: (0, import_DerCodec.BitByteArray)(key)
  });
  X9622.EcdsaWithSHA256 = (0, import_DerCodec.DerObject)("2A8648CE3D040302");
})(X962 || (X962 = {}));
const SHA256_CMS = (0, import_DerCodec.DerObject)("608648016503040201");
var X509;
((X5092) => {
  X5092.SubjectKeyIdentifier = (identifier) => (0, import_DerCodec.DerObject)("551d0e", { value: import_DerCodec.DerCodec.encode(identifier) });
  X5092.AuthorityKeyIdentifier = (identifier) => (0, import_DerCodec.DerObject)("551d23", { value: import_DerCodec.DerCodec.encode({ id: (0, import_DerCodec.ContextTaggedBytes)(0, identifier) }) });
  X5092.BasicConstraints = (constraints) => {
    const toEncode = { ...constraints };
    if (toEncode?.isCa === false) {
      delete toEncode.isCa;
    }
    return (0, import_DerCodec.DerObject)("551d13", { critical: true, value: import_DerCodec.DerCodec.encode(toEncode) });
  };
  X5092.ExtendedKeyUsage = (values) => {
    if (values === void 0) {
      return void 0;
    }
    const data = {};
    values.forEach((value) => {
      switch (value) {
        case 1:
          data.serverAuth = (0, import_DerCodec.ObjectId)("2b06010505070301");
          break;
        case 2:
          data.clientAuth = (0, import_DerCodec.ObjectId)("2b06010505070302");
          break;
        case 3:
          data.codeSigning = (0, import_DerCodec.ObjectId)("2b06010505070303");
          break;
        case 4:
          data.emailProtection = (0, import_DerCodec.ObjectId)("2b06010505070304");
          break;
        case 5:
          data.timeStamping = (0, import_DerCodec.ObjectId)("2b06010505070308");
          break;
        case 6:
          data.ocspSigning = (0, import_DerCodec.ObjectId)("2b06010505070309");
          break;
        default:
          throw new import_DerCodec.DerError(`Unsupported extended key usage value ${value}`);
      }
    });
    return (0, import_DerCodec.DerObject)("551d25", {
      critical: true,
      value: import_DerCodec.DerCodec.encode(data)
    });
  };
  X5092.KeyUsage = (value) => {
    return (0, import_DerCodec.DerObject)("551d0f", {
      critical: true,
      value: import_DerCodec.DerCodec.encode((0, import_DerCodec.DatatypeOverride)(import_DerCodec.DerType.BitString, value))
    });
  };
})(X509 || (X509 = {}));
var Pkcs7;
((Pkcs72) => {
  Pkcs72.Data = (data) => (0, import_DerCodec.DerObject)("2A864886F70D010701", { value: (0, import_DerCodec.ContextTagged)(0, data) });
  Pkcs72.SignedData = (data) => (0, import_DerCodec.DerObject)("2a864886f70d010702", { value: (0, import_DerCodec.ContextTagged)(0, data) });
})(Pkcs7 || (Pkcs7 = {}));
var X520;
((X5202) => {
  X5202.NON_WELL_DEFINED_DATE = /* @__PURE__ */ new Date("9999-12-31 23:59:59Z");
  const GenericString_X520 = (id) => (data, asPrintedString = false) => {
    let value = data;
    if (asPrintedString) {
      value = (0, import_DerCodec.DatatypeOverride)(import_DerCodec.DerType.PrintableString, value);
    }
    return [(0, import_DerCodec.DerObject)(`5504${id.toString(16).padStart(2, "0")}`, { value })];
  };
  X5202.CommonName = GenericString_X520(3);
  X5202.SurName = GenericString_X520(4);
  X5202.SerialNumber = GenericString_X520(5);
  X5202.CountryName = GenericString_X520(6);
  X5202.LocalityName = GenericString_X520(7);
  X5202.StateOrProvinceName = GenericString_X520(8);
  X5202.OrganisationName = GenericString_X520(10);
  X5202.OrganizationalUnitName = GenericString_X520(11);
  X5202.Title = GenericString_X520(12);
  X5202.Name = GenericString_X520(41);
  X5202.GivenName = GenericString_X520(42);
  X5202.Initials = GenericString_X520(43);
  X5202.GenerationQualifier = GenericString_X520(44);
  X5202.DnQualifier = GenericString_X520(46);
  X5202.Pseudonym = GenericString_X520(65);
  X5202.DomainComponent = (value) => [
    (0, import_DerCodec.DerObject)("06092A864886F70D010901", { value: (0, import_DerCodec.DatatypeOverride)(import_DerCodec.DerType.IA5String, value) })
  ];
})(X520 || (X520 = {}));
//# sourceMappingURL=DerTypes.js.map
