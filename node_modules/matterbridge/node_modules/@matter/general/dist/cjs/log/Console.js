"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var Console_exports = {};
__export(Console_exports, {
  Console: () => Console
});
module.exports = __toCommonJS(Console_exports);
var import_LogLevel = require("./LogLevel.js");
/**
 * @license
 * Copyright 2022-2025 Project CHIP Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var Console;
((Console2) => {
  Console2.system = globalThis.console;
  Console2.console = Console2.system;
  function write(text, message) {
    switch (message.level) {
      case import_LogLevel.LogLevel.DEBUG:
        Console2.console.debug(text);
        break;
      case import_LogLevel.LogLevel.INFO:
        Console2.console.info(text);
        break;
      case import_LogLevel.LogLevel.NOTICE:
        Console2.console.info(text);
        break;
      case import_LogLevel.LogLevel.WARN:
        Console2.console.warn(text);
        break;
      case import_LogLevel.LogLevel.ERROR:
        Console2.console.error(text);
        break;
      case import_LogLevel.LogLevel.FATAL:
        Console2.console.error(text);
        break;
    }
  }
  Console2.write = write;
})(Console || (Console = {}));
//# sourceMappingURL=Console.js.map
