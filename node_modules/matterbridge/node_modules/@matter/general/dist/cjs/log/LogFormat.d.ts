/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
/**
 * Get a diagnostic formatter for the specified format.
 *
 * A "diagnostic formatter" converts arbitrary values into a formatted string.  Formatting is controlled by type and the
 * {@link Diagnostic.presentation} and {@link Diagnostic.value} properties.
 */
export declare function LogFormat(format: string | LogFormat.Formatter): LogFormat.Formatter;
/**
 * Log stylization support.
 */
export declare namespace LogFormat {
    /**
     * A function that formats a log message.
     */
    type Formatter = (diagnostic: unknown, indents?: number) => string;
    /**
     * Supported formats.  You may add to this object to register new named formats.
     */
    const formats: Record<string, Formatter>;
    /**
     * Built in formatter that produces plaintext.
     */
    const PLAIN = "plain";
    /**
     * Built in formatter that produces text styled using ANSI escapes.
     **/
    const ANSI = "ansi";
    /**
     * Built in formatter that produces HTML.
     */
    const HTML = "html";
}
export type DiagnosticProducer = () => string;
//# sourceMappingURL=LogFormat.d.ts.map