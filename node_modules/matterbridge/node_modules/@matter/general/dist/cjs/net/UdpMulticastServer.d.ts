/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { Network } from "./Network.js";
export interface UdpMulticastServerOptions {
    network: Network;
    listeningPort: number;
    broadcastAddressIpv6: string;
    broadcastAddressIpv4?: string;
    netInterface?: string;
}
export declare class UdpMulticastServer {
    private readonly network;
    private readonly broadcastAddressIpv4;
    private readonly broadcastAddressIpv6;
    private readonly broadcastPort;
    private readonly serverIpv4;
    private readonly serverIpv6;
    private readonly netInterface;
    static create({ netInterface, broadcastAddressIpv4, broadcastAddressIpv6, listeningPort, network, }: UdpMulticastServerOptions): Promise<UdpMulticastServer>;
    private readonly broadcastChannels;
    private constructor();
    onMessage(listener: (message: Uint8Array, peerAddress: string, netInterface: string) => void): void;
    send(message: Uint8Array, netInterface?: string, uniCastTarget?: string): Promise<void>;
    private createBroadcastChannel;
    close(): Promise<void>;
}
//# sourceMappingURL=UdpMulticastServer.d.ts.map