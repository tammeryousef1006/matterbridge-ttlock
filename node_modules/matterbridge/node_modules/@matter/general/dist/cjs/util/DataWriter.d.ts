/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { Endian } from "./Bytes.js";
/** Writer that auto-increments its offset after each write. */
export declare class DataWriter<E extends Endian> {
    private readonly littleEndian;
    private length;
    private readonly chunks;
    constructor(endian: E);
    writeUInt8(value: number | bigint): void;
    writeUInt16(value: number | bigint): void;
    writeUInt32(value: number | bigint): void;
    writeUInt64(value: number | bigint): void;
    writeInt8(value: number | bigint): void;
    writeInt16(value: number | bigint): void;
    writeInt32(value: number | bigint): void;
    writeInt64(value: number | bigint): void;
    writeFloat(value: number): void;
    writeDouble(value: number): void;
    writeByteArray(value: Uint8Array): void;
    toByteArray(): Uint8Array<ArrayBufferLike>;
}
//# sourceMappingURL=DataWriter.d.ts.map