"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var Type_exports = {};
__export(Type_exports, {
  Merge: () => Merge,
  MergeAll: () => MergeAll,
  Mutable: () => Mutable,
  Pluck: () => Pluck,
  isNullish: () => isNullish,
  isObject: () => isObject
});
module.exports = __toCommonJS(Type_exports);
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
function Merge(a, b) {
  return { ...a, ...b };
}
function MergeAll(...objects) {
  return Object.assign({}, ...objects);
}
function Pluck(key, ...objects) {
  return objects.map((o) => o[key]).filter((o) => o !== void 0);
}
function isNullish(a) {
  return a === void 0 || a === null;
}
function Mutable(value) {
  return value;
}
function isObject(it) {
  return Object.prototype.toString.call(it) === "[object Object]";
}
//# sourceMappingURL=Type.js.map
