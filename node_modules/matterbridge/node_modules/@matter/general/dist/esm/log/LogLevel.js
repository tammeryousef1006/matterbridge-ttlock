/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { ImplementationError } from "#MatterError.js";
function LogLevel(level) {
  if (typeof level === "string" && level.match(/^\d+$/)) {
    level = Number.parseInt(level);
  }
  if (typeof level === "string") {
    switch (level.toLowerCase()) {
      case "debug":
        return LogLevel.DEBUG;
      case "info":
        return LogLevel.INFO;
      case "notice":
        return LogLevel.NOTICE;
      case "warn":
        return LogLevel.WARN;
      case "error":
        return LogLevel.ERROR;
      case "fatal":
        return LogLevel.FATAL;
      default:
    }
  } else if (level >= 0 && level <= 5) {
    return level;
  }
  throw new ImplementationError(`Unsupported log level "${level}"`);
}
((LogLevel2) => {
  LogLevel2.DEBUG = 0;
  LogLevel2.INFO = 1;
  LogLevel2.NOTICE = 2;
  LogLevel2.WARN = 3;
  LogLevel2.ERROR = 4;
  LogLevel2.FATAL = 5;
  LogLevel2.names = ["debug", "info", "notice", "warn", "error", "fatal"];
})(LogLevel || (LogLevel = {}));
LogLevel[0] = "debug";
LogLevel[1] = "info";
LogLevel[2] = "notice";
LogLevel[3] = "warn";
LogLevel[4] = "error";
LogLevel[5] = "fatal";
const logLevelFromString = LogLevel;
export {
  LogLevel,
  logLevelFromString
};
//# sourceMappingURL=LogLevel.js.map
