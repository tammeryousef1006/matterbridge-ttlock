/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChannelType } from "#net/Channel.js";
import { isIPv4 } from "../../util/Ip.js";
import { Network } from "../Network.js";
import { MockUdpChannel } from "./MockUdpChannel.js";
class MockNetwork extends Network {
  #simulator;
  #mac;
  #ipV4;
  #ipV6;
  constructor(simulator, mac, ips) {
    super();
    this.#simulator = simulator;
    this.#mac = mac;
    this.#ipV4 = ips.filter((ip) => isIPv4(ip));
    this.#ipV6 = ips.filter((ip) => !isIPv4(ip));
  }
  get simulator() {
    return this.#simulator;
  }
  getNetInterfaces() {
    return [{ name: "fake0" }];
  }
  getIpMac(_netInterface) {
    return { mac: this.#mac, ipV4: this.#ipV4, ipV6: this.#ipV6 };
  }
  createUdpChannel(options) {
    return Promise.resolve(new MockUdpChannel(this, options));
  }
  supports(type, _address) {
    return type === ChannelType.UDP;
  }
}
export {
  MockNetwork
};
//# sourceMappingURL=MockNetwork.js.map
