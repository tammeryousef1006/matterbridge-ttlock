/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChannelType } from "#net/Channel.js";
import { TransportInterface } from "../TransportInterface.js";
import { UdpChannel, UdpChannelOptions } from "../UdpChannel.js";
import { MockNetwork } from "./MockNetwork.js";
export declare class MockUdpChannel implements UdpChannel {
    #private;
    readonly maxPayloadSize: number;
    constructor(network: MockNetwork, { listeningAddress, listeningPort, netInterface, type }: UdpChannelOptions);
    onData(listener: (netInterface: string, peerAddress: string, peerPort: number, data: Uint8Array) => void): TransportInterface.Listener;
    send(host: string, port: number, data: Uint8Array): Promise<void>;
    close(): Promise<void>;
    [Symbol.asyncDispose](): Promise<void>;
    get port(): number;
    supports(type: ChannelType, _address: string): type is ChannelType.UDP;
}
//# sourceMappingURL=MockUdpChannel.d.ts.map