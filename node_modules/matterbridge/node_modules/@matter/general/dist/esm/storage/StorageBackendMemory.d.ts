/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { CloneableStorage, SyncStorage } from "./Storage.js";
import { SupportedStorageTypes } from "./StringifyTools.js";
export declare class StorageBackendMemory extends SyncStorage implements CloneableStorage {
    #private;
    protected store: any;
    protected isInitialized: boolean;
    constructor(store?: any);
    get initialized(): boolean;
    static create(store?: any): Promise<StorageBackendMemory>;
    private createContextKey;
    initialize(): void;
    clone(): StorageBackendMemory;
    close(): Promise<void>;
    clear(): void;
    get data(): any;
    get<T extends SupportedStorageTypes>(contexts: string[], key: string): T | undefined;
    set(contexts: string[], keyOrValues: string | Record<string, SupportedStorageTypes>, value?: SupportedStorageTypes): void;
    delete(contexts: string[], key: string): void;
    keys(contexts: string[]): string[];
    values(contexts: string[]): Record<string, SupportedStorageTypes>;
    contexts(contexts: string[]): string[];
    clearAll(contexts: string[]): void;
}
//# sourceMappingURL=StorageBackendMemory.d.ts.map