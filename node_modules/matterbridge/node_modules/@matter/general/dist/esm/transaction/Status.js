/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { LogLevel } from "#log/LogLevel.js";
import { TransactionFlowError } from "./errors.js";
var Status = /* @__PURE__ */ ((Status2) => {
  Status2["ReadOnly"] = "read only";
  Status2["Shared"] = "shared";
  Status2["Waiting"] = "waiting";
  Status2["Exclusive"] = "exclusive";
  Status2["CommittingPhaseOne"] = "committing phase one";
  Status2["CommittingPhaseTwo"] = "committing phase two";
  Status2["RollingBack"] = "rolling back";
  Status2["Destroyed"] = "destroyed";
  return Status2;
})(Status || {});
((Status2) => {
  function assert(transaction, acceptable, target) {
    if (!acceptable.includes(transaction.status)) {
      throw new TransactionFlowError(
        `Cannot transition transaction from ${formatStatus(transaction.status)} to ${formatStatus(target)}`
      );
    }
  }
  Status2.assert = assert;
  function formatStatus(status) {
    return `<${status}>`;
  }
  Status2.formatStatus = formatStatus;
  Status2.slowTransactionMs = 200;
  Status2.slowLogLevel = LogLevel.INFO;
})(Status || (Status = {}));
export {
  Status
};
//# sourceMappingURL=Status.js.map
