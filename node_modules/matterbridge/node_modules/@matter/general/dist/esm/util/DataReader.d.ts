/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { Endian } from "./Bytes.js";
/** Reader that auto-increments its offset after each read. */
export declare class DataReader<E extends Endian> {
    #private;
    constructor(buffer: Uint8Array, endian: E);
    readUInt8(): number;
    readUInt16(): number;
    readUInt32(): number;
    readUInt64(): bigint;
    readInt8(): number;
    readInt16(): number;
    readInt32(): number;
    readInt64(): bigint;
    readFloat(): number;
    readDouble(): number;
    readUtf8String(length: number): string;
    readByteArray(length: number): Uint8Array<ArrayBufferLike>;
    get remainingBytesCount(): number;
    get remainingBytes(): Uint8Array<ArrayBufferLike>;
    get length(): number;
    set offset(offset: number);
    get offset(): number;
    private getOffsetAndAdvance;
}
//# sourceMappingURL=DataReader.d.ts.map