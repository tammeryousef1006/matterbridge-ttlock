/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
function deepCopy(value) {
  let clones;
  function copy(value2) {
    if (typeof value2 === "object") {
      if (value2 === null) {
        return null;
      }
      let clone = clones?.get(value2);
      if (clone) {
        return clone;
      }
      if (Array.isArray(value2)) {
        clone = value2.map(copy);
      } else if (ArrayBuffer.isView(value2)) {
        const ViewType = value2.constructor;
        clone = new ViewType(value2.buffer.slice(value2.byteOffset, value2.byteOffset + value2.byteLength));
      } else {
        clone = Object.fromEntries(Object.entries(value2).map(([k, v]) => [k, copy(v)]));
      }
      if (!clones) {
        clones = /* @__PURE__ */ new Map();
      }
      clones.set(value2, clone);
      return clone;
    }
    return value2;
  }
  return copy(value);
}
export {
  deepCopy
};
//# sourceMappingURL=DeepCopy.js.map
