/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { DefinitionError } from "../common/DefinitionError.js";
/**
 * An "aspect" is metadata about a Matter element that affects implementation behavior.  Aspects are mostly "qualities"
 * in the Matter specification except for "constraint" which is not formally described as a quality.
 */
export declare abstract class Aspect<D = any> {
    definition: D;
    errors?: DefinitionError[];
    get valid(): boolean;
    constructor(definition: D);
    get empty(): boolean;
    /**
     * Test for logical equivalence.
     */
    equals(other: any): boolean;
    valueOf(): string;
    abstract toString(): string;
    error(code: string, message: string): void;
    extend<This extends Aspect<any>>(this: This, other: Exclude<D, "string">): This;
    protected freeze(): void;
}
//# sourceMappingURL=Aspect.d.ts.map