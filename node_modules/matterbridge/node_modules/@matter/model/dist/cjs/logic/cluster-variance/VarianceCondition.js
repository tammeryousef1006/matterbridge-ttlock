"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var VarianceCondition_exports = {};
__export(VarianceCondition_exports, {
  conditionToBitmaps: () => conditionToBitmaps
});
module.exports = __toCommonJS(VarianceCondition_exports);
var import_FeatureBitmap = require("./FeatureBitmap.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
function conditionToBitmaps(condition, cluster) {
  const bitmap = {};
  if (condition.allOf) {
    for (const name of condition.allOf) {
      bitmap[name] = true;
    }
  }
  if (condition.not) {
    bitmap[condition.not] = false;
  }
  if (!condition.anyOf) {
    return [(0, import_FeatureBitmap.translateBitmap)(bitmap, cluster)];
  }
  const bitmaps = Array();
  for (const name of condition.anyOf) {
    bitmaps.push((0, import_FeatureBitmap.translateBitmap)({ ...bitmap, [name]: true }, cluster));
  }
  return bitmaps;
}
//# sourceMappingURL=VarianceCondition.js.map
