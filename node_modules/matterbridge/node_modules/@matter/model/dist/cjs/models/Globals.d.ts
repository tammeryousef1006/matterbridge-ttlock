/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
/**
 * Global elements in the standard Matter Object Model.
 *
 * These elements are models parented by {@link Matter}.  We also export the models in this index by directly by
 * name, and they are parented by the {@link Matter}.
 *
 * This means, depending on you use case you may also access these elements directly:
 *
 * ```typescript
 * import uint16 from "@matter/model";
 * ```
 *
 * Or operationally:
 *
 * ```typescript
 * import { Matter } from "@matter/model";
 *
 * const uint16 = Matter.get(DatatypeModel, "uint16");
 * ```
 *
 * Note that for purposes of disambiguation we suffix device types with "DT" and semantic namespaces with "NS" in
 * this index.
 */
export declare const Globals: {
    Identify: import("./ClusterModel.js").ClusterModel;
    Groups: import("./ClusterModel.js").ClusterModel;
    ScenesManagement: import("./ClusterModel.js").ClusterModel;
    OnOff: import("./ClusterModel.js").ClusterModel;
    LevelControl: import("./ClusterModel.js").ClusterModel;
    BooleanState: import("./ClusterModel.js").ClusterModel;
    BooleanStateConfiguration: import("./ClusterModel.js").ClusterModel;
    ModeSelect: import("./ClusterModel.js").ClusterModel;
    ModeBase: import("./ClusterModel.js").ClusterModel;
    LowPower: import("./ClusterModel.js").ClusterModel;
    WakeOnLan: import("./ClusterModel.js").ClusterModel;
    Switch: import("./ClusterModel.js").ClusterModel;
    OperationalState: import("./ClusterModel.js").ClusterModel;
    AlarmBase: import("./ClusterModel.js").ClusterModel;
    Messages: import("./ClusterModel.js").ClusterModel;
    ServiceArea: import("./ClusterModel.js").ClusterModel;
    IlluminanceMeasurement: import("./ClusterModel.js").ClusterModel;
    TemperatureMeasurement: import("./ClusterModel.js").ClusterModel;
    PressureMeasurement: import("./ClusterModel.js").ClusterModel;
    FlowMeasurement: import("./ClusterModel.js").ClusterModel;
    RelativeHumidityMeasurement: import("./ClusterModel.js").ClusterModel;
    OccupancySensing: import("./ClusterModel.js").ClusterModel;
    ResourceMonitoring: import("./ClusterModel.js").ClusterModel;
    HepaFilterMonitoring: import("./ClusterModel.js").ClusterModel;
    ActivatedCarbonFilterMonitoring: import("./ClusterModel.js").ClusterModel;
    WaterTankLevelMonitoring: import("./ClusterModel.js").ClusterModel;
    AirQuality: import("./ClusterModel.js").ClusterModel;
    ConcentrationMeasurement: import("./ClusterModel.js").ClusterModel;
    CarbonMonoxideConcentrationMeasurement: import("./ClusterModel.js").ClusterModel;
    CarbonDioxideConcentrationMeasurement: import("./ClusterModel.js").ClusterModel;
    NitrogenDioxideConcentrationMeasurement: import("./ClusterModel.js").ClusterModel;
    OzoneConcentrationMeasurement: import("./ClusterModel.js").ClusterModel;
    Pm25ConcentrationMeasurement: import("./ClusterModel.js").ClusterModel;
    FormaldehydeConcentrationMeasurement: import("./ClusterModel.js").ClusterModel;
    Pm1ConcentrationMeasurement: import("./ClusterModel.js").ClusterModel;
    Pm10ConcentrationMeasurement: import("./ClusterModel.js").ClusterModel;
    TotalVolatileOrganicCompoundsConcentrationMeasurement: import("./ClusterModel.js").ClusterModel;
    RadonConcentrationMeasurement: import("./ClusterModel.js").ClusterModel;
    SmokeCoAlarm: import("./ClusterModel.js").ClusterModel;
    ElectricalEnergyMeasurement: import("./ClusterModel.js").ClusterModel;
    ElectricalPowerMeasurement: import("./ClusterModel.js").ClusterModel;
    ColorControl: import("./ClusterModel.js").ClusterModel;
    BallastConfiguration: import("./ClusterModel.js").ClusterModel;
    PumpConfigurationAndControl: import("./ClusterModel.js").ClusterModel;
    Thermostat: import("./ClusterModel.js").ClusterModel;
    FanControl: import("./ClusterModel.js").ClusterModel;
    ThermostatUserInterfaceConfiguration: import("./ClusterModel.js").ClusterModel;
    ValveConfigurationAndControl: import("./ClusterModel.js").ClusterModel;
    DoorLock: import("./ClusterModel.js").ClusterModel;
    WindowCovering: import("./ClusterModel.js").ClusterModel;
    AccountLogin: import("./ClusterModel.js").ClusterModel;
    ApplicationBasic: import("./ClusterModel.js").ClusterModel;
    ApplicationLauncher: import("./ClusterModel.js").ClusterModel;
    AudioOutput: import("./ClusterModel.js").ClusterModel;
    Channel: import("./ClusterModel.js").ClusterModel;
    ContentLauncher: import("./ClusterModel.js").ClusterModel;
    KeypadInput: import("./ClusterModel.js").ClusterModel;
    MediaInput: import("./ClusterModel.js").ClusterModel;
    MediaPlayback: import("./ClusterModel.js").ClusterModel;
    TargetNavigator: import("./ClusterModel.js").ClusterModel;
    ContentAppObserver: import("./ClusterModel.js").ClusterModel;
    ContentControl: import("./ClusterModel.js").ClusterModel;
    RvcRunMode: import("./ClusterModel.js").ClusterModel;
    RvcCleanMode: import("./ClusterModel.js").ClusterModel;
    RvcOperationalState: import("./ClusterModel.js").ClusterModel;
    TemperatureControl: import("./ClusterModel.js").ClusterModel;
    DishwasherMode: import("./ClusterModel.js").ClusterModel;
    DishwasherAlarm: import("./ClusterModel.js").ClusterModel;
    LaundryWasherMode: import("./ClusterModel.js").ClusterModel;
    LaundryWasherControls: import("./ClusterModel.js").ClusterModel;
    RefrigeratorAndTemperatureControlledCabinetMode: import("./ClusterModel.js").ClusterModel;
    RefrigeratorAlarm: import("./ClusterModel.js").ClusterModel;
    LaundryDryerControls: import("./ClusterModel.js").ClusterModel;
    OvenCavityOperationalState: import("./ClusterModel.js").ClusterModel;
    OvenMode: import("./ClusterModel.js").ClusterModel;
    MicrowaveOvenMode: import("./ClusterModel.js").ClusterModel;
    MicrowaveOvenControl: import("./ClusterModel.js").ClusterModel;
    DeviceEnergyManagement: import("./ClusterModel.js").ClusterModel;
    EnergyEvse: import("./ClusterModel.js").ClusterModel;
    EnergyEvseMode: import("./ClusterModel.js").ClusterModel;
    WaterHeaterManagement: import("./ClusterModel.js").ClusterModel;
    WaterHeaterMode: import("./ClusterModel.js").ClusterModel;
    EnergyPreference: import("./ClusterModel.js").ClusterModel;
    DeviceEnergyManagementMode: import("./ClusterModel.js").ClusterModel;
    WiFiNetworkManagement: import("./ClusterModel.js").ClusterModel;
    ThreadBorderRouterManagement: import("./ClusterModel.js").ClusterModel;
    ThreadNetworkDirectory: import("./ClusterModel.js").ClusterModel;
    Descriptor: import("./ClusterModel.js").ClusterModel;
    Binding: import("./ClusterModel.js").ClusterModel;
    Label: import("./ClusterModel.js").ClusterModel;
    FixedLabel: import("./ClusterModel.js").ClusterModel;
    UserLabel: import("./ClusterModel.js").ClusterModel;
    AccessControl: import("./ClusterModel.js").ClusterModel;
    BridgedDeviceBasicInformation: import("./ClusterModel.js").ClusterModel;
    Actions: import("./ClusterModel.js").ClusterModel;
    ProxyDiscovery: import("./ClusterModel.js").ClusterModel;
    ProxyConfiguration: import("./ClusterModel.js").ClusterModel;
    ValidProxies: import("./ClusterModel.js").ClusterModel;
    IcdManagement: import("./ClusterModel.js").ClusterModel;
    EcosystemInformation: import("./ClusterModel.js").ClusterModel;
    BasicInformation: import("./ClusterModel.js").ClusterModel;
    GroupKeyManagement: import("./ClusterModel.js").ClusterModel;
    LocalizationConfiguration: import("./ClusterModel.js").ClusterModel;
    TimeFormatLocalization: import("./ClusterModel.js").ClusterModel;
    UnitLocalization: import("./ClusterModel.js").ClusterModel;
    PowerSourceConfiguration: import("./ClusterModel.js").ClusterModel;
    PowerSource: import("./ClusterModel.js").ClusterModel;
    PowerTopology: import("./ClusterModel.js").ClusterModel;
    NetworkCommissioning: import("./ClusterModel.js").ClusterModel;
    GeneralCommissioning: import("./ClusterModel.js").ClusterModel;
    DiagnosticLogs: import("./ClusterModel.js").ClusterModel;
    GeneralDiagnostics: import("./ClusterModel.js").ClusterModel;
    SoftwareDiagnostics: import("./ClusterModel.js").ClusterModel;
    ThreadNetworkDiagnostics: import("./ClusterModel.js").ClusterModel;
    WiFiNetworkDiagnostics: import("./ClusterModel.js").ClusterModel;
    EthernetNetworkDiagnostics: import("./ClusterModel.js").ClusterModel;
    TimeSynchronization: import("./ClusterModel.js").ClusterModel;
    OperationalCredentials: import("./ClusterModel.js").ClusterModel;
    AdministratorCommissioning: import("./ClusterModel.js").ClusterModel;
    OtaSoftwareUpdateProvider: import("./ClusterModel.js").ClusterModel;
    OtaSoftwareUpdateRequestor: import("./ClusterModel.js").ClusterModel;
    JointFabricDatastoreCluster: import("./ClusterModel.js").ClusterModel;
    JointFabricPki: import("./ClusterModel.js").ClusterModel;
    CommissionerControl: import("./ClusterModel.js").ClusterModel;
    MeasurementTypeEnum: import("./DatatypeModel.js").DatatypeModel;
    MeasurementAccuracyRangeStruct: import("./DatatypeModel.js").DatatypeModel;
    MeasurementAccuracyStruct: import("./DatatypeModel.js").DatatypeModel;
    AtomicRequestTypeEnum: import("./DatatypeModel.js").DatatypeModel;
    AtomicAttributeStatusStruct: import("./DatatypeModel.js").DatatypeModel;
    bool: import("./DatatypeModel.js").DatatypeModel;
    map8: import("./DatatypeModel.js").DatatypeModel;
    map16: import("./DatatypeModel.js").DatatypeModel;
    map32: import("./DatatypeModel.js").DatatypeModel;
    map64: import("./DatatypeModel.js").DatatypeModel;
    uint8: import("./DatatypeModel.js").DatatypeModel;
    uint16: import("./DatatypeModel.js").DatatypeModel;
    uint24: import("./DatatypeModel.js").DatatypeModel;
    uint32: import("./DatatypeModel.js").DatatypeModel;
    uint40: import("./DatatypeModel.js").DatatypeModel;
    uint48: import("./DatatypeModel.js").DatatypeModel;
    uint56: import("./DatatypeModel.js").DatatypeModel;
    uint64: import("./DatatypeModel.js").DatatypeModel;
    int8: import("./DatatypeModel.js").DatatypeModel;
    int16: import("./DatatypeModel.js").DatatypeModel;
    int24: import("./DatatypeModel.js").DatatypeModel;
    int32: import("./DatatypeModel.js").DatatypeModel;
    int40: import("./DatatypeModel.js").DatatypeModel;
    int48: import("./DatatypeModel.js").DatatypeModel;
    int56: import("./DatatypeModel.js").DatatypeModel;
    int64: import("./DatatypeModel.js").DatatypeModel;
    single: import("./DatatypeModel.js").DatatypeModel;
    double: import("./DatatypeModel.js").DatatypeModel;
    octstr: import("./DatatypeModel.js").DatatypeModel;
    list: import("./DatatypeModel.js").DatatypeModel;
    struct: import("./DatatypeModel.js").DatatypeModel;
    percent: import("./DatatypeModel.js").DatatypeModel;
    percent100ths: import("./DatatypeModel.js").DatatypeModel;
    tod: import("./DatatypeModel.js").DatatypeModel;
    date: import("./DatatypeModel.js").DatatypeModel;
    epochUs: import("./DatatypeModel.js").DatatypeModel;
    epochS: import("./DatatypeModel.js").DatatypeModel;
    posixMs: import("./DatatypeModel.js").DatatypeModel;
    systimeUs: import("./DatatypeModel.js").DatatypeModel;
    systimeMs: import("./DatatypeModel.js").DatatypeModel;
    elapsedS: import("./DatatypeModel.js").DatatypeModel;
    temperature: import("./DatatypeModel.js").DatatypeModel;
    powerMW: import("./DatatypeModel.js").DatatypeModel;
    amperageMA: import("./DatatypeModel.js").DatatypeModel;
    voltageMV: import("./DatatypeModel.js").DatatypeModel;
    energyMWh: import("./DatatypeModel.js").DatatypeModel;
    enum8: import("./DatatypeModel.js").DatatypeModel;
    enum16: import("./DatatypeModel.js").DatatypeModel;
    priority: import("./DatatypeModel.js").DatatypeModel;
    status: import("./DatatypeModel.js").DatatypeModel;
    groupId: import("./DatatypeModel.js").DatatypeModel;
    endpointNo: import("./DatatypeModel.js").DatatypeModel;
    vendorId: import("./DatatypeModel.js").DatatypeModel;
    devtypeId: import("./DatatypeModel.js").DatatypeModel;
    fabricId: import("./DatatypeModel.js").DatatypeModel;
    fabricIdx: import("./DatatypeModel.js").DatatypeModel;
    clusterId: import("./DatatypeModel.js").DatatypeModel;
    attribId: import("./DatatypeModel.js").DatatypeModel;
    fieldId: import("./DatatypeModel.js").DatatypeModel;
    eventId: import("./DatatypeModel.js").DatatypeModel;
    commandId: import("./DatatypeModel.js").DatatypeModel;
    actionId: import("./DatatypeModel.js").DatatypeModel;
    transId: import("./DatatypeModel.js").DatatypeModel;
    nodeId: import("./DatatypeModel.js").DatatypeModel;
    entryIdx: import("./DatatypeModel.js").DatatypeModel;
    dataVer: import("./DatatypeModel.js").DatatypeModel;
    eventNo: import("./DatatypeModel.js").DatatypeModel;
    string: import("./DatatypeModel.js").DatatypeModel;
    ipadr: import("./DatatypeModel.js").DatatypeModel;
    ipv4Adr: import("./DatatypeModel.js").DatatypeModel;
    ipv6Adr: import("./DatatypeModel.js").DatatypeModel;
    ipv6Pre: import("./DatatypeModel.js").DatatypeModel;
    hwadr: import("./DatatypeModel.js").DatatypeModel;
    semtag: import("./DatatypeModel.js").DatatypeModel;
    namespace: import("./DatatypeModel.js").DatatypeModel;
    tag: import("./DatatypeModel.js").DatatypeModel;
    locationdesc: import("./DatatypeModel.js").DatatypeModel;
    WildcardPathFlagsBitmap: import("./DatatypeModel.js").DatatypeModel;
    SoftwareVersionCertificationStatusEnum: import("./DatatypeModel.js").DatatypeModel;
    any: import("./DatatypeModel.js").DatatypeModel;
    subjectId: import("./DatatypeModel.js").DatatypeModel;
    ClusterRevision: import("./AttributeModel.js").AttributeModel;
    FeatureMap: import("./AttributeModel.js").AttributeModel;
    AttributeList: import("./AttributeModel.js").AttributeModel;
    EventList: import("./AttributeModel.js").AttributeModel;
    AcceptedCommandList: import("./AttributeModel.js").AttributeModel;
    GeneratedCommandList: import("./AttributeModel.js").AttributeModel;
    FabricIndex: import("./FieldModel.js").FieldModel<import("../index.js").FieldElement>;
    BaseDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    RootNodeDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    PowerSourceDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    OtaRequestorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    OtaProviderDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    BridgedNodeDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    ElectricalSensorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    DeviceEnergyManagementDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    SecondaryNetworkInterfaceDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    JointFabricAdministratorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    OnOffLightDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    DimmableLightDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    ColorTemperatureLightDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    ExtendedColorLightDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    OnOffPlugInUnitDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    DimmablePlugInUnitDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    MountedOnOffControlDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    MountedDimmableLoadControlDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    PumpDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    WaterValveDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    OnOffLightSwitchDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    DimmerSwitchDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    ColorDimmerSwitchDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    ControlBridgeDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    PumpControllerDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    GenericSwitchDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    ContactSensorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    LightSensorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    OccupancySensorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    TemperatureSensorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    PressureSensorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    FlowSensorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    HumiditySensorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    OnOffSensorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    SmokeCoAlarmDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    AirQualitySensorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    WaterFreezeDetectorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    WaterLeakDetectorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    RainSensorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    DoorLockDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    DoorLockControllerDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    WindowCoveringDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    WindowCoveringControllerDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    ThermostatDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    FanDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    AirPurifierDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    BasicVideoPlayerDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    CastingVideoPlayerDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    SpeakerDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    ContentAppDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    CastingVideoClientDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    VideoRemoteControlDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    ModeSelectDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    AggregatorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    RoboticVacuumCleanerDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    LaundryWasherDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    RefrigeratorDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    RoomAirConditionerDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    TemperatureControlledCabinetDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    DishwasherDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    LaundryDryerDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    CookSurfaceDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    CooktopDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    OvenDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    ExtractorHoodDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    MicrowaveOvenDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    EnergyEvseDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    WaterHeaterDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    SolarPowerDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    BatteryStorageDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    HeatPumpDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    NetworkInfrastructureManagerDt: import("./DeviceTypeModel.js").DeviceTypeModel;
    ClosureNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    CompassDirectionNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    CompassLocationNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    DirectionNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    LevelNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    LocationNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    NumberNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    PositionNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    LandmarkNamespaceNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    RelativePositionNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    ElectricalMeasurementNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    AreaNamespaceNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    LaundryNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    PowerSourceNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    RefrigeratorNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    RoomAirConditionerNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
    SwitchesNs: import("./SemanticNamespaceModel.js").SemanticNamespaceModel;
};
//# sourceMappingURL=Globals.d.ts.map