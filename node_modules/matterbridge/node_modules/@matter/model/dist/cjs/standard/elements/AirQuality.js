"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var AirQuality_exports = {};
__export(AirQuality_exports, {
  AirQuality: () => AirQuality
});
module.exports = __toCommonJS(AirQuality_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const AirQuality = (0, import_elements.ClusterElement)(
  {
    name: "AirQuality",
    id: 91,
    classification: "application",
    pics: "AIRQUAL",
    details: "This cluster provides an interface to air quality classification using distinct levels with human-readable labels.",
    xref: { document: "cluster", section: "2.9" }
  },
  (0, import_elements.AttributeElement)({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 1 }),
  (0, import_elements.AttributeElement)(
    { name: "FeatureMap", id: 65532, type: "FeatureMap", xref: { document: "cluster", section: "2.9.4" } },
    (0, import_elements.FieldElement)({
      name: "FAIR",
      conformance: "O",
      constraint: "0",
      description: "Fair",
      details: "Cluster supports the Fair air quality level"
    }),
    (0, import_elements.FieldElement)({
      name: "MOD",
      conformance: "O",
      constraint: "1",
      description: "Moderate",
      details: "Cluster supports the Moderate air quality level"
    }),
    (0, import_elements.FieldElement)({
      name: "VPOOR",
      conformance: "O",
      constraint: "2",
      description: "VeryPoor",
      details: "Cluster supports the Very poor air quality level"
    }),
    (0, import_elements.FieldElement)({
      name: "XPOOR",
      conformance: "O",
      constraint: "3",
      description: "ExtremelyPoor",
      details: "Cluster supports the Extremely poor air quality level"
    })
  ),
  (0, import_elements.AttributeElement)({
    name: "AirQuality",
    id: 0,
    type: "AirQualityEnum",
    access: "R V",
    conformance: "M",
    constraint: "desc",
    default: 0,
    details: "Indicates a value from AirQualityEnum that is indicative of the currently measured air quality.",
    xref: { document: "cluster", section: "2.9.6.1" }
  }),
  (0, import_elements.DatatypeElement)(
    {
      name: "AirQualityEnum",
      type: "enum8",
      details: "The AirQualityEnum provides a representation of the quality of the analyzed air. It is up to the device manufacturer to determine the mapping between the measured values and their corresponding enumeration values.",
      xref: { document: "cluster", section: "2.9.5.1" }
    },
    (0, import_elements.FieldElement)({ name: "Unknown", id: 0, conformance: "M", description: "The air quality is unknown." }),
    (0, import_elements.FieldElement)({ name: "Good", id: 1, conformance: "M", description: "The air quality is good." }),
    (0, import_elements.FieldElement)({ name: "Fair", id: 2, conformance: "FAIR", description: "The air quality is fair." }),
    (0, import_elements.FieldElement)({ name: "Moderate", id: 3, conformance: "MOD", description: "The air quality is moderate." }),
    (0, import_elements.FieldElement)({ name: "Poor", id: 4, conformance: "M", description: "The air quality is poor." }),
    (0, import_elements.FieldElement)({ name: "VeryPoor", id: 5, conformance: "VPOOR", description: "The air quality is very poor." }),
    (0, import_elements.FieldElement)({ name: "ExtremelyPoor", id: 6, conformance: "XPOOR", description: "The air quality is extremely poor." })
  )
);
import_MatterDefinition.MatterDefinition.children.push(AirQuality);
//# sourceMappingURL=AirQuality.js.map
