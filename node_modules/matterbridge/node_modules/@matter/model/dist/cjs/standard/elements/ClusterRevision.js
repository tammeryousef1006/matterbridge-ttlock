"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ClusterRevision_exports = {};
__export(ClusterRevision_exports, {
  ClusterRevision: () => ClusterRevision
});
module.exports = __toCommonJS(ClusterRevision_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const ClusterRevision = (0, import_elements.AttributeElement)({
  name: "ClusterRevision",
  id: 65533,
  type: "uint16",
  access: "R V",
  conformance: "M",
  constraint: "min 1",
  isSeed: true,
  quality: "F",
  details: "The ClusterRevision attribute indicates the revision of the server cluster specification supported by the cluster instance. An implementation of a cluster specification before the ClusterRevision attribute was added shall have an assumed cluster revision of 0 (zero). For a new cluster specification, the initial value for the ClusterRevision attribute shall be 1 (not zero).\nA history of revision numbers for a cluster specification release is listed in the Revision History section for a cluster specification. Each new revision of a cluster specification shall specify a new revision number incremented (by 1) from the last. The highest revision number in a cluster specification\u2019s Revision History is the revision number for the cluster specification. Therefore, a ClusterRevision attribute value shall be the (highest) revision number of the cluster specification that has been implemented.",
  xref: { document: "core", section: "7.13.1" }
});
import_MatterDefinition.MatterDefinition.children.push(ClusterRevision);
//# sourceMappingURL=ClusterRevision.js.map
