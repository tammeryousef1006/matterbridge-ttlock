"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ColorControl_exports = {};
__export(ColorControl_exports, {
  ColorControl: () => ColorControl
});
module.exports = __toCommonJS(ColorControl_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const ColorControl = (0, import_elements.ClusterElement)(
  {
    name: "ColorControl",
    id: 768,
    classification: "application",
    pics: "CC",
    details: "This cluster provides an interface for changing the color of a light. Color is specified according to the CIE 1931 Color space. Color control is carried out in terms of x,y values, as defined by this specification.\nAdditionally, color may optionally be controlled in terms of color temperature, or as hue and saturation values based on optionally variable RGB and W color points. It is recommended that the hue and saturation are interpreted according to the HSV (a.k.a. HSB) color model.\nControl over luminance is not included, as this is provided by means of the Level Control for Lighting cluster. It is recommended that the level provided by this cluster be interpreted as representing a proportion of the maximum intensity achievable at the current color.",
    xref: { document: "cluster", section: "3.2" }
  },
  (0, import_elements.AttributeElement)({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 7 }),
  (0, import_elements.AttributeElement)(
    { name: "FeatureMap", id: 65532, type: "FeatureMap", xref: { document: "cluster", section: "3.2.4" } },
    (0, import_elements.FieldElement)({
      name: "HS",
      conformance: "EHUE, O",
      constraint: "0",
      description: "HueSaturation",
      details: "Supports color specification via hue/saturation."
    }),
    (0, import_elements.FieldElement)({
      name: "EHUE",
      conformance: "CL, O",
      constraint: "1",
      description: "EnhancedHue",
      details: "Enhanced hue is supported."
    }),
    (0, import_elements.FieldElement)({
      name: "CL",
      conformance: "O",
      constraint: "2",
      description: "ColorLoop",
      details: "Color loop is supported."
    }),
    (0, import_elements.FieldElement)({
      name: "XY",
      conformance: "O",
      constraint: "3",
      description: "Xy",
      details: "Supports color specification via XY."
    }),
    (0, import_elements.FieldElement)({
      name: "CT",
      conformance: "O",
      constraint: "4",
      description: "ColorTemperature",
      details: "Supports specification of color temperature."
    })
  ),
  (0, import_elements.AttributeElement)(
    {
      name: "CurrentHue",
      id: 0,
      type: "uint8",
      access: "R V",
      conformance: "HS",
      constraint: "max 254",
      default: 0,
      quality: "N P Q",
      details: 'The CurrentHue attribute contains the current hue value of the light. It is updated as fast as practical during commands that change the hue.\nThe hue in degrees shall be related to the CurrentHue attribute by the relationship:\nHue = "CurrentHue" * 360 / 254\nwhere CurrentHue is in the range from 0 to 254 inclusive.\nChanges to this attribute shall only be marked as reportable in the following cases:\n  \u2022 At most once per second or\n  \u2022 At the end of the movement/transition.',
      xref: { document: "cluster", section: "3.2.7.2" }
    }
  ),
  (0, import_elements.AttributeElement)(
    {
      name: "CurrentSaturation",
      id: 1,
      type: "uint8",
      access: "R V",
      conformance: "HS",
      constraint: "max 254",
      default: 0,
      quality: "N S P Q",
      details: 'Indicates the current saturation value of the light. It is updated as fast as practical during commands that change the saturation.\nThe saturation (on a scale from 0.0 to 1.0) shall be related to the CurrentSaturation attribute by the relationship:\nSaturation = "CurrentSaturation" / 254\nwhere CurrentSaturation is in the range from 0 to 254 inclusive.\nChanges to this attribute shall only be marked as reportable in the following cases:\n  \u2022 At most once per second or\n  \u2022 At the end of the movement/transition.',
      xref: { document: "cluster", section: "3.2.7.3" }
    }
  ),
  (0, import_elements.AttributeElement)({
    name: "RemainingTime",
    id: 2,
    type: "uint16",
    access: "R V",
    conformance: "O",
    constraint: "0 to 65535",
    default: 0,
    quality: "Q",
    details: "Indicates the time remaining, in 1/10ths of a second, until transitions due to the currently active command will be complete.\nChanges to this attribute shall only be marked as reportable in the following cases:\n  \u2022 When it changes from 0 to any value higher than 10, or\n  \u2022 When it changes, with a delta larger than 10, caused by the invoke of a command, or\n  \u2022 When it changes to 0.\nFor commands with a transition time or changes to the transition time less than 1 second, changes to this attribute shall NOT be reported.\nAs this attribute is not being reported during a regular countdown, clients SHOULD NOT rely on the reporting of this attribute in order to keep track of the remaining duration.",
    xref: { document: "cluster", section: "3.2.7.4" }
  }),
  (0, import_elements.AttributeElement)(
    {
      name: "CurrentX",
      id: 3,
      type: "uint16",
      access: "R V",
      conformance: "XY",
      constraint: "max 65279",
      default: 24939,
      quality: "N S P Q",
      details: 'Indicates the current value of the normalized chromaticity value x, as defined in the CIE xyY Color Space. It is updated as fast as practical during commands that change the color.\nThe value of x shall be related to the CurrentX attribute by the relationship\nx = "CurrentX" / 65536\nwhere CurrentX is in the range from 0 to 65279 inclusive.\nChanges to this attribute shall only be marked as reportable in the following cases:\n  \u2022 At most once per second or\n  \u2022 At the end of the movement/transition.',
      xref: { document: "cluster", section: "3.2.7.5" }
    }
  ),
  (0, import_elements.AttributeElement)(
    {
      name: "CurrentY",
      id: 4,
      type: "uint16",
      access: "R V",
      conformance: "XY",
      constraint: "max 65279",
      default: 24701,
      quality: "N S P Q",
      details: 'Indicates the current value of the normalized chromaticity value y, as defined in the CIE xyY Color Space. It is updated as fast as practical during commands that change the color.\nThe value of y shall be related to the CurrentY attribute by the relationship\ny = "CurrentY" / 65536\nwhere CurrentY is in the range from 0 to 65279 inclusive.\nChanges to this attribute shall only be marked as reportable in the following cases:\n  \u2022 At most once per second or\n  \u2022 At the end of the movement/transition.',
      xref: { document: "cluster", section: "3.2.7.6" }
    }
  ),
  (0, import_elements.AttributeElement)({
    name: "DriftCompensation",
    id: 5,
    type: "DriftCompensationEnum",
    access: "R V",
    conformance: "O",
    details: "Indicates what mechanism, if any, is in use for compensation for color/intensity drift over time.",
    xref: { document: "cluster", section: "3.2.7.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "CompensationText",
    id: 6,
    type: "string",
    access: "R V",
    conformance: "O",
    constraint: "max 254",
    details: "This attribute shall contain a textual indication of what mechanism, if any, is in use to compensate for color/intensity drift over time.",
    xref: { document: "cluster", section: "3.2.7.8" }
  }),
  (0, import_elements.AttributeElement)(
    {
      name: "ColorTemperatureMireds",
      id: 7,
      type: "uint16",
      access: "R V",
      conformance: "CT",
      constraint: "colorTempPhysicalMinMireds to colorTempPhysicalMaxMireds",
      default: 250,
      quality: "N S P Q",
      details: 'Indicates a scaled inverse of the current value of the color temperature. The unit of ColorTemperatureMireds is the mired (micro reciprocal degree), a.k.a. mirek (micro reciprocal kelvin). It is updated as fast as practical during commands that change the color.\nChanges to this attribute shall only be marked as reportable in the following cases:\n  \u2022 At most once per second or\n  \u2022 At the end of the movement/transition.\nThe color temperature value in kelvins shall be related to the ColorTemperatureMireds attribute in mired by the relationship\n"Color temperature [K]" = "1,000,000" / "ColorTemperatureMireds"\nwhere ColorTemperatureMireds is in the range from 1 to 65279 inclusive, giving a color temperature range from 1,000,000 K to 15.32 K.\nIf this attribute is implemented then the ColorMode attribute shall also be implemented.',
      xref: { document: "cluster", section: "3.2.7.9" }
    }
  ),
  (0, import_elements.AttributeElement)({
    name: "ColorMode",
    id: 8,
    type: "ColorModeEnum",
    access: "R V",
    conformance: "M",
    quality: "N",
    details: "Indicates which attributes are currently determining the color of the device.\nThe value of the ColorMode attribute cannot be written directly - it is set upon reception of any command in section Commands to the appropriate mode for that command.",
    xref: { document: "cluster", section: "3.2.7.10" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Options",
    id: 15,
    type: "OptionsBitmap",
    access: "RW VO",
    conformance: "M",
    constraint: "desc",
    default: 0,
    details: "Indicates a bitmap that determines the default behavior of some cluster commands. Each command that is dependent on the Options attribute shall first construct a temporary Options bitmap that is in effect during the command processing. The temporary Options bitmap has the same format and meaning as the Options attribute, but includes any bits that may be overridden by command fields.\nThis attribute is meant to be changed only during commissioning.\nBelow is the format and description of the Options attribute and temporary Options bitmap and the effect on dependent commands.\nCommand execution shall NOT continue beyond the Options processing if all of these criteria are true:\n  \u2022 The On/Off cluster exists on the same endpoint as this cluster.\n  \u2022 The OnOff attribute of the On/Off cluster, on this endpoint, is FALSE.\n  \u2022 The value of the ExecuteIfOff bit is 0.",
    xref: { document: "cluster", section: "3.2.7.11" }
  }),
  (0, import_elements.AttributeElement)({
    name: "NumberOfPrimaries",
    id: 16,
    type: "uint8",
    access: "R V",
    conformance: "M",
    constraint: "max 6",
    quality: "X F",
    details: "Indicates the number of color primaries implemented on this device. A value of null shall indicate that the number of primaries is unknown.\nWhere this attribute is implemented, the attributes below for indicating the \u201Cx\u201D and \u201Cy\u201D color values of the primaries shall also be implemented for each of the primaries from 1 to NumberOfPrimaries, without leaving gaps. Implementation of the Primary1Intensity attribute and subsequent intensity attributes is optional.",
    xref: { document: "cluster", section: "3.2.7.24" }
  }),
  (0, import_elements.AttributeElement)(
    {
      name: "Primary1X",
      id: 17,
      type: "uint16",
      access: "R V",
      conformance: "NumberOfPrimaries > 0",
      constraint: "max 65279",
      quality: "F",
      details: "Indicates the normalized chromaticity value x for this primary, as defined in the CIE xyY Color Space.\nThe value of x shall be related to the Primary1X attribute by the relationship x = Primary1X / 65536 (Primary1X in the range 0 to 65279 inclusive)",
      xref: { document: "cluster", section: "3.2.7.25" }
    }
  ),
  (0, import_elements.AttributeElement)(
    {
      name: "Primary1Y",
      id: 18,
      type: "uint16",
      access: "R V",
      conformance: "NumberOfPrimaries > 0",
      constraint: "max 65279",
      quality: "F",
      details: "Indicates the normalized chromaticity value y for this primary, as defined in the CIE xyY Color Space.\nThe value of y shall be related to the Primary1Y attribute by the relationship y = Primary1Y / 65536 (Primary1Y in the range 0 to 65279 inclusive)",
      xref: { document: "cluster", section: "3.2.7.26" }
    }
  ),
  (0, import_elements.AttributeElement)({
    name: "Primary1Intensity",
    id: 19,
    type: "uint8",
    access: "R V",
    conformance: "NumberOfPrimaries > 0",
    quality: "X F",
    details: "Indicates a representation of the maximum intensity of this primary as defined in the Dimming Light Curve in the Ballast Configuration cluster (see Ballast Configuration Cluster), normalized such that the primary with the highest maximum intensity contains the value 254.\nA value of null shall indicate that this primary is not available.\n3.2.7.28. Primary2X, Primary2Y, Primary2Intensity, Primary3X, Primary3Y, Primary3Intensity, Primary4X, Primary4Y, Primary4Intensity, Primary5X, Primary5Y, Primary5Intensity, Primary6X, Primary6Y and Primary6Intensity Attributes\nThese attributes shall represent the capabilities of the 2nd, 3rd, 4th, 5th and 6th primaries, where present, in the same way as for the Primary1X, Primary1Y and Primary1Intensity attributes.",
    xref: { document: "cluster", section: "3.2.7.27" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary2X",
    id: 21,
    type: "uint16",
    access: "R V",
    conformance: "NumberOfPrimaries > 1",
    constraint: "max 65279",
    quality: "F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary2Y",
    id: 22,
    type: "uint16",
    access: "R V",
    conformance: "NumberOfPrimaries > 1",
    constraint: "max 65279",
    quality: "F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary2Intensity",
    id: 23,
    type: "uint8",
    access: "R V",
    conformance: "NumberOfPrimaries > 1",
    quality: "X F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary3X",
    id: 25,
    type: "uint16",
    access: "R V",
    conformance: "NumberOfPrimaries > 2",
    constraint: "max 65279",
    quality: "F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary3Y",
    id: 26,
    type: "uint16",
    access: "R V",
    conformance: "NumberOfPrimaries > 2",
    constraint: "max 65279",
    quality: "F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary3Intensity",
    id: 27,
    type: "uint8",
    access: "R V",
    conformance: "NumberOfPrimaries > 2",
    quality: "X F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary4X",
    id: 32,
    type: "uint16",
    access: "R V",
    conformance: "NumberOfPrimaries > 3",
    constraint: "max 65279",
    quality: "F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary4Y",
    id: 33,
    type: "uint16",
    access: "R V",
    conformance: "NumberOfPrimaries > 3",
    constraint: "max 65279",
    quality: "F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary4Intensity",
    id: 34,
    type: "uint8",
    access: "R V",
    conformance: "NumberOfPrimaries > 3",
    quality: "X F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary5X",
    id: 36,
    type: "uint16",
    access: "R V",
    conformance: "NumberOfPrimaries > 4",
    constraint: "max 65279",
    quality: "F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary5Y",
    id: 37,
    type: "uint16",
    access: "R V",
    conformance: "NumberOfPrimaries > 4",
    constraint: "max 65279",
    quality: "F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary5Intensity",
    id: 38,
    type: "uint8",
    access: "R V",
    conformance: "NumberOfPrimaries > 4",
    quality: "X F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary6X",
    id: 40,
    type: "uint16",
    access: "R V",
    conformance: "NumberOfPrimaries > 5",
    constraint: "max 65279",
    quality: "F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary6Y",
    id: 41,
    type: "uint16",
    access: "R V",
    conformance: "NumberOfPrimaries > 5",
    constraint: "max 65279",
    quality: "F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Primary6Intensity",
    id: 42,
    type: "uint8",
    access: "R V",
    conformance: "NumberOfPrimaries > 5",
    quality: "X F",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)(
    {
      name: "WhitePointX",
      id: 48,
      type: "uint16",
      access: "RW VM",
      conformance: "O",
      constraint: "max 65279",
      details: "Indicates the normalized chromaticity value x, as defined in the CIE xyY Color Space, of the current white point of the device.\nThe value of x shall be related to the WhitePointX attribute by the relationship x = WhitePointX / 65536 (WhitePointX in the range 0 to 65279 inclusive)",
      xref: { document: "cluster", section: "3.2.7.29" }
    }
  ),
  (0, import_elements.AttributeElement)(
    {
      name: "WhitePointY",
      id: 49,
      type: "uint16",
      access: "RW VM",
      conformance: "O",
      constraint: "max 65279",
      details: "Indicates the normalized chromaticity value y, as defined in the CIE xyY Color Space, of the current white point of the device.\nThe value of y shall be related to the WhitePointY attribute by the relationship y = WhitePointY / 65536 (WhitePointY in the range 0 to 65279 inclusive)",
      xref: { document: "cluster", section: "3.2.7.30" }
    }
  ),
  (0, import_elements.AttributeElement)(
    {
      name: "ColorPointRx",
      id: 50,
      type: "uint16",
      access: "RW VM",
      conformance: "O",
      constraint: "max 65279",
      details: "Indicates the normalized chromaticity value x, as defined in the CIE xyY Color Space, of the red color point of the device.\nThe value of x shall be related to the ColorPointRX attribute by the relationship x = ColorPointRX / 65536 (ColorPointRX in the range 0 to 65279 inclusive)",
      xref: { document: "cluster", section: "3.2.7.31" }
    }
  ),
  (0, import_elements.AttributeElement)(
    {
      name: "ColorPointRy",
      id: 51,
      type: "uint16",
      access: "RW VM",
      conformance: "O",
      constraint: "max 65279",
      details: "Indicates the normalized chromaticity value y, as defined in the CIE xyY Color Space, of the red color point of the device.\nThe value of y shall be related to the ColorPointRY attribute by the relationship y = ColorPointRY / 65536 (ColorPointRY in the range 0 to 65279 inclusive)",
      xref: { document: "cluster", section: "3.2.7.32" }
    }
  ),
  (0, import_elements.AttributeElement)({
    name: "ColorPointRIntensity",
    id: 52,
    type: "uint8",
    access: "RW VM",
    conformance: "O",
    quality: "X",
    details: "Indicates a representation of the relative intensity of the red color point as defined in the Dimming Light Curve in the Ballast Configuration cluster (see Ballast Configuration Cluster), normalized such that the color point with the highest relative intensity contains the value 254.\nA value of null shall indicate an invalid value.\n3.2.7.34. ColorPointGX, ColorPointGY, ColorPointGIntensity, ColorPointBX, ColorPointBY and ColorPointBIntensity Attributes\nThese attributes shall represent the chromaticity values and intensities of the green and blue color points, in the same way as for the ColorPointRX, ColorPointRY and ColorPointRIntensity attributes.\nIf any one of these red, green or blue color point attributes is implemented then they shall all be implemented.",
    xref: { document: "cluster", section: "3.2.7.33" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ColorPointGx",
    id: 54,
    type: "uint16",
    access: "RW VM",
    conformance: "O",
    constraint: "max 65279",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ColorPointGy",
    id: 55,
    type: "uint16",
    access: "RW VM",
    conformance: "O",
    constraint: "max 65279",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ColorPointGIntensity",
    id: 56,
    type: "uint8",
    access: "RW VM",
    conformance: "O",
    quality: "X",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ColorPointBx",
    id: 58,
    type: "uint16",
    access: "RW VM",
    conformance: "O",
    constraint: "max 65279",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ColorPointBy",
    id: 59,
    type: "uint16",
    access: "RW VM",
    conformance: "O",
    constraint: "max 65279",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ColorPointBIntensity",
    id: 60,
    type: "uint8",
    access: "RW VM",
    conformance: "O",
    quality: "X",
    xref: { document: "cluster", section: "3.2.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "EnhancedCurrentHue",
    id: 16384,
    type: "uint16",
    access: "R V",
    conformance: "EHUE",
    default: 0,
    quality: "N S Q",
    details: "Indicates the non-equidistant steps along the CIE 1931 color triangle, and it provides 16-bits precision.\nThe upper 8 bits of this attribute shall be used as an index in the implementation specific XY lookup table to provide the non-equidistant steps. The lower 8 bits shall be used to interpolate between these steps in a linear way in order to provide color zoom for the user.\nTo provide compatibility with clients not supporting EHUE, the CurrentHue attribute shall contain a hue value in the range 0 to 254, calculated from the EnhancedCurrentHue attribute.\nChanges to this attribute shall only be marked as reportable in the following cases:\n  \u2022 At most once per second or\n  \u2022 At the end of the movement/transition.",
    xref: { document: "cluster", section: "3.2.7.12" }
  }),
  (0, import_elements.AttributeElement)({
    name: "EnhancedColorMode",
    id: 16385,
    type: "EnhancedColorModeEnum",
    access: "R V",
    conformance: "M",
    default: 1,
    quality: "N S",
    details: "Indicates which attributes are currently determining the color of the device.\nTo provide compatibility with clients not supporting EHUE, the original ColorMode attribute shall indicate CurrentHue and CurrentSaturation when the light uses the EnhancedCurrentHue attribute. If the ColorMode attribute is changed, its new value shall be copied to the EnhancedColorMode attribute.",
    xref: { document: "cluster", section: "3.2.7.13" }
  }),
  (0, import_elements.AttributeElement)(
    {
      name: "ColorLoopActive",
      id: 16386,
      type: "enum16",
      access: "R V",
      conformance: "CL",
      constraint: "max 1",
      default: 0,
      quality: "N S",
      details: "Indicates the current active status of the color loop. If this attribute has the value 0, the color loop shall NOT be active. If this attribute has the value 1, the color loop shall be active.",
      xref: { document: "cluster", section: "3.2.7.14" }
    },
    (0, import_elements.FieldElement)({ name: "Inactive", id: 0 }),
    (0, import_elements.FieldElement)({ name: "Active", id: 1 })
  ),
  (0, import_elements.AttributeElement)({
    name: "ColorLoopDirection",
    id: 16387,
    type: "ColorLoopDirectionEnum",
    access: "R V",
    asOf: "1.4",
    conformance: "CL",
    constraint: "max 1",
    default: 0,
    quality: "N S",
    details: "Indicates the current direction of the color loop. If this attribute has the value 0, the EnhancedCurrentHue attribute shall be decremented. If this attribute has the value 1, the EnhancedCurrentHue attribute shall be incremented.",
    xref: { document: "cluster", section: "3.2.7.15" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ColorLoopTime",
    id: 16388,
    type: "uint16",
    access: "R V",
    conformance: "CL",
    default: 25,
    quality: "N S",
    details: "Indicates the number of seconds it shall take to perform a full color loop, i.e., to cycle all values of the EnhancedCurrentHue attribute (between 0 and 65534).",
    xref: { document: "cluster", section: "3.2.7.16" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ColorLoopStartEnhancedHue",
    id: 16389,
    type: "uint16",
    access: "R V",
    conformance: "CL",
    default: 8960,
    details: "Indicates the value of the EnhancedCurrentHue attribute from which the color loop shall be started.",
    xref: { document: "cluster", section: "3.2.7.17" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ColorLoopStoredEnhancedHue",
    id: 16390,
    type: "uint16",
    access: "R V",
    conformance: "CL",
    default: 0,
    details: "Indicates the value of the EnhancedCurrentHue attribute before the color loop was started. Once the color loop is complete, the EnhancedCurrentHue attribute shall be restored to this value.",
    xref: { document: "cluster", section: "3.2.7.18" }
  }),
  (0, import_elements.AttributeElement)(
    {
      name: "ColorCapabilities",
      id: 16394,
      type: "map16",
      access: "R V",
      conformance: "M",
      constraint: "max 31",
      default: 0,
      details: "Indicates the color control capabilities of the device.\nBits 0-4 of the ColorCapabilities attribute shall have the same values as the corresponding bits of the FeatureMap attribute. All other bits in ColorCapabilities shall be 0.",
      xref: { document: "cluster", section: "3.2.7.19" }
    },
    (0, import_elements.FieldElement)({ name: "HueSaturation", constraint: "0", description: "Supports color specification via hue/saturation." }),
    (0, import_elements.FieldElement)({ name: "EnhancedHue", constraint: "1", description: "Enhanced hue is supported." }),
    (0, import_elements.FieldElement)({ name: "ColorLoop", constraint: "2", description: "Color loop is supported." }),
    (0, import_elements.FieldElement)({ name: "XY", constraint: "3", description: "Supports color specification via XY." }),
    (0, import_elements.FieldElement)({
      name: "ColorTemperature",
      constraint: "4",
      description: "Supports color specification via color temperature."
    })
  ),
  (0, import_elements.AttributeElement)({
    name: "ColorTempPhysicalMinMireds",
    id: 16395,
    type: "uint16",
    access: "R V",
    conformance: "CT",
    constraint: "1 to 65279",
    details: "Indicates the minimum mired value supported by the hardware. ColorTempPhysicalMinMireds corresponds to the maximum color temperature in kelvins supported by the hardware.\nColorTempPhysicalMinMireds <= ColorTemperatureMireds.",
    xref: { document: "cluster", section: "3.2.7.20" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ColorTempPhysicalMaxMireds",
    id: 16396,
    type: "uint16",
    access: "R V",
    conformance: "CT",
    constraint: "max 65279",
    details: "Indicates the maximum mired value supported by the hardware. ColorTempPhysicalMaxMireds corresponds to the minimum color temperature in kelvins supported by the hardware.\nColorTemperatureMireds <= ColorTempPhysicalMaxMireds.",
    xref: { document: "cluster", section: "3.2.7.21" }
  }),
  (0, import_elements.AttributeElement)(
    {
      name: "CoupleColorTempToLevelMinMireds",
      id: 16397,
      type: "uint16",
      access: "R V",
      conformance: "CT & ColorTemperatureMireds",
      constraint: "colorTempPhysicalMinMireds to colorTemperatureMireds",
      details: "Indicates a lower bound on the value of the ColorTemperatureMireds attribute for the purposes of coupling the ColorTemperatureMireds attribute to the CurrentLevel attribute when the CoupleColorTempToLevel bit of the Options attribute of the Level Control cluster is equal to 1. When coupling the ColorTemperatureMireds attribute to the CurrentLevel attribute, this value shall correspond to a CurrentLevel value of 254 (100%).\nThis attribute shall be set such that the following relationship exists: ColorTempPhysicalMinMireds <= CoupleColorTempToLevelMinMireds <= ColorTemperatureMireds\nNote that since this attribute is stored as a micro reciprocal degree (mired) value (i.e. color temperature in kelvins = 1,000,000 / CoupleColorTempToLevelMinMireds), the CoupleColorTempToLevelMinMireds attribute corresponds to an upper bound on the value of the color temperature\nin kelvins supported by the device.",
      xref: { document: "cluster", section: "3.2.7.22" }
    }
  ),
  (0, import_elements.AttributeElement)({
    name: "StartUpColorTemperatureMireds",
    id: 16400,
    type: "uint16",
    access: "RW VM",
    conformance: "CT & ColorTemperatureMireds",
    constraint: "1 to 65279",
    quality: "X N",
    details: "Indicates the desired startup color temperature value the light shall use when it is supplied with power and this value shall be reflected in the ColorTemperatureMireds attribute. In addition, the ColorMode and EnhancedColorMode attributes shall be set to 2 (ColorTemperatureMireds). The values of the StartUpColorTemperatureMireds attribute are listed in the table below,",
    xref: { document: "cluster", section: "3.2.7.23" }
  }),
  (0, import_elements.CommandElement)(
    {
      name: "MoveToHue",
      id: 0,
      access: "O",
      conformance: "HS",
      direction: "request",
      response: "status",
      xref: { document: "cluster", section: "3.2.8.4" }
    },
    (0, import_elements.FieldElement)({
      name: "Hue",
      id: 0,
      type: "uint8",
      conformance: "M",
      constraint: "max 254",
      details: "This field shall indicate the hue to be moved to.",
      xref: { document: "cluster", section: "3.2.8.4.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Direction",
      id: 1,
      type: "DirectionEnum",
      conformance: "M",
      details: "This field shall indicate the movement direction.",
      xref: { document: "cluster", section: "3.2.8.4.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "TransitionTime",
      id: 2,
      type: "uint16",
      conformance: "M",
      constraint: "max 65534",
      details: "This field shall indicate, in 1/10ths of a second, the time that shall be taken to move to the new hue.",
      xref: { document: "cluster", section: "3.2.8.4.3" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 4, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "MoveHue",
      id: 1,
      access: "O",
      conformance: "HS",
      direction: "request",
      response: "status",
      xref: { document: "cluster", section: "3.2.8.5" }
    },
    (0, import_elements.FieldElement)({
      name: "MoveMode",
      id: 0,
      type: "MoveModeEnum",
      conformance: "M",
      details: "This field shall indicate the mode of movement.",
      xref: { document: "cluster", section: "3.2.8.5.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Rate",
      id: 1,
      type: "uint8",
      conformance: "M",
      details: "This field shall indicate the rate of movement in steps per second. A step is a change in the device\u2019s hue of one unit.",
      xref: { document: "cluster", section: "3.2.8.5.2" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 2, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "StepHue",
      id: 2,
      access: "O",
      conformance: "HS",
      direction: "request",
      response: "status",
      xref: { document: "cluster", section: "3.2.8.6" }
    },
    (0, import_elements.FieldElement)({
      name: "StepMode",
      id: 0,
      type: "StepModeEnum",
      conformance: "M",
      details: "This field shall indicate the mode of the step to be performed.",
      xref: { document: "cluster", section: "3.2.8.6.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "StepSize",
      id: 1,
      type: "uint8",
      conformance: "M",
      details: "This field shall indicate the change to be added to (or subtracted from) the current value of the device\u2019s hue.",
      xref: { document: "cluster", section: "3.2.8.6.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "TransitionTime",
      id: 2,
      type: "uint8",
      conformance: "M",
      details: "This field shall indicate, in 1/10ths of a second, the time that shall be taken to perform the step.\nA step is a change in the device\u2019s hue of Step size units.\nNOTE\nHere the TransitionTime data field is of data type uint8, where uint16 is more common for TransitionTime data fields in other clusters / commands.",
      xref: { document: "cluster", section: "3.2.8.6.3" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 4, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "MoveToSaturation",
      id: 3,
      access: "O",
      conformance: "HS",
      direction: "request",
      response: "status",
      xref: { document: "cluster", section: "3.2.8.7" }
    },
    (0, import_elements.FieldElement)({ name: "Saturation", id: 0, type: "uint8", conformance: "M", constraint: "max 254" }),
    (0, import_elements.FieldElement)({ name: "TransitionTime", id: 1, type: "uint16", conformance: "M", constraint: "max 65534" }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 2, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "MoveSaturation",
      id: 4,
      access: "O",
      conformance: "HS",
      direction: "request",
      response: "status",
      xref: { document: "cluster", section: "3.2.8.8" }
    },
    (0, import_elements.FieldElement)({
      name: "MoveMode",
      id: 0,
      type: "MoveModeEnum",
      conformance: "M",
      details: "This field shall indicate the mode of movement, as described in the MoveHue command.",
      xref: { document: "cluster", section: "3.2.8.8.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Rate",
      id: 1,
      type: "uint8",
      conformance: "M",
      details: "This field shall indicate the rate of movement in steps per second. A step is a change in the device\u2019s saturation of one unit.",
      xref: { document: "cluster", section: "3.2.8.8.2" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 2, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "StepSaturation",
      id: 5,
      access: "O",
      conformance: "HS",
      direction: "request",
      response: "status",
      xref: { document: "cluster", section: "3.2.8.9" }
    },
    (0, import_elements.FieldElement)({
      name: "StepMode",
      id: 0,
      type: "StepModeEnum",
      conformance: "M",
      details: "This field shall indicate the mode of the step to be performed, as described in the StepHue command.",
      xref: { document: "cluster", section: "3.2.8.9.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "StepSize",
      id: 1,
      type: "uint8",
      conformance: "M",
      details: "This field shall indicate the change to be added to (or subtracted from) the current value of the device\u2019s saturation.",
      xref: { document: "cluster", section: "3.2.8.9.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "TransitionTime",
      id: 2,
      type: "uint8",
      conformance: "M",
      details: "This field shall indicate, in 1/10ths of a second, the time that shall be taken to perform the step. A step is a change in the device\u2019s saturation of Step size units.\nNOTE\nHere the TransitionTime data field is of data type uint8, where uint16 is more common for TransitionTime data fields in other clusters / commands.",
      xref: { document: "cluster", section: "3.2.8.9.3" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 4, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "MoveToHueAndSaturation",
      id: 6,
      access: "O",
      conformance: "HS",
      direction: "request",
      response: "status",
      xref: { document: "cluster", section: "3.2.8.10" }
    },
    (0, import_elements.FieldElement)({ name: "Hue", id: 0, type: "uint8", conformance: "M", constraint: "max 254" }),
    (0, import_elements.FieldElement)({ name: "Saturation", id: 1, type: "uint8", conformance: "M", constraint: "max 254" }),
    (0, import_elements.FieldElement)({ name: "TransitionTime", id: 2, type: "uint16", conformance: "M", constraint: "max 65534" }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 4, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "MoveToColor",
      id: 7,
      access: "O",
      conformance: "XY",
      direction: "request",
      response: "status",
      xref: { document: "cluster", section: "3.2.8.11" }
    },
    (0, import_elements.FieldElement)({ name: "ColorX", id: 0, type: "uint16", conformance: "M", constraint: "max 65279" }),
    (0, import_elements.FieldElement)({ name: "ColorY", id: 1, type: "uint16", conformance: "M", constraint: "max 65279" }),
    (0, import_elements.FieldElement)({ name: "TransitionTime", id: 2, type: "uint16", conformance: "M", constraint: "max 65534" }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 4, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "MoveColor",
      id: 8,
      access: "O",
      conformance: "XY",
      direction: "request",
      response: "status",
      xref: { document: "cluster", section: "3.2.8.12" }
    },
    (0, import_elements.FieldElement)({
      name: "RateX",
      id: 0,
      type: "int16",
      conformance: "M",
      details: "This field shall indicate the rate of movement in steps per second. A step is a change in the device\u2019s CurrentX attribute of one unit.",
      xref: { document: "cluster", section: "3.2.8.12.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "RateY",
      id: 1,
      type: "int16",
      conformance: "M",
      details: "This field shall indicate the rate of movement in steps per second. A step is a change in the device\u2019s CurrentY attribute of one unit.",
      xref: { document: "cluster", section: "3.2.8.12.2" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 2, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "StepColor",
      id: 9,
      access: "O",
      conformance: "XY",
      direction: "request",
      response: "status",
      xref: { document: "cluster", section: "3.2.8.13" }
    },
    (0, import_elements.FieldElement)({ name: "StepX", id: 0, type: "int16", conformance: "M" }),
    (0, import_elements.FieldElement)({ name: "StepY", id: 1, type: "int16", conformance: "M" }),
    (0, import_elements.FieldElement)({
      name: "TransitionTime",
      id: 2,
      type: "uint16",
      conformance: "M",
      constraint: "max 65534",
      details: "The field shall indicate, in 1/10ths of a second, the time that shall be taken to perform the color change.",
      xref: { document: "cluster", section: "3.2.8.13.2" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 4, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "MoveToColorTemperature",
      id: 10,
      access: "O",
      conformance: "CT",
      direction: "request",
      response: "status",
      xref: { document: "cluster", section: "3.2.8.14" }
    },
    (0, import_elements.FieldElement)({ name: "ColorTemperatureMireds", id: 0, type: "uint16", conformance: "M", constraint: "max 65279" }),
    (0, import_elements.FieldElement)({ name: "TransitionTime", id: 1, type: "uint16", conformance: "M", constraint: "max 65534" }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 2, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "EnhancedMoveToHue",
      id: 64,
      access: "O",
      conformance: "EHUE",
      direction: "request",
      response: "status",
      details: "This command allows the light to be moved in a smooth continuous transition from their current hue to a target hue.",
      xref: { document: "cluster", section: "3.2.8.15" }
    },
    (0, import_elements.FieldElement)({
      name: "EnhancedHue",
      id: 0,
      type: "uint16",
      conformance: "M",
      details: "This field shall indicate the target extended hue for the light.",
      xref: { document: "cluster", section: "3.2.8.15.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Direction",
      id: 1,
      type: "DirectionEnum",
      conformance: "M",
      details: "This field shall indicate the movement direction.",
      xref: { document: "cluster", section: "3.2.8.15.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "TransitionTime",
      id: 2,
      type: "uint16",
      conformance: "M",
      constraint: "max 65534",
      details: "This field shall indicate the transition time, as described in the MoveToHue command.",
      xref: { document: "cluster", section: "3.2.8.15.3" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 4, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "EnhancedMoveHue",
      id: 65,
      access: "O",
      conformance: "EHUE",
      direction: "request",
      response: "status",
      details: "This command allows the light to start a continuous transition starting from their current hue.",
      xref: { document: "cluster", section: "3.2.8.16" }
    },
    (0, import_elements.FieldElement)({
      name: "MoveMode",
      id: 0,
      type: "MoveModeEnum",
      conformance: "M",
      constraint: "desc",
      details: "This field shall indicate the mode of movement, as described in the MoveHue command.",
      xref: { document: "cluster", section: "3.2.8.16.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Rate",
      id: 1,
      type: "uint16",
      conformance: "M",
      details: "This field shall indicate the rate of movement in steps per second. A step is a change in the extended hue of a device by one unit.",
      xref: { document: "cluster", section: "3.2.8.16.2" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 2, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "EnhancedStepHue",
      id: 66,
      access: "O",
      conformance: "EHUE",
      direction: "request",
      response: "status",
      details: "This command allows the light to be moved in a stepped transition from their current hue, resulting in a linear transition through XY space.",
      xref: { document: "cluster", section: "3.2.8.17" }
    },
    (0, import_elements.FieldElement)({
      name: "StepMode",
      id: 0,
      type: "StepModeEnum",
      conformance: "M",
      constraint: "desc",
      details: "This field shall indicate the mode of the step to be performed, as described in the StepHue command.",
      xref: { document: "cluster", section: "3.2.8.17.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "StepSize",
      id: 1,
      type: "uint16",
      conformance: "M",
      details: "This field shall indicate the change to be added to (or subtracted from) the current value of the device\u2019s enhanced hue.",
      xref: { document: "cluster", section: "3.2.8.17.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "TransitionTime",
      id: 2,
      type: "uint16",
      conformance: "M",
      constraint: "max 65534",
      details: "The field shall indicate, in units of 1/10ths of a second, the time that shall be taken to perform the step. A step is a change to the device\u2019s enhanced hue of a magnitude corresponding to the StepSize field.\nNOTE\nHere TransitionTime data field is of data type uint16, while the TransitionTime data field of the StepHue command is of data type uint8.",
      xref: { document: "cluster", section: "3.2.8.17.3" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 4, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "EnhancedMoveToHueAndSaturation",
      id: 67,
      access: "O",
      conformance: "EHUE",
      direction: "request",
      response: "status",
      details: "This command allows the light to be moved in a smooth continuous transition from their current hue to a target hue and from their current saturation to a target saturation.",
      xref: { document: "cluster", section: "3.2.8.18" }
    },
    (0, import_elements.FieldElement)({
      name: "EnhancedHue",
      id: 0,
      type: "uint16",
      conformance: "M",
      details: "This field shall indicate the target extended hue for the light.",
      xref: { document: "cluster", section: "3.2.8.18.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Saturation",
      id: 1,
      type: "uint8",
      conformance: "M",
      constraint: "max 254",
      details: "This field shall indicate the saturation, as described in the MoveToHueAndSaturation command.",
      xref: { document: "cluster", section: "3.2.8.18.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "TransitionTime",
      id: 2,
      type: "uint16",
      conformance: "M",
      constraint: "max 65534",
      details: "This field shall indicate the transition time, as described in the MoveToHue command.",
      xref: { document: "cluster", section: "3.2.8.18.3" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 3, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 4, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "ColorLoopSet",
      id: 68,
      access: "O",
      conformance: "CL",
      direction: "request",
      response: "status",
      details: "This command allows a color loop to be activated such that the color light cycles through its range of hues.",
      xref: { document: "cluster", section: "3.2.8.19" }
    },
    (0, import_elements.FieldElement)({
      name: "UpdateFlags",
      id: 0,
      type: "UpdateFlagsBitmap",
      conformance: "M",
      details: "This field shall indicate which color loop attributes to update (from the values supplied in the other fields, see field descriptions below) before the color loop is started.",
      xref: { document: "cluster", section: "3.2.8.19.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Action",
      id: 1,
      type: "ColorLoopActionEnum",
      conformance: "M",
      details: "This field shall indicate the action to take for the color loop.",
      xref: { document: "cluster", section: "3.2.8.19.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "Direction",
      id: 2,
      type: "ColorLoopDirectionEnum",
      conformance: "M",
      details: "This field shall indicate the direction for the color loop.",
      xref: { document: "cluster", section: "3.2.8.19.3" }
    }),
    (0, import_elements.FieldElement)({
      name: "Time",
      id: 3,
      type: "uint16",
      conformance: "M",
      details: "This field shall indicate the number of seconds over which to perform a full color loop.",
      xref: { document: "cluster", section: "3.2.8.19.4" }
    }),
    (0, import_elements.FieldElement)({ name: "StartHue", id: 4, type: "uint16", conformance: "M" }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 5, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 6, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "StopMoveStep",
      id: 71,
      access: "O",
      conformance: "HS | XY | CT",
      direction: "request",
      response: "status",
      details: "This command is provided to allow MoveTo and Step commands to be stopped.\nNOTE This automatically provides symmetry to the Level Control cluster.\nNOTE The StopMoveStep command has no effect on an active color loop.",
      xref: { document: "cluster", section: "3.2.8.20" }
    },
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 0, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 1, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "MoveColorTemperature",
      id: 75,
      access: "O",
      conformance: "CT",
      direction: "request",
      response: "status",
      details: "This command allows the color temperature of the light to be moved at a specified rate.",
      xref: { document: "cluster", section: "3.2.8.21" }
    },
    (0, import_elements.FieldElement)({
      name: "MoveMode",
      id: 0,
      type: "MoveModeEnum",
      conformance: "M",
      details: "This field shall indicate the mode of movement, as described in the MoveHue command.",
      xref: { document: "cluster", section: "3.2.8.21.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Rate",
      id: 1,
      type: "uint16",
      conformance: "M",
      details: "This field shall indicate the rate of movement in steps per second. A step is a change in the color temperature of a device by one unit.",
      xref: { document: "cluster", section: "3.2.8.21.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "ColorTemperatureMinimumMireds",
      id: 2,
      type: "uint16",
      conformance: "M",
      constraint: "max 65279",
      details: "This field shall indicate a lower bound on the ColorTemperatureMireds attribute (\u2261 an upper bound on the color temperature in kelvins) for the current move operation\nColorTempPhysicalMinMireds <= ColorTemperatureMinimumMireds field <= ColorTemperatureMireds\nAs such if the move operation takes the ColorTemperatureMireds attribute towards the value of the ColorTemperatureMinimumMireds field it shall be clipped so that the above invariant is satisfied. If the ColorTemperatureMinimumMireds field is set to 0, ColorTempPhysicalMinMireds shall be used as the lower bound for the ColorTemperatureMireds attribute.",
      xref: { document: "cluster", section: "3.2.8.21.3" }
    }),
    (0, import_elements.FieldElement)({
      name: "ColorTemperatureMaximumMireds",
      id: 3,
      type: "uint16",
      conformance: "M",
      constraint: "max 65279",
      details: "This field shall indicate an upper bound on the ColorTemperatureMireds attribute (\u2261 a lower bound on the color temperature in kelvins) for the current move operation\nColorTemperatureMireds <= ColorTemperatureMaximumMireds field <= ColorTempPhysicalMaxMireds\nAs such if the move operation takes the ColorTemperatureMireds attribute towards the value of the ColorTemperatureMaximumMireds field it shall be clipped so that the above invariant is satisfied. If the ColorTemperatureMaximumMireds field is set to 0, ColorTempPhysicalMaxMireds shall be used as the upper bound for the ColorTemperatureMireds attribute.",
      xref: { document: "cluster", section: "3.2.8.21.4" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 4, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 5, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "StepColorTemperature",
      id: 76,
      access: "O",
      conformance: "CT",
      direction: "request",
      response: "status",
      details: "This command allows the color temperature of the light to be stepped with a specified step size.",
      xref: { document: "cluster", section: "3.2.8.22" }
    },
    (0, import_elements.FieldElement)({
      name: "StepMode",
      id: 0,
      type: "StepModeEnum",
      conformance: "M",
      details: "This field shall indicate the mode of the step to be performed, as described in the StepHue command.",
      xref: { document: "cluster", section: "3.2.8.22.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "StepSize",
      id: 1,
      type: "uint16",
      conformance: "M",
      details: "This field shall indicate the change to be added to (or subtracted from) the current value of the device\u2019s color temperature.",
      xref: { document: "cluster", section: "3.2.8.22.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "TransitionTime",
      id: 2,
      type: "uint16",
      conformance: "M",
      constraint: "max 65534",
      details: "This field shall indicate, in units of 1/10ths of a second, the time that shall be taken to perform the step. A step is a change to the device\u2019s color temperature of a magnitude corresponding to the StepSize field.",
      xref: { document: "cluster", section: "3.2.8.22.3" }
    }),
    (0, import_elements.FieldElement)({
      name: "ColorTemperatureMinimumMireds",
      id: 3,
      type: "uint16",
      conformance: "M",
      constraint: "max 65279",
      details: "This field shall indicate a lower bound on the ColorTemperatureMireds attribute (\u2261 an upper bound on the color temperature in kelvins) for the current step operation\nColorTempPhysicalMinMireds <= ColorTemperatureMinimumMireds field <= ColorTemperatureMireds\nAs such if the step operation takes the ColorTemperatureMireds attribute towards the value of the ColorTemperatureMinimumMireds field it shall be clipped so that the above invariant is satisfied. If the ColorTemperatureMinimumMireds field is set to 0, ColorTempPhysicalMinMireds shall be used as the lower bound for the ColorTemperatureMireds attribute.",
      xref: { document: "cluster", section: "3.2.8.22.4" }
    }),
    (0, import_elements.FieldElement)({
      name: "ColorTemperatureMaximumMireds",
      id: 4,
      type: "uint16",
      conformance: "M",
      constraint: "max 65279",
      details: "This field shall indicate an upper bound on the ColorTemperatureMireds attribute (\u2261 a lower bound on the color temperature in kelvins) for the current step operation\nColorTemperatureMireds \u2264 ColorTemperatureMaximumMireds field \u2264 ColorTempPhysicalMaxMireds\nAs such if the step operation takes the ColorTemperatureMireds attribute towards the value of the ColorTemperatureMaximumMireds field it shall be clipped so that the above invariant is satisfied. If the ColorTemperatureMaximumMireds field is set to 0, ColorTempPhysicalMaxMireds shall be used as the upper bound for the ColorTemperatureMireds attribute.",
      xref: { document: "cluster", section: "3.2.8.22.5" }
    }),
    (0, import_elements.FieldElement)({ name: "OptionsMask", id: 5, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 }),
    (0, import_elements.FieldElement)({ name: "OptionsOverride", id: 6, type: "OptionsBitmap", conformance: "M", constraint: "desc", default: 0 })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "OptionsBitmap", type: "map8", xref: { document: "cluster", section: "3.2.6.2" } },
    (0, import_elements.FieldElement)({
      name: "ExecuteIfOff",
      constraint: "0",
      description: "Dependency on On/Off cluster",
      details: "This bit shall indicate if this cluster server instance has a dependency with the On/Off cluster.",
      xref: { document: "cluster", section: "3.2.6.2.1" }
    })
  ),
  (0, import_elements.DatatypeElement)(
    {
      name: "UpdateFlagsBitmap",
      type: "map8",
      details: "This data type is derived from map8 and is used in the ColorLoopSet command.",
      xref: { document: "cluster", section: "3.2.6.3" }
    },
    (0, import_elements.FieldElement)(
      {
        name: "UpdateAction",
        constraint: "0",
        description: "Device adheres to the associated action field.",
        details: "This bit shall indicate whether the server adheres to the Action field in order to process the command.\n  \u2022 0 = Device shall ignore the Action field.\n  \u2022 1 = Device shall adhere to the Action field.",
        xref: { document: "cluster", section: "3.2.6.3.1" }
      }
    ),
    (0, import_elements.FieldElement)(
      {
        name: "UpdateDirection",
        constraint: "1",
        description: "Device updates the associated direction attribute.",
        details: "This bit shall indicate whether the device updates the ColorLoopDirection attribute with the Direction field.\n  \u2022 0 = Device shall ignore the Direction field.\n  \u2022 1 = Device shall update the ColorLoopDirection attribute with the value of the Direction field.",
        xref: { document: "cluster", section: "3.2.6.3.2" }
      }
    ),
    (0, import_elements.FieldElement)(
      {
        name: "UpdateTime",
        constraint: "2",
        description: "Device updates the associated time attribute.",
        details: "This bit shall indicate whether the device updates the ColorLoopTime attribute with the Time field.\n  \u2022 0 = Device shall ignore the Time field.\n  \u2022 1 = Device shall update the value of the ColorLoopTime attribute with the value of the Time     field.",
        xref: { document: "cluster", section: "3.2.6.3.3" }
      }
    ),
    (0, import_elements.FieldElement)(
      {
        name: "UpdateStartHue",
        constraint: "3",
        description: "Device updates the associated start hue attribute.",
        details: "This bit shall indicate whether the device updates the ColorLoopStartEnhancedHue attribute with the value of the StartHue field.\n  \u2022 0 = Device shall ignore the StartHue field.\n  \u2022 1 = Device shall update the value of the ColorLoopStartEnhancedHue attribute with the value of     the StartHue field.",
        xref: { document: "cluster", section: "3.2.6.3.4" }
      }
    )
  ),
  (0, import_elements.DatatypeElement)(
    { name: "DriftCompensationEnum", type: "enum8", xref: { document: "cluster", section: "3.2.6.4" } },
    (0, import_elements.FieldElement)({ name: "None", id: 0, conformance: "M", description: "There is no compensation." }),
    (0, import_elements.FieldElement)({
      name: "OtherOrUnknown",
      id: 1,
      conformance: "M",
      description: "The compensation is based on other or unknown mechanism."
    }),
    (0, import_elements.FieldElement)({
      name: "TemperatureMonitoring",
      id: 2,
      conformance: "M",
      description: "The compensation is based on temperature monitoring."
    }),
    (0, import_elements.FieldElement)({
      name: "OpticalLuminanceMonitoringAndFeedback",
      id: 3,
      conformance: "M",
      description: "The compensation is based on optical luminance monitoring and feedback."
    }),
    (0, import_elements.FieldElement)({
      name: "OpticalColorMonitoringAndFeedback",
      id: 4,
      conformance: "M",
      description: "The compensation is based on optical color monitoring and feedback."
    })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "ColorModeEnum", type: "enum8", xref: { document: "cluster", section: "3.2.6.5" } },
    (0, import_elements.FieldElement)({
      name: "CurrentHueAndCurrentSaturation",
      id: 0,
      conformance: "M",
      description: "The current hue and saturation attributes determine the color."
    }),
    (0, import_elements.FieldElement)({
      name: "CurrentXAndCurrentY",
      id: 1,
      conformance: "M",
      description: "The current X and Y attributes determine the color."
    }),
    (0, import_elements.FieldElement)({
      name: "ColorTemperatureMireds",
      id: 2,
      conformance: "M",
      description: "The color temperature attribute determines the color."
    })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "EnhancedColorModeEnum", type: "enum8", xref: { document: "cluster", section: "3.2.6.6" } },
    (0, import_elements.FieldElement)({
      name: "CurrentHueAndCurrentSaturation",
      id: 0,
      conformance: "M",
      description: "The current hue and saturation attributes determine the color."
    }),
    (0, import_elements.FieldElement)({
      name: "CurrentXAndCurrentY",
      id: 1,
      conformance: "M",
      description: "The current X and Y attributes determine the color."
    }),
    (0, import_elements.FieldElement)({
      name: "ColorTemperatureMireds",
      id: 2,
      conformance: "M",
      description: "The color temperature attribute determines the color."
    }),
    (0, import_elements.FieldElement)({
      name: "EnhancedCurrentHueAndCurrentSaturation",
      id: 3,
      conformance: "M",
      description: "The enhanced current hue and saturation attributes determine the color."
    })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "DirectionEnum", type: "enum8", xref: { document: "cluster", section: "3.2.6.7" } },
    (0, import_elements.FieldElement)({ name: "Shortest", id: 0, conformance: "M", description: "Shortest distance" }),
    (0, import_elements.FieldElement)({ name: "Longest", id: 1, conformance: "M", description: "Longest distance" }),
    (0, import_elements.FieldElement)({ name: "Up", id: 2, conformance: "M", description: "Up" }),
    (0, import_elements.FieldElement)({ name: "Down", id: 3, conformance: "M", description: "Down" })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "MoveModeEnum", type: "enum8", xref: { document: "cluster", section: "3.2.6.8" } },
    (0, import_elements.FieldElement)({ name: "Stop", id: 0, conformance: "M", description: "Stop the movement" }),
    (0, import_elements.FieldElement)({ name: "Up", id: 1, conformance: "M", description: "Move in an upwards direction" }),
    (0, import_elements.FieldElement)({ name: "Down", id: 3, conformance: "M", description: "Move in a downwards direction" })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "StepModeEnum", type: "enum8", xref: { document: "cluster", section: "3.2.6.9" } },
    (0, import_elements.FieldElement)({ name: "Up", id: 1, conformance: "M", description: "Step in an upwards direction" }),
    (0, import_elements.FieldElement)({ name: "Down", id: 3, conformance: "M", description: "Step in a downwards direction" })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "ColorLoopActionEnum", type: "enum8", xref: { document: "cluster", section: "3.2.6.10" } },
    (0, import_elements.FieldElement)({ name: "Deactivate", id: 0, conformance: "M", description: "De-activate the color loop." }),
    (0, import_elements.FieldElement)({
      name: "ActivateFromColorLoopStartEnhancedHue",
      id: 1,
      conformance: "M",
      description: "Activate the color loop from the value in the ColorLoopStartEnhancedHue field."
    }),
    (0, import_elements.FieldElement)({
      name: "ActivateFromEnhancedCurrentHue",
      id: 2,
      conformance: "M",
      description: "Activate the color loop from the value of the EnhancedCurrentHue attribute."
    })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "ColorLoopDirectionEnum", type: "enum8", xref: { document: "cluster", section: "3.2.6.11" } },
    (0, import_elements.FieldElement)({ name: "Decrement", id: 0, conformance: "M", description: "Decrement the hue in the color loop." }),
    (0, import_elements.FieldElement)({ name: "Increment", id: 1, conformance: "M", description: "Increment the hue in the color loop." })
  )
);
import_MatterDefinition.MatterDefinition.children.push(ColorControl);
//# sourceMappingURL=ColorControl.js.map
