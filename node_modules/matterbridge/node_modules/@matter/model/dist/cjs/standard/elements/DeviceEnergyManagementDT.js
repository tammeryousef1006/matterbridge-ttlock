"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var DeviceEnergyManagementDT_exports = {};
__export(DeviceEnergyManagementDT_exports, {
  DeviceEnergyManagementDt: () => DeviceEnergyManagementDt
});
module.exports = __toCommonJS(DeviceEnergyManagementDT_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const DeviceEnergyManagementDt = (0, import_elements.DeviceTypeElement)(
  {
    name: "DeviceEnergyManagement",
    id: 1293,
    category: "Utility",
    classification: "utility",
    details: "A Device Energy Management device provides reporting and optionally adjustment of the electrical power planned on being consumed or produced by the device.",
    xref: { document: "device", section: "2.7" }
  },
  (0, import_elements.RequirementElement)(
    { name: "Descriptor", id: 29, element: "serverCluster" },
    (0, import_elements.RequirementElement)({ name: "DeviceTypeList", default: [{ deviceType: 1293, revision: 2 }], element: "attribute" })
  ),
  (0, import_elements.RequirementElement)(
    {
      name: "DeviceEnergyManagement",
      id: 152,
      conformance: "M",
      element: "serverCluster",
      xref: { document: "device", section: "2.7.4" }
    },
    (0, import_elements.RequirementElement)({ name: "POWERADJUSTMENT", conformance: "ControllableESA.a+", element: "feature" }),
    (0, import_elements.RequirementElement)({ name: "STARTTIMEADJUSTMENT", conformance: "ControllableESA.a+", element: "feature" }),
    (0, import_elements.RequirementElement)({ name: "PAUSABLE", conformance: "ControllableESA.a+", element: "feature" }),
    (0, import_elements.RequirementElement)({ name: "FORECASTADJUSTMENT", conformance: "ControllableESA.a+", element: "feature" }),
    (0, import_elements.RequirementElement)({ name: "CONSTRAINTBASEDADJUSTMENT", conformance: "ControllableESA.a+", element: "feature" })
  ),
  (0, import_elements.RequirementElement)({
    name: "DeviceEnergyManagementMode",
    id: 159,
    conformance: "ControllableESA, O",
    element: "serverCluster",
    xref: { document: "device", section: "2.7.4" }
  }),
  (0, import_elements.FieldElement)(
    { name: "conditions", type: "enum8" },
    (0, import_elements.FieldElement)({
      name: "ControllableEsa",
      description: "The DEM cluster on this endpoint accepts commands to adjust its energy operation.",
      xref: { document: "device", section: "2.7.3" }
    })
  )
);
import_MatterDefinition.MatterDefinition.children.push(DeviceEnergyManagementDt);
//# sourceMappingURL=DeviceEnergyManagementDT.js.map
