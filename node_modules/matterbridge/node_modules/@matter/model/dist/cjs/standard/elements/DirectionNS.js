"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var DirectionNS_exports = {};
__export(DirectionNS_exports, {
  DirectionNs: () => DirectionNs
});
module.exports = __toCommonJS(DirectionNS_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const DirectionNs = (0, import_elements.SemanticNamespaceElement)(
  {
    name: "Direction",
    id: 4,
    details: "The tags contained in this namespace may be used in any domain or context, to indicate an association with a movement in a certain direction relative to the device. Note the difference with Chapter 9, Common Position Semantic Tag Namespace.",
    xref: { document: "namespace", section: "5" }
  },
  (0, import_elements.SemanticTagElement)({ name: "Upward", id: 0 }),
  (0, import_elements.SemanticTagElement)({ name: "Downward", id: 1 }),
  (0, import_elements.SemanticTagElement)({ name: "Leftward", id: 2 }),
  (0, import_elements.SemanticTagElement)({ name: "Rightward", id: 3 }),
  (0, import_elements.SemanticTagElement)({ name: "Forward", id: 4 }),
  (0, import_elements.SemanticTagElement)({ name: "Backward", id: 5 })
);
import_MatterDefinition.MatterDefinition.children.push(DirectionNs);
//# sourceMappingURL=DirectionNS.js.map
