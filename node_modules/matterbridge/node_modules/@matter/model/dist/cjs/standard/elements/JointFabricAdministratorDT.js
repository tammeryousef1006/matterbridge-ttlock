"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var JointFabricAdministratorDT_exports = {};
__export(JointFabricAdministratorDT_exports, {
  JointFabricAdministratorDt: () => JointFabricAdministratorDt
});
module.exports = __toCommonJS(JointFabricAdministratorDT_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const JointFabricAdministratorDt = (0, import_elements.DeviceTypeElement)(
  {
    name: "JointFabricAdministrator",
    id: 304,
    category: "Utility",
    classification: "utility",
    details: "A Joint Fabric Administrator device provides capabilities to manage the Joint Fabric Datastore and issue an ICAC signed by the Joint Fabric Anchor Root CA.\nA client wanting to access the capabilities of the Joint Fabric Administrator may use the Joint Commissioning Method to be commissioned onto the Joint Fabric. Once commissioned, a client may access the capabilities of the Joint Fabric Administrator.",
    xref: { document: "device", section: "2.9" }
  },
  (0, import_elements.RequirementElement)(
    { name: "Descriptor", id: 29, element: "serverCluster" },
    (0, import_elements.RequirementElement)({ name: "DeviceTypeList", default: [{ deviceType: 304, revision: 1 }], element: "attribute" })
  ),
  (0, import_elements.RequirementElement)({
    name: "JointFabricDatastore",
    id: 1874,
    conformance: "M",
    element: "serverCluster",
    xref: { document: "device", section: "2.9.4" }
  }),
  (0, import_elements.RequirementElement)({
    name: "JointFabricPki",
    id: 1875,
    conformance: "M",
    element: "serverCluster",
    xref: { document: "device", section: "2.9.4" }
  })
);
import_MatterDefinition.MatterDefinition.children.push(JointFabricAdministratorDt);
//# sourceMappingURL=JointFabricAdministratorDT.js.map
