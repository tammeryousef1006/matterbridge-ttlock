"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var MeasurementTypeEnum_exports = {};
__export(MeasurementTypeEnum_exports, {
  MeasurementTypeEnum: () => MeasurementTypeEnum
});
module.exports = __toCommonJS(MeasurementTypeEnum_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const MeasurementTypeEnum = (0, import_elements.DatatypeElement)(
  { name: "MeasurementTypeEnum", type: "enum16", xref: { document: "cluster", section: "2.1.4.2" } },
  (0, import_elements.FieldElement)({ name: "Unspecified", id: 0, conformance: "M" }),
  (0, import_elements.FieldElement)({ name: "Voltage", id: 1, conformance: "M", description: "Voltage in millivolts (mV)" }),
  (0, import_elements.FieldElement)({ name: "ActiveCurrent", id: 2, conformance: "M", description: "Active current in milliamps (mA)" }),
  (0, import_elements.FieldElement)({ name: "ReactiveCurrent", id: 3, conformance: "M", description: "Reactive current in milliamps (mA)" }),
  (0, import_elements.FieldElement)({ name: "ApparentCurrent", id: 4, conformance: "M", description: "Apparent current in milliamps (mA)" }),
  (0, import_elements.FieldElement)({ name: "ActivePower", id: 5, conformance: "M", description: "Active power in milliwatts (mW)" }),
  (0, import_elements.FieldElement)({
    name: "ReactivePower",
    id: 6,
    conformance: "M",
    description: "Reactive power in millivolt-amps reactive (mVAR)"
  }),
  (0, import_elements.FieldElement)({ name: "ApparentPower", id: 7, conformance: "M", description: "Apparent power in millivolt-amps (mVA)" }),
  (0, import_elements.FieldElement)({ name: "RmsVoltage", id: 8, conformance: "M", description: "Root mean squared voltage in millivolts (mV)" }),
  (0, import_elements.FieldElement)({ name: "RmsCurrent", id: 9, conformance: "M", description: "Root mean squared current in milliamps (mA)" }),
  (0, import_elements.FieldElement)({ name: "RmsPower", id: 10, conformance: "M", description: "Root mean squared power in milliwatts (mW)" }),
  (0, import_elements.FieldElement)({ name: "Frequency", id: 11, conformance: "M", description: "AC frequency in millihertz (mHz)" }),
  (0, import_elements.FieldElement)({ name: "PowerFactor", id: 12, conformance: "M", description: "Power Factor ratio in+/- 1/100ths of a percent." }),
  (0, import_elements.FieldElement)({ name: "NeutralCurrent", id: 13, conformance: "M", description: "AC neutral current in milliamps (mA)" }),
  (0, import_elements.FieldElement)({ name: "ElectricalEnergy", id: 14, conformance: "M", description: "Electrical energy in milliwatt-hours (mWh)" })
);
import_MatterDefinition.MatterDefinition.children.push(MeasurementTypeEnum);
//# sourceMappingURL=MeasurementTypeEnum.js.map
