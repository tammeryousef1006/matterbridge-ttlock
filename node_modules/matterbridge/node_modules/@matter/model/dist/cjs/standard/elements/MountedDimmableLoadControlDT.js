"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var MountedDimmableLoadControlDT_exports = {};
__export(MountedDimmableLoadControlDT_exports, {
  MountedDimmableLoadControlDt: () => MountedDimmableLoadControlDt
});
module.exports = __toCommonJS(MountedDimmableLoadControlDT_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const MountedDimmableLoadControlDt = (0, import_elements.DeviceTypeElement)(
  {
    name: "MountedDimmableLoadControl",
    id: 272,
    category: "Smart Plugs/Outlets and other Actuators",
    classification: "simple",
    details: "A Mounted Dimmable Load Control is a fixed device that provides power to another device that is plugged into it, and is capable of being switched on or off and have its level adjusted. The Mounted Dimmable Load Control is typically used to control a conventional non-communicating light through its mains connection using phase cutting.",
    xref: { document: "device", section: "5.4" }
  },
  (0, import_elements.RequirementElement)(
    { name: "Descriptor", id: 29, element: "serverCluster" },
    (0, import_elements.RequirementElement)({ name: "DeviceTypeList", default: [{ deviceType: 272, revision: 1 }], element: "attribute" })
  ),
  (0, import_elements.RequirementElement)(
    {
      name: "Identify",
      id: 3,
      conformance: "M",
      element: "serverCluster",
      xref: { document: "device", section: "5.4.4" }
    },
    (0, import_elements.RequirementElement)({ name: "TriggerEffect", conformance: "M", element: "command" })
  ),
  (0, import_elements.RequirementElement)({
    name: "Groups",
    id: 4,
    conformance: "M",
    element: "serverCluster",
    xref: { document: "device", section: "5.4.4" }
  }),
  (0, import_elements.RequirementElement)(
    {
      name: "ScenesManagement",
      id: 98,
      conformance: "P, M",
      element: "serverCluster",
      xref: { document: "device", section: "5.4.4" }
    },
    (0, import_elements.RequirementElement)({ name: "CopyScene", conformance: "P, M", element: "command" })
  ),
  (0, import_elements.RequirementElement)(
    {
      name: "OnOff",
      id: 6,
      conformance: "M",
      element: "serverCluster",
      xref: { document: "device", section: "5.4.4" }
    },
    (0, import_elements.RequirementElement)({ name: "LIGHTING", conformance: "M", element: "feature" })
  ),
  (0, import_elements.RequirementElement)(
    {
      name: "LevelControl",
      id: 8,
      conformance: "M",
      element: "serverCluster",
      xref: { document: "device", section: "5.4.4" }
    },
    (0, import_elements.RequirementElement)({ name: "ONOFF", conformance: "M", element: "feature" }),
    (0, import_elements.RequirementElement)({ name: "LIGHTING", conformance: "M", element: "feature" }),
    (0, import_elements.RequirementElement)({ name: "CurrentLevel", constraint: "1 to 254", element: "attribute" }),
    (0, import_elements.RequirementElement)({ name: "MinLevel", constraint: "1", element: "attribute" }),
    (0, import_elements.RequirementElement)({ name: "MaxLevel", constraint: "254", element: "attribute" })
  ),
  (0, import_elements.RequirementElement)({
    name: "OccupancySensing",
    id: 1030,
    conformance: "O",
    element: "clientCluster",
    xref: { document: "device", section: "5.4.4" }
  })
);
import_MatterDefinition.MatterDefinition.children.push(MountedDimmableLoadControlDt);
//# sourceMappingURL=MountedDimmableLoadControlDT.js.map
