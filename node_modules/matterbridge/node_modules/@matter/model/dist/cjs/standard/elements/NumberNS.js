"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var NumberNS_exports = {};
__export(NumberNS_exports, {
  NumberNs: () => NumberNs
});
module.exports = __toCommonJS(NumberNS_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const NumberNs = (0, import_elements.SemanticNamespaceElement)(
  {
    name: "Number",
    id: 7,
    details: "The tags contained in this namespace may be used in any domain or context, to indicate an association with a certain numeric feature of a device (e.g. a numeric input button).",
    xref: { document: "namespace", section: "8" }
  },
  (0, import_elements.SemanticTagElement)({ name: "Zero", id: 0 }),
  (0, import_elements.SemanticTagElement)({ name: "One", id: 1 }),
  (0, import_elements.SemanticTagElement)({ name: "Two", id: 2 }),
  (0, import_elements.SemanticTagElement)({ name: "Three", id: 3 }),
  (0, import_elements.SemanticTagElement)({ name: "Four", id: 4 }),
  (0, import_elements.SemanticTagElement)({ name: "Five", id: 5 }),
  (0, import_elements.SemanticTagElement)({ name: "Six", id: 6 }),
  (0, import_elements.SemanticTagElement)({ name: "Seven", id: 7 }),
  (0, import_elements.SemanticTagElement)({ name: "Eight", id: 8 }),
  (0, import_elements.SemanticTagElement)({ name: "Nine", id: 9 }),
  (0, import_elements.SemanticTagElement)({ name: "Ten", id: 10 })
);
import_MatterDefinition.MatterDefinition.children.push(NumberNs);
//# sourceMappingURL=NumberNS.js.map
