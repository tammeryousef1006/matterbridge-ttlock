"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var OnOffLightDT_exports = {};
__export(OnOffLightDT_exports, {
  OnOffLightDt: () => OnOffLightDt
});
module.exports = __toCommonJS(OnOffLightDT_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const OnOffLightDt = (0, import_elements.DeviceTypeElement)(
  {
    name: "OnOffLight",
    id: 256,
    category: "Lighting",
    classification: "simple",
    details: "The On/Off Light is a lighting device that is capable of being switched on or off by means of a bound controller device such as an On/Off Light Switch or a Dimmer Switch. In addition, an on/off light is also capable of being switched by means of a bound occupancy sensor.",
    xref: { document: "device", section: "4.1" }
  },
  (0, import_elements.RequirementElement)(
    { name: "Descriptor", id: 29, element: "serverCluster" },
    (0, import_elements.RequirementElement)({ name: "DeviceTypeList", default: [{ deviceType: 256, revision: 3 }], element: "attribute" })
  ),
  (0, import_elements.RequirementElement)(
    {
      name: "Identify",
      id: 3,
      conformance: "M",
      element: "serverCluster",
      xref: { document: "device", section: "4.1.4" }
    },
    (0, import_elements.RequirementElement)({ name: "TriggerEffect", conformance: "M", element: "command" })
  ),
  (0, import_elements.RequirementElement)({
    name: "Groups",
    id: 4,
    conformance: "M",
    element: "serverCluster",
    xref: { document: "device", section: "4.1.4" }
  }),
  (0, import_elements.RequirementElement)(
    {
      name: "ScenesManagement",
      id: 98,
      conformance: "P, M",
      element: "serverCluster",
      xref: { document: "device", section: "4.1.4" }
    },
    (0, import_elements.RequirementElement)({ name: "CopyScene", conformance: "P, M", element: "command" })
  ),
  (0, import_elements.RequirementElement)(
    {
      name: "OnOff",
      id: 6,
      conformance: "M",
      element: "serverCluster",
      xref: { document: "device", section: "4.1.4" }
    },
    (0, import_elements.RequirementElement)({ name: "LIGHTING", conformance: "M", element: "feature" })
  ),
  (0, import_elements.RequirementElement)(
    {
      name: "LevelControl",
      id: 8,
      conformance: "O",
      element: "serverCluster",
      xref: { document: "device", section: "4.1.4" }
    },
    (0, import_elements.RequirementElement)({ name: "ONOFF", conformance: "M", element: "feature" }),
    (0, import_elements.RequirementElement)({ name: "LIGHTING", conformance: "M", element: "feature" }),
    (0, import_elements.RequirementElement)({ name: "CurrentLevel", constraint: "1 to 254", element: "attribute" }),
    (0, import_elements.RequirementElement)({ name: "MinLevel", constraint: "1", element: "attribute" }),
    (0, import_elements.RequirementElement)({ name: "MaxLevel", constraint: "254", element: "attribute" })
  ),
  (0, import_elements.RequirementElement)({
    name: "OccupancySensing",
    id: 1030,
    conformance: "O",
    element: "clientCluster",
    xref: { document: "device", section: "4.1.4" }
  })
);
import_MatterDefinition.MatterDefinition.children.push(OnOffLightDt);
//# sourceMappingURL=OnOffLightDT.js.map
