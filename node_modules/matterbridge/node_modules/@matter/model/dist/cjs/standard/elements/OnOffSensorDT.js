"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var OnOffSensorDT_exports = {};
__export(OnOffSensorDT_exports, {
  OnOffSensorDt: () => OnOffSensorDt
});
module.exports = __toCommonJS(OnOffSensorDT_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const OnOffSensorDt = (0, import_elements.DeviceTypeElement)(
  {
    name: "OnOffSensor",
    id: 2128,
    category: "Sensor",
    classification: "simple",
    details: "An On/Off Sensor is a measurement and sensing device that, when bound to a lighting device such as a Dimmable Light, is capable of being used to switch the device on or off.",
    xref: { document: "device", section: "7.8" }
  },
  (0, import_elements.RequirementElement)(
    { name: "Descriptor", id: 29, element: "serverCluster" },
    (0, import_elements.RequirementElement)({ name: "DeviceTypeList", default: [{ deviceType: 2128, revision: 3 }], element: "attribute" })
  ),
  (0, import_elements.RequirementElement)({
    name: "Identify",
    id: 3,
    conformance: "M",
    element: "serverCluster",
    xref: { document: "device", section: "7.8.4" }
  }),
  (0, import_elements.RequirementElement)({
    name: "Identify",
    id: 3,
    conformance: "M",
    element: "clientCluster",
    xref: { document: "device", section: "7.8.4" }
  }),
  (0, import_elements.RequirementElement)({
    name: "Groups",
    id: 4,
    conformance: "O",
    element: "clientCluster",
    xref: { document: "device", section: "7.8.4" }
  }),
  (0, import_elements.RequirementElement)({
    name: "ScenesManagement",
    id: 98,
    conformance: "P, O",
    element: "clientCluster",
    xref: { document: "device", section: "7.8.4" }
  }),
  (0, import_elements.RequirementElement)({
    name: "OnOff",
    id: 6,
    conformance: "M",
    element: "clientCluster",
    xref: { document: "device", section: "7.8.4" }
  }),
  (0, import_elements.RequirementElement)({
    name: "LevelControl",
    id: 8,
    conformance: "O",
    element: "clientCluster",
    xref: { document: "device", section: "7.8.4" }
  }),
  (0, import_elements.RequirementElement)({
    name: "ColorControl",
    id: 768,
    conformance: "O",
    element: "clientCluster",
    xref: { document: "device", section: "7.8.4" }
  })
);
import_MatterDefinition.MatterDefinition.children.push(OnOffSensorDt);
//# sourceMappingURL=OnOffSensorDT.js.map
