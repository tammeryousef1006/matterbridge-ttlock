"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var PowerSourceConfiguration_exports = {};
__export(PowerSourceConfiguration_exports, {
  PowerSourceConfiguration: () => PowerSourceConfiguration
});
module.exports = __toCommonJS(PowerSourceConfiguration_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const PowerSourceConfiguration = (0, import_elements.ClusterElement)(
  {
    name: "PowerSourceConfiguration",
    id: 46,
    classification: "node",
    pics: "PSCFG",
    details: "This cluster is used to describe the configuration and capabilities of a Device\u2019s power system. It provides an ordering overview as well as linking to the one or more endpoints each supporting a Power Source cluster.",
    xref: { document: "core", section: "11.6" }
  },
  (0, import_elements.AttributeElement)({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 1 }),
  (0, import_elements.AttributeElement)(
    {
      name: "Sources",
      id: 0,
      type: "list",
      access: "R V",
      conformance: "M",
      constraint: "max 6",
      quality: "N",
      details: "This list shall contain the set of all power sources capable of participating in the power system of this Node. Each entry in the list shall be the endpoint number of an endpoint having a Power Source cluster, which corresponds to a physical power source. The endpoint number shall be unique within the list.\nThe order of power sources on a Node is defined by the Order attribute of its associated Power Source cluster provided on the endpoint. List entries shall be sorted in increasing order, that is, an entry with a lower order shall have a lower index than any entry with a higher order. Multiple entries may have the same order, there are no restrictions on their relative sorting.",
      xref: { document: "core", section: "11.6.4.1" }
    },
    (0, import_elements.FieldElement)({ name: "entry", type: "endpoint-no" })
  )
);
import_MatterDefinition.MatterDefinition.children.push(PowerSourceConfiguration);
//# sourceMappingURL=PowerSourceConfiguration.js.map
