"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var PowerSourceNS_exports = {};
__export(PowerSourceNS_exports, {
  PowerSourceNs: () => PowerSourceNs
});
module.exports = __toCommonJS(PowerSourceNS_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const PowerSourceNs = (0, import_elements.SemanticNamespaceElement)(
  {
    name: "PowerSource",
    id: 15,
    details: "The tags contained in this namespace are restricted for use in the power source domain and shall NOT be used in any other domain or context.",
    xref: { document: "namespace", section: "15" }
  },
  (0, import_elements.SemanticTagElement)({
    name: "Unknown",
    id: 0,
    description: "The Power Source cluster is related to power provided from an unknown source"
  }),
  (0, import_elements.SemanticTagElement)({
    name: "Grid",
    id: 1,
    description: "The Power Source cluster is related to power provided from the electrical grid",
    details: "Power Source clusters with this tag shall implement the WIRED feature.",
    xref: { document: "namespace", section: "15.1" }
  }),
  (0, import_elements.SemanticTagElement)({
    name: "Solar",
    id: 2,
    description: "The Power Source cluster is related to power provided from a solar panel array",
    details: "Power Source clusters with this tag shall implement the WIRED feature.",
    xref: { document: "namespace", section: "15.2" }
  }),
  (0, import_elements.SemanticTagElement)({
    name: "Battery",
    id: 3,
    description: "The Power Source cluster is related to power provided from a battery",
    details: "Power Source clusters with this tag shall implement the BAT feature.",
    xref: { document: "namespace", section: "15.3" }
  }),
  (0, import_elements.SemanticTagElement)({
    name: "EV",
    id: 4,
    description: "The Power Source cluster is related to power provided from an electric vehicle",
    details: "Power Source clusters with this tag shall implement the BAT feature.",
    xref: { document: "namespace", section: "15.4" }
  })
);
import_MatterDefinition.MatterDefinition.children.push(PowerSourceNs);
//# sourceMappingURL=PowerSourceNS.js.map
