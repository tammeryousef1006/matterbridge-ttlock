"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var PowerTopology_exports = {};
__export(PowerTopology_exports, {
  PowerTopology: () => PowerTopology
});
module.exports = __toCommonJS(PowerTopology_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const PowerTopology = (0, import_elements.ClusterElement)(
  {
    name: "PowerTopology",
    id: 156,
    classification: "application",
    pics: "PWRTL",
    details: "The Power Topology Cluster provides a mechanism for expressing how power is flowing between endpoints.",
    xref: { document: "core", section: "11.8" }
  },
  (0, import_elements.AttributeElement)({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 1 }),
  (0, import_elements.AttributeElement)(
    { name: "FeatureMap", id: 65532, type: "FeatureMap", xref: { document: "core", section: "11.8.4" } },
    (0, import_elements.FieldElement)({
      name: "NODE",
      conformance: "O.a",
      constraint: "0",
      description: "NodeTopology",
      details: "This endpoint provides or consumes power to/from the entire node"
    }),
    (0, import_elements.FieldElement)({
      name: "TREE",
      conformance: "O.a",
      constraint: "1",
      description: "TreeTopology",
      details: "This endpoint provides or consumes power to/from itself and its child endpoints"
    }),
    (0, import_elements.FieldElement)({
      name: "SET",
      conformance: "O.a",
      constraint: "2",
      description: "SetTopology",
      details: "This endpoint provides or consumes power to/from a specified set of endpoints"
    }),
    (0, import_elements.FieldElement)({
      name: "DYPF",
      conformance: "[SET]",
      constraint: "3",
      description: "DynamicPowerFlow",
      details: "The specified set of endpoints may change"
    })
  ),
  (0, import_elements.AttributeElement)(
    {
      name: "AvailableEndpoints",
      id: 0,
      type: "list",
      access: "R V",
      conformance: "SET",
      constraint: "max 20",
      quality: "F",
      details: "Indicates the list of endpoints capable of providing power to and/or consuming power from the endpoint hosting this server.",
      xref: { document: "core", section: "11.8.5.1" }
    },
    (0, import_elements.FieldElement)({ name: "entry", type: "endpoint-no" })
  ),
  (0, import_elements.AttributeElement)(
    {
      name: "ActiveEndpoints",
      id: 1,
      type: "list",
      access: "R V",
      conformance: "DYPF",
      constraint: "max 20",
      quality: "N",
      details: "Indicates the current list of endpoints currently providing or consuming power to or from the endpoint hosting this server. This list shall be a subset of the value of the AvailableEndpoints attribute.",
      xref: { document: "core", section: "11.8.5.2" }
    },
    (0, import_elements.FieldElement)({ name: "entry", type: "endpoint-no" })
  )
);
import_MatterDefinition.MatterDefinition.children.push(PowerTopology);
//# sourceMappingURL=PowerTopology.js.map
