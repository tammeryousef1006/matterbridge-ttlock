"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ProxyConfiguration_exports = {};
__export(ProxyConfiguration_exports, {
  ProxyConfiguration: () => ProxyConfiguration
});
module.exports = __toCommonJS(ProxyConfiguration_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const ProxyConfiguration = (0, import_elements.ClusterElement)(
  {
    name: "ProxyConfiguration",
    id: 66,
    classification: "node",
    pics: "PXCFG",
    details: "This cluster provides a means for a proxy-capable device to be told the set of Nodes it shall proxy.",
    xref: { document: "core", section: "9.15.13" }
  },
  (0, import_elements.AttributeElement)({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 1 }),
  (0, import_elements.AttributeElement)(
    {
      name: "ConfigurationList",
      id: 0,
      type: "list",
      access: "RW",
      conformance: "M",
      default: [],
      quality: "N",
      details: "List of proxy configurations. There shall NOT be multiple entries in this list for the same fabric.",
      xref: { document: "core", section: "9.15.13.5.1" }
    },
    (0, import_elements.FieldElement)({ name: "entry", type: "ConfigurationStruct" })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "ConfigurationStruct", type: "struct", xref: { document: "core", section: "9.15.13.4.1" } },
    (0, import_elements.FieldElement)({
      name: "ProxyAllNodes",
      id: 1,
      type: "bool",
      access: "RW",
      conformance: "M",
      constraint: "desc",
      default: false,
      details: "This field shall be set to true to indicate to the proxy that it shall proxy all nodes. When true, the SourceList attribute is ignored.",
      xref: { document: "core", section: "9.15.13.4.1.1" }
    }),
    (0, import_elements.FieldElement)(
      {
        name: "SourceList",
        id: 2,
        type: "list",
        access: "RW",
        conformance: "M",
        constraint: "desc",
        default: [],
        details: "When ProxyAllNodes is false, this list contains the set of Node IDs of sources that this proxy shall specifically proxy.",
        xref: { document: "core", section: "9.15.13.4.1.2" }
      },
      (0, import_elements.FieldElement)({ name: "entry", type: "node-id" })
    )
  )
);
import_MatterDefinition.MatterDefinition.children.push(ProxyConfiguration);
//# sourceMappingURL=ProxyConfiguration.js.map
