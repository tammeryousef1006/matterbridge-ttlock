"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var PumpConfigurationAndControl_exports = {};
__export(PumpConfigurationAndControl_exports, {
  PumpConfigurationAndControl: () => PumpConfigurationAndControl
});
module.exports = __toCommonJS(PumpConfigurationAndControl_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const PumpConfigurationAndControl = (0, import_elements.ClusterElement)(
  {
    name: "PumpConfigurationAndControl",
    id: 512,
    classification: "application",
    pics: "PCC",
    details: "The Pump Configuration and Control cluster provides an interface for the setup and control of pump devices, and the automatic reporting of pump status information. Note that control of pump speed is not included \u2013 speed is controlled by the On/Off and Level Control clusters.\n### Pump controller Pump\nC Pump configuration and control S C Level control S\nC On/Off S\nC = Client S = Server\nNote: Device names are examples for illustration purposes only\nFigure 14. Typical Usage of Pump Configuration and Control Cluster",
    xref: { document: "cluster", section: "4.2" }
  },
  (0, import_elements.AttributeElement)({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 4 }),
  (0, import_elements.AttributeElement)(
    { name: "FeatureMap", id: 65532, type: "FeatureMap", xref: { document: "cluster", section: "4.2.4" } },
    (0, import_elements.FieldElement)({
      name: "PRSCONST",
      conformance: "O.a+",
      constraint: "0",
      description: "ConstantPressure",
      details: "Supports operating in constant pressure mode"
    }),
    (0, import_elements.FieldElement)({
      name: "PRSCOMP",
      conformance: "O.a+",
      constraint: "1",
      description: "CompensatedPressure",
      details: "Supports operating in compensated pressure mode"
    }),
    (0, import_elements.FieldElement)({
      name: "FLW",
      conformance: "O.a+",
      constraint: "2",
      description: "ConstantFlow",
      details: "Supports operating in constant flow mode"
    }),
    (0, import_elements.FieldElement)({
      name: "SPD",
      conformance: "O.a+",
      constraint: "3",
      description: "ConstantSpeed",
      details: "Supports operating in constant speed mode"
    }),
    (0, import_elements.FieldElement)({
      name: "TEMP",
      conformance: "O.a+",
      constraint: "4",
      description: "ConstantTemperature",
      details: "Supports operating in constant temperature mode"
    }),
    (0, import_elements.FieldElement)({
      name: "AUTO",
      conformance: "O",
      constraint: "5",
      description: "Automatic",
      details: "Supports operating in automatic mode"
    }),
    (0, import_elements.FieldElement)({
      name: "LOCAL",
      conformance: "O",
      constraint: "6",
      description: "LocalOperation",
      details: "Supports operating using local settings"
    })
  ),
  (0, import_elements.AttributeElement)({
    name: "MaxPressure",
    id: 0,
    type: "int16",
    access: "R V",
    conformance: "M",
    default: null,
    quality: "X F",
    details: "This attribute specifies the maximum pressure the pump can achieve. It is a physical limit, and does not apply to any specific control mode or operation mode.\nValid range is -3,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.1" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MaxSpeed",
    id: 1,
    type: "uint16",
    access: "R V",
    conformance: "M",
    default: null,
    quality: "X F",
    details: "This attribute specifies the maximum speed the pump can achieve. It is a physical limit, and does not apply to any specific control mode or operation mode.\nValid range is 0 to 65,534 RPM (steps of 1 RPM). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.2" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MaxFlow",
    id: 2,
    type: "uint16",
    access: "R V",
    conformance: "M",
    default: null,
    quality: "X F",
    details: "This attribute specifies the maximum flow the pump can achieve. It is a physical limit, and does not apply to any specific control mode or operation mode.\nValid range is 0 m/h to 6,553.4 m/h (steps of 0.1 m/h). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.3" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MinConstPressure",
    id: 3,
    type: "int16",
    access: "R V",
    conformance: "PRSCONST, [AUTO]",
    default: null,
    quality: "X F",
    details: "This attribute specifies the minimum pressure the pump can achieve when it is working with the ControlMode attribute set to ConstantPressure.\nValid range is \u20133,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.4" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MaxConstPressure",
    id: 4,
    type: "int16",
    access: "R V",
    conformance: "PRSCONST, [AUTO]",
    default: null,
    quality: "X F",
    details: "This attribute specifies the maximum pressure the pump can achieve when it is working with the ControlMode attribute set to ConstantPressure.\nValid range is \u20133,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.5" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MinCompPressure",
    id: 5,
    type: "int16",
    access: "R V",
    conformance: "PRSCOMP, [AUTO]",
    default: null,
    quality: "X F",
    details: "This attribute specifies the minimum compensated pressure the pump can achieve when it is working with the ControlMode attribute set to ProportionalPressure.\nValid range is \u20133,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.6" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MaxCompPressure",
    id: 6,
    type: "int16",
    access: "R V",
    conformance: "PRSCOMP, [AUTO]",
    default: null,
    quality: "X F",
    details: "This attribute specifies the maximum compensated pressure the pump can achieve when it is working with the ControlMode attribute set to ProportionalPressure.\nValid range is \u20133,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.7" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MinConstSpeed",
    id: 7,
    type: "uint16",
    access: "R V",
    conformance: "SPD, [AUTO]",
    default: null,
    quality: "X F",
    details: "This attribute specifies the minimum speed the pump can achieve when it is working with the Con\ntrolMode attribute set to ConstantSpeed.\nValid range is 0 to 65,534 RPM (steps of 1 RPM). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.8" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MaxConstSpeed",
    id: 8,
    type: "uint16",
    access: "R V",
    conformance: "SPD, [AUTO]",
    default: null,
    quality: "X F",
    details: "This attribute specifies the maximum speed the pump can achieve when it is working with the ControlMode attribute set to ConstantSpeed.\nValid range is 0 to 65,534 RPM (steps of 1 RPM). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.9" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MinConstFlow",
    id: 9,
    type: "uint16",
    access: "R V",
    conformance: "FLW, [AUTO]",
    default: null,
    quality: "X F",
    details: "This attribute specifies the minimum flow the pump can achieve when it is working with the ControlMode attribute set to ConstantFlow.\nValid range is 0 m/h to 6,553.4 m/h (steps of 0.1 m/h). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.10" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MaxConstFlow",
    id: 10,
    type: "uint16",
    access: "R V",
    conformance: "FLW, [AUTO]",
    default: null,
    quality: "X F",
    details: "This attribute specifies the maximum flow the pump can achieve when it is working with the ControlMode attribute set to ConstantFlow.\nValid range is 0 m/h to 6,553.4 m/h (steps of 0.1 m/h). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.11" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MinConstTemp",
    id: 11,
    type: "int16",
    access: "R V",
    conformance: "TEMP, [AUTO]",
    constraint: "min -27315",
    default: null,
    quality: "X F",
    details: "This attribute specifies the minimum temperature the pump can maintain in the system when it is working with the ControlMode attribute set to ConstantTemperature.\nValid range is \u2013273.15 \xB0C to 327.67 \xB0C (steps of 0.01 \xB0C). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.12" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MaxConstTemp",
    id: 12,
    type: "int16",
    access: "R V",
    conformance: "TEMP, [AUTO]",
    constraint: "min -27315",
    default: null,
    quality: "X F",
    details: "This attribute specifies the maximum temperature the pump can maintain in the system when it is working with the ControlMode attribute set to ConstantTemperature.\nMaxConstTemp shall be greater than or equal to MinConstTemp\nValid range is \u2013273.15 \xB0C to 327.67 \xB0C (steps of 0.01 \xB0C). Null if the value is invalid.",
    xref: { document: "cluster", section: "4.2.7.13" }
  }),
  (0, import_elements.AttributeElement)({
    name: "PumpStatus",
    id: 16,
    type: "PumpStatusBitmap",
    access: "R V",
    conformance: "O",
    constraint: "desc",
    default: 0,
    quality: "P",
    details: "This attribute specifies the activity status of the pump functions as listed in PumpStatusBitmap. Where a pump controller function is active, the corresponding bit shall be set to 1. Where a pump\ncontroller function is not active, the corresponding bit shall be set to 0.",
    xref: { document: "cluster", section: "4.2.7.14" }
  }),
  (0, import_elements.AttributeElement)({
    name: "EffectiveOperationMode",
    id: 17,
    type: "OperationModeEnum",
    access: "R V",
    conformance: "M",
    constraint: "desc",
    quality: "N",
    details: "This attribute specifies current effective operation mode of the pump as defined in OperationModeEnum.\nThe value of the EffectiveOperationMode attribute is the same as the OperationMode attribute, unless one of the following points are true:\n  \u2022 The pump is physically set to run with the local settings\n  \u2022 The LocalOverride bit in the PumpStatus attribute is set,\nSee OperationMode and ControlMode attributes for a detailed description of the operation and control of the pump.",
    xref: { document: "cluster", section: "4.2.7.15" }
  }),
  (0, import_elements.AttributeElement)({
    name: "EffectiveControlMode",
    id: 18,
    type: "ControlModeEnum",
    access: "R V",
    conformance: "M",
    constraint: "desc",
    quality: "N",
    details: "This attribute specifies the current effective control mode of the pump as defined in ControlModeEnum.\nThis attribute contains the control mode that currently applies to the pump. It will have the value of the ControlMode attribute, unless one of the following points are true:\n  \u2022 The ControlMode attribute is set to Automatic. In this case, the value of the     EffectiveControlMode shall match the behavior of the pump.\n  \u2022 A remote sensor is used as the sensor for regulation of the pump. In this case,     EffectiveControlMode will display ConstantPressure, ConstantFlow or ConstantTemperature if the     remote sensor is a pressure sensor, a flow sensor or a temperature sensor respectively,     regardless of the value of the ControlMode attribute.\nIn case the ControlMode attribute is not included on the device and no remote sensors are connected, the value of the EffectiveControlMode shall match the vendor-specific behavior of the pump.\nSee OperationMode and ControlMode attributes for detailed a description of the operation and control of the pump.",
    xref: { document: "cluster", section: "4.2.7.16" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Capacity",
    id: 19,
    type: "int16",
    access: "R V",
    conformance: "M",
    default: null,
    quality: "X P",
    details: "This attribute specifies the actual capacity of the pump as a percentage of the effective maximum setpoint value. It is updated dynamically as the speed of the pump changes.\nIf the value is not available (the measurement or estimation of the speed is done in the pump), this attribute will indicate the null value.\nValid range is 0 % to 163.835% (0.005 % granularity). Although this attribute is a signed value, values of capacity less than zero have no physical meaning.",
    xref: { document: "cluster", section: "4.2.7.17" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Speed",
    id: 20,
    type: "uint16",
    access: "R V",
    conformance: "O",
    default: null,
    quality: "X",
    details: "This attribute specifies the actual speed of the pump measured in RPM. It is updated dynamically as the speed of the pump changes.\nIf the value is not available (the measurement or estimation of the speed is done in the pump), this attribute will indicate the null value.\nValid range is 0 to 65,534 RPM.",
    xref: { document: "cluster", section: "4.2.7.18" }
  }),
  (0, import_elements.AttributeElement)({
    name: "LifetimeRunningHours",
    id: 21,
    type: "uint24",
    access: "RW VM",
    conformance: "O",
    default: 0,
    quality: "X N",
    details: "This attribute specifies the accumulated number of hours that the pump has been powered and the motor has been running. It is updated dynamically as it increases. It is preserved over power cycles of the pump. If LifeTimeRunningHours rises above maximum value it \u201Crolls over\u201D and starts at 0 (zero).\nThis attribute is writeable, in order to allow setting to an appropriate value after maintenance. If the value is not available, this attribute will indicate the null value.\nValid range is 0 to 16,777,214 hrs.",
    xref: { document: "cluster", section: "4.2.7.19" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Power",
    id: 22,
    type: "uint24",
    access: "R V",
    conformance: "O",
    default: null,
    quality: "X",
    details: "This attribute specifies the actual power consumption of the pump in Watts. The value of this attribute is updated dynamically as the power consumption of the pump changes.\nThis attribute is read only. If the value is not available (the measurement of power consumption is not done in the pump), this attribute will indicate the null value.\nValid range is 0 to 16,777,214 Watts.",
    xref: { document: "cluster", section: "4.2.7.20" }
  }),
  (0, import_elements.AttributeElement)({
    name: "LifetimeEnergyConsumed",
    id: 23,
    type: "uint32",
    access: "RW VM",
    conformance: "O",
    default: 0,
    quality: "X N",
    details: "This attribute specifies the accumulated energy consumption of the pump through the entire lifetime of the pump in kWh. The value of the LifetimeEnergyConsumed attribute is updated dynamically as the energy consumption of the pump increases. If LifetimeEnergyConsumed rises above maximum value it \u201Crolls over\u201D and starts at 0 (zero).\nThis attribute is writeable, in order to allow setting to an appropriate value after maintenance.\nValid range is 0 kWh to 4,294,967,294 kWh.\nNull if the value is unknown.",
    xref: { document: "cluster", section: "4.2.7.21" }
  }),
  (0, import_elements.AttributeElement)({
    name: "OperationMode",
    id: 32,
    type: "OperationModeEnum",
    access: "RW VM",
    conformance: "M",
    constraint: "desc",
    default: 0,
    quality: "N",
    details: "This attribute specifies the operation mode of the pump as defined in OperationModeEnum.\nThe actual operating mode of the pump is a result of the setting of the attributes OperationMode, ControlMode and the optional connection of a remote sensor. The operation and control is prioritized as shown in the scheme below:\nPriority Scheme of Pump Operation and Control\nIf this attribute is Maximum, Minimum or Local, the OperationMode attribute decides how the pump is operated.\nIf this attribute is Normal and a remote sensor is connected to the pump, the type of the remote sensor decides the control mode of the pump. A connected remote pressure sensor will make the pump run in control mode Constant pressure and vice versa for flow and temperature type sensors. This is regardless of the setting of the ControlMode attribute.\nIf this attribute is Normal and no remote sensor is connected, the control mode of the pump is decided by the ControlMode attribute.\nOperationMode may be changed at any time, even when the pump is running. The behavior of the pump at the point of changing the value of this attribute is vendor-specific.\nIn the case a device does not support a specific operation mode, the write interaction to this attribute with an unsupported operation mode value shall be ignored and a response containing the status of CONSTRAINT_ERROR shall be returned.",
    xref: { document: "cluster", section: "4.2.7.22" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ControlMode",
    id: 33,
    type: "ControlModeEnum",
    access: "RW VM",
    conformance: "O",
    constraint: "desc",
    default: 0,
    quality: "N",
    details: "This attribute specifies the control mode of the pump as defined in ControlModeEnum.\nSee the OperationMode attribute for a detailed description of the operation and control of the pump.\nControlMode may be changed at any time, even when the pump is running. The behavior of the pump at the point of changing is vendor-specific.\nIn the case a device does not support a specific control mode, the write interaction to this attribute with an unsupported control mode value shall be ignored and a response containing the status of CONSTRAINT_ERROR shall be returned.",
    xref: { document: "cluster", section: "4.2.7.23" }
  }),
  (0, import_elements.AttributeElement)({ name: "AlarmMask", id: 34, type: "uint16", conformance: "D", xref: { document: "cluster", section: "4.2.7" } }),
  (0, import_elements.EventElement)({
    name: "SupplyVoltageLow",
    id: 0,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "SupplyVoltageHigh",
    id: 1,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "PowerMissingPhase",
    id: 2,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "SystemPressureLow",
    id: 3,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "SystemPressureHigh",
    id: 4,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "DryRunning",
    id: 5,
    access: "V",
    conformance: "O",
    priority: "critical",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "MotorTemperatureHigh",
    id: 6,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "PumpMotorFatalFailure",
    id: 7,
    access: "V",
    conformance: "O",
    priority: "critical",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "ElectronicTemperatureHigh",
    id: 8,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "PumpBlocked",
    id: 9,
    access: "V",
    conformance: "O",
    priority: "critical",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "SensorFailure",
    id: 10,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "ElectronicNonFatalFailure",
    id: 11,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "ElectronicFatalFailure",
    id: 12,
    access: "V",
    conformance: "O",
    priority: "critical",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "GeneralFault",
    id: 13,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "Leakage",
    id: 14,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "AirDetection",
    id: 15,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.EventElement)({
    name: "TurbineOperation",
    id: 16,
    access: "V",
    conformance: "O",
    priority: "info",
    xref: { document: "cluster", section: "4.2.8" }
  }),
  (0, import_elements.DatatypeElement)(
    { name: "PumpStatusBitmap", type: "map16", xref: { document: "cluster", section: "4.2.6.1" } },
    (0, import_elements.FieldElement)({
      name: "DeviceFault",
      constraint: "0",
      description: "A fault related to the system or pump device is detected.",
      details: "If this bit is set, it may correspond to an event in the range 2-16, see Events.",
      xref: { document: "cluster", section: "4.2.6.1.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "SupplyFault",
      constraint: "1",
      description: "A fault related to the supply to the pump is detected.",
      details: "If this bit is set, it may correspond to an event in the range 0-1 or 13, see Events.",
      xref: { document: "cluster", section: "4.2.6.1.2" }
    }),
    (0, import_elements.FieldElement)({ name: "SpeedLow", constraint: "2", description: "Setpoint is too low to achieve." }),
    (0, import_elements.FieldElement)({ name: "SpeedHigh", constraint: "3", description: "Setpoint is too high to achieve." }),
    (0, import_elements.FieldElement)({
      name: "LocalOverride",
      constraint: "4",
      description: "Device control is overridden by hardware, such as an external STOP button or via a local HMI.",
      details: "While this bit is set, the EffectiveOperationMode is adjusted to Local. Any request changing OperationMode shall generate a FAILURE error status until LocalOverride is cleared on the physical device. When LocalOverride is cleared, the device shall return to the operation mode set in OperationMode.",
      xref: { document: "cluster", section: "4.2.6.1.3" }
    }),
    (0, import_elements.FieldElement)({ name: "Running", constraint: "5", description: "Pump is currently running" }),
    (0, import_elements.FieldElement)({
      name: "RemotePressure",
      constraint: "6",
      description: "A remote pressure sensor is used as the sensor for the regulation of the pump.",
      details: "If this bit is set, EffectiveControlMode is ConstantPressure and the setpoint for the pump is interpreted as a percentage of the range of the remote sensor ([MinMeasuredValue \u2013 MaxMeasuredValue]).",
      xref: { document: "cluster", section: "4.2.6.1.4" }
    }),
    (0, import_elements.FieldElement)({
      name: "RemoteFlow",
      constraint: "7",
      description: "A remote flow sensor is used as the sensor for the regulation of the pump.",
      details: "If this bit is set, EffectiveControlMode is ConstantFlow, and the setpoint for the pump is interpreted as a percentage of the range of the remote sensor ([MinMeasuredValue \u2013 MaxMeasuredValue]).",
      xref: { document: "cluster", section: "4.2.6.1.5" }
    }),
    (0, import_elements.FieldElement)({
      name: "RemoteTemperature",
      constraint: "8",
      description: "A remote temperature sensor is used as the sensor for the regulation of the pump.",
      details: "If this bit is set, EffectiveControlMode is ConstantTemperature, and the setpoint for the pump is interpreted as a percentage of the range of the remote sensor ([MinMeasuredValue \u2013 MaxMeasuredValue])",
      xref: { document: "cluster", section: "4.2.6.1.6" }
    })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "OperationModeEnum", type: "enum8", xref: { document: "cluster", section: "4.2.6.2" } },
    (0, import_elements.FieldElement)({
      name: "Normal",
      id: 0,
      conformance: "M",
      description: "The pump is controlled by a setpoint, as defined by a connected remote sensor or by the ControlMode attribute.",
      details: "If the pump is running in this operation mode the setpoint is an internal variable which may be controlled between 0% and 100%, e.g., by means of the Level Control cluster",
      xref: { document: "cluster", section: "4.2.6.2.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Minimum",
      id: 1,
      conformance: "SPD",
      description: "This value sets the pump to run at the minimum possible speed it can without being stopped."
    }),
    (0, import_elements.FieldElement)({
      name: "Maximum",
      id: 2,
      conformance: "SPD",
      description: "This value sets the pump to run at its maximum possible speed."
    }),
    (0, import_elements.FieldElement)({
      name: "Local",
      id: 3,
      conformance: "LOCAL",
      description: "This value sets the pump to run with the local settings of the pump, regardless of what these are."
    })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "ControlModeEnum", type: "enum8", xref: { document: "cluster", section: "4.2.6.3" } },
    (0, import_elements.FieldElement)({
      name: "ConstantSpeed",
      id: 0,
      conformance: "SPD",
      description: "The pump is running at a constant speed.",
      details: "The setpoint is interpreted as a percentage of the range derived from the [MinConstSpeed \u2013 MaxConstSpeed] attributes.",
      xref: { document: "cluster", section: "4.2.6.3.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "ConstantPressure",
      id: 1,
      conformance: "PRSCONST",
      description: "The pump will regulate its speed to maintain a constant differential pressure over its flanges.",
      details: "The setpoint is interpreted as a percentage of the range of the sensor used for this control mode. In case of the internal pressure sensor, this will be the range derived from the [MinConstPressure \u2013 MaxConstPressure] attributes. In case of a remote pressure sensor, this will be the range derived from the [MinMeasuredValue \u2013 MaxMeasuredValue] attributes of the remote pressure sensor.",
      xref: { document: "cluster", section: "4.2.6.3.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "ProportionalPressure",
      id: 2,
      conformance: "PRSCOMP",
      description: "The pump will regulate its speed to maintain a constant differential pressure over its flanges.",
      details: "The setpoint is interpreted as a percentage of the range derived of the [MinCompPressure \u2013 Max\nCompPressure] attributes. The internal setpoint will be lowered (compensated) dependent on the flow in the pump (lower flow \u21D2 lower internal setpoint).",
      xref: { document: "cluster", section: "4.2.6.3.3" }
    }),
    (0, import_elements.FieldElement)({
      name: "ConstantFlow",
      id: 3,
      conformance: "FLW",
      description: "The pump will regulate its speed to maintain a constant flow through the pump.",
      details: "The setpoint is interpreted as a percentage of the range of the sensor used for this control mode. In case of the internal flow sensor, this will be the range derived from the [MinConstFlow \u2013 MaxConstFlow] attributes. In case of a remote flow sensor, this will be the range derived from the [MinMeasuredValue \u2013 MaxMeasuredValue] attributes of the remote flow sensor.",
      xref: { document: "cluster", section: "4.2.6.3.4" }
    }),
    (0, import_elements.FieldElement)({
      name: "ConstantTemperature",
      id: 5,
      conformance: "TEMP",
      description: "The pump will regulate its speed to maintain a constant temperature.",
      details: "The setpoint is interpreted as a percentage of the range of the sensor used for this control mode. In case of the internal temperature sensor, this will be the range derived from the [MinConstTemp \u2013 MaxConstTemp] attributes. In case of a remote temperature sensor, this will be the range derived from the [MinMeasuredValue \u2013 MaxMeasuredValue] attributes of the remote temperature sensor.",
      xref: { document: "cluster", section: "4.2.6.3.5" }
    }),
    (0, import_elements.FieldElement)({
      name: "Automatic",
      id: 7,
      conformance: "AUTO",
      description: "The operation of the pump is automatically optimized to provide the most suitable performance with respect to comfort and energy savings.",
      details: "This behavior is manufacturer defined. The pump can be stopped by setting the setpoint of the level control cluster to 0, or by using the On/Off cluster. If the pump is started (at any setpoint), the speed of the pump is entirely determined by the pump.",
      xref: { document: "cluster", section: "4.2.6.3.6" }
    })
  )
);
import_MatterDefinition.MatterDefinition.children.push(PumpConfigurationAndControl);
//# sourceMappingURL=PumpConfigurationAndControl.js.map
