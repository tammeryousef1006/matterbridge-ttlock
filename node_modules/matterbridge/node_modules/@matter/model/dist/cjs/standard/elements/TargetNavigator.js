"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var TargetNavigator_exports = {};
__export(TargetNavigator_exports, {
  TargetNavigator: () => TargetNavigator
});
module.exports = __toCommonJS(TargetNavigator_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const TargetNavigator = (0, import_elements.ClusterElement)(
  {
    name: "TargetNavigator",
    id: 1285,
    classification: "application",
    pics: "TGTNAV",
    details: "This cluster provides an interface for UX navigation within a set of targets on a device or endpoint.\nThis cluster would be supported on Video Player devices or devices with navigable user interfaces. This cluster would also be supported on endpoints with navigable user interfaces such as a Content App. It supports listing a set of navigation targets, tracking and changing the current target.\nThe cluster server for Target Navigator is implemented by endpoints on a device that support UX navigation.\nWhen this cluster is implemented for a Content App endpoint, the Video Player device containing the endpoint shall launch the Content App when a client invokes the NavigateTarget command.",
    xref: { document: "cluster", section: "6.11" }
  },
  (0, import_elements.AttributeElement)({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 2 }),
  (0, import_elements.AttributeElement)(
    {
      name: "TargetList",
      id: 0,
      type: "list",
      access: "R V",
      conformance: "M",
      details: "Indicates a list of targets that can be navigated to within the experience presented to the user by the Endpoint (Video Player or Content App). The list shall NOT contain any entries with the same Identifier in the TargetInfoStruct object.",
      xref: { document: "cluster", section: "6.11.5.1" }
    },
    (0, import_elements.FieldElement)({ name: "entry", type: "TargetInfoStruct" })
  ),
  (0, import_elements.AttributeElement)({
    name: "CurrentTarget",
    id: 1,
    type: "uint8",
    access: "R V",
    conformance: "O",
    constraint: "desc",
    default: 255,
    details: "Indicates the Identifier for the target which is currently in foreground on the corresponding Endpoint (Video Player or Content App), or 0xFF to indicate that no target is in the foreground.\nWhen not 0xFF, the CurrentTarget shall be an Identifier value contained within one of the TargetInfoStruct objects in the TargetList attribute.",
    xref: { document: "cluster", section: "6.11.5.2" }
  }),
  (0, import_elements.EventElement)(
    {
      name: "TargetUpdated",
      id: 0,
      access: "V",
      conformance: "O",
      priority: "info",
      details: "This event shall be generated when there is a change in either the active target or the list of available targets or both.",
      xref: { document: "cluster", section: "6.11.7.1" }
    },
    (0, import_elements.FieldElement)(
      { name: "TargetList", id: 0, type: "list", conformance: "O" },
      (0, import_elements.FieldElement)({ name: "entry", type: "TargetInfoStruct" })
    ),
    (0, import_elements.FieldElement)({ name: "CurrentTarget", id: 1, type: "uint8", conformance: "O", constraint: "desc", default: 255 }),
    (0, import_elements.FieldElement)({ name: "Data", id: 2, type: "octstr", conformance: "O", constraint: "max 900" })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "NavigateTarget",
      id: 0,
      access: "O",
      conformance: "M",
      direction: "request",
      response: "NavigateTargetResponse",
      details: "Upon receipt, this shall navigation the UX to the target identified.",
      xref: { document: "cluster", section: "6.11.6.1" }
    },
    (0, import_elements.FieldElement)({
      name: "Target",
      id: 0,
      type: "uint8",
      conformance: "M",
      details: "This field shall indicate the Identifier for the target for UX navigation. The Target shall be an Identifier value contained within one of the TargetInfoStruct objects in the TargetList attribute.",
      xref: { document: "cluster", section: "6.11.6.1.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Data",
      id: 1,
      type: "string",
      conformance: "O",
      details: "This field shall indicate Optional app-specific data.",
      xref: { document: "cluster", section: "6.11.6.1.2" }
    })
  ),
  (0, import_elements.CommandElement)(
    {
      name: "NavigateTargetResponse",
      id: 1,
      conformance: "M",
      direction: "response",
      details: "This command shall be generated in response to NavigateTarget command.",
      xref: { document: "cluster", section: "6.11.6.2" }
    },
    (0, import_elements.FieldElement)({
      name: "Status",
      id: 0,
      type: "StatusEnum",
      conformance: "M",
      details: "This field shall indicate the of the command.",
      xref: { document: "cluster", section: "6.11.6.2.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Data",
      id: 1,
      type: "string",
      conformance: "O",
      constraint: "any",
      details: "This field shall indicate Optional app-specific data.",
      xref: { document: "cluster", section: "6.11.6.2.2" }
    })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "StatusEnum", type: "enum8", xref: { document: "cluster", section: "6.11.4.1" } },
    (0, import_elements.FieldElement)({ name: "Success", id: 0, conformance: "M", description: "Command succeeded" }),
    (0, import_elements.FieldElement)({
      name: "TargetNotFound",
      id: 1,
      conformance: "M",
      description: "Requested target was not found in the TargetList"
    }),
    (0, import_elements.FieldElement)({
      name: "NotAllowed",
      id: 2,
      conformance: "M",
      description: "Target request is not allowed in current state."
    })
  ),
  (0, import_elements.DatatypeElement)(
    {
      name: "TargetInfoStruct",
      type: "struct",
      details: "This indicates an object describing the navigable target.",
      xref: { document: "cluster", section: "6.11.4.2" }
    },
    (0, import_elements.FieldElement)({
      name: "Identifier",
      id: 0,
      type: "uint8",
      conformance: "M",
      constraint: "max 254",
      details: "This field shall contain an unique id within the TargetList.",
      xref: { document: "cluster", section: "6.11.4.2.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Name",
      id: 1,
      type: "string",
      conformance: "M",
      details: "This field shall contain a name string for the TargetInfoStruct.",
      xref: { document: "cluster", section: "6.11.4.2.2" }
    })
  )
);
import_MatterDefinition.MatterDefinition.children.push(TargetNavigator);
//# sourceMappingURL=TargetNavigator.js.map
