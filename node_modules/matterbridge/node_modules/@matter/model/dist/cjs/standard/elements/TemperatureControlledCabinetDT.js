"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var TemperatureControlledCabinetDT_exports = {};
__export(TemperatureControlledCabinetDT_exports, {
  TemperatureControlledCabinetDt: () => TemperatureControlledCabinetDt
});
module.exports = __toCommonJS(TemperatureControlledCabinetDT_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const TemperatureControlledCabinetDt = (0, import_elements.DeviceTypeElement)(
  {
    name: "TemperatureControlledCabinet",
    id: 113,
    category: "Appliances",
    classification: "simple",
    details: "A Temperature Controlled Cabinet only exists composed as part of another device type. It represents a single cabinet that is capable of having its temperature controlled. Such a cabinet may be chilling or freezing food, for example as part of a refrigerator, freezer, wine chiller, or other similar device. Equally, such a cabinet may be warming or heating food, for example as part of an oven, range, or similar device.",
    xref: { document: "device", section: "13.4" }
  },
  (0, import_elements.RequirementElement)(
    { name: "Descriptor", id: 29, element: "serverCluster" },
    (0, import_elements.RequirementElement)({ name: "DeviceTypeList", default: [{ deviceType: 113, revision: 3 }], element: "attribute" })
  ),
  (0, import_elements.RequirementElement)({
    name: "TemperatureControl",
    id: 86,
    conformance: "M",
    element: "serverCluster",
    xref: { document: "device", section: "13.4.4" }
  }),
  (0, import_elements.RequirementElement)({
    name: "TemperatureMeasurement",
    id: 1026,
    conformance: "O",
    element: "serverCluster",
    xref: { document: "device", section: "13.4.4" }
  }),
  (0, import_elements.RequirementElement)(
    {
      name: "RefrigeratorAndTemperatureControlledCabinetMode",
      id: 82,
      conformance: "[Cooler]",
      element: "serverCluster",
      xref: { document: "device", section: "13.4.4" }
    },
    (0, import_elements.RequirementElement)({ name: "StartUpMode", conformance: "X", element: "attribute" }),
    (0, import_elements.RequirementElement)({ name: "ONOFF", conformance: "X", element: "feature" })
  ),
  (0, import_elements.RequirementElement)(
    {
      name: "OvenMode",
      id: 73,
      conformance: "[Heater]",
      element: "serverCluster",
      xref: { document: "device", section: "13.4.4" }
    },
    (0, import_elements.RequirementElement)({ name: "StartUpMode", conformance: "X", element: "attribute" }),
    (0, import_elements.RequirementElement)({ name: "ONOFF", conformance: "X", element: "feature" })
  ),
  (0, import_elements.RequirementElement)(
    {
      name: "OvenCavityOperationalState",
      id: 72,
      conformance: "[Heater]",
      element: "serverCluster",
      xref: { document: "device", section: "13.4.4" }
    },
    (0, import_elements.RequirementElement)({ name: "Pause", conformance: "X", element: "command" }),
    (0, import_elements.RequirementElement)({ name: "Resume", conformance: "X", element: "command" })
  ),
  (0, import_elements.FieldElement)(
    { name: "conditions", type: "enum8" },
    (0, import_elements.FieldElement)({
      name: "Cooler",
      description: "The device has cooling functionality.",
      xref: { document: "device", section: "13.4.3" }
    }),
    (0, import_elements.FieldElement)({
      name: "Heater",
      description: "The device has heating functionality.",
      xref: { document: "device", section: "13.4.3" }
    })
  )
);
import_MatterDefinition.MatterDefinition.children.push(TemperatureControlledCabinetDt);
//# sourceMappingURL=TemperatureControlledCabinetDT.js.map
