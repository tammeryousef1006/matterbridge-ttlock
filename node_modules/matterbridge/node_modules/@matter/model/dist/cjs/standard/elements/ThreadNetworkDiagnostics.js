"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ThreadNetworkDiagnostics_exports = {};
__export(ThreadNetworkDiagnostics_exports, {
  ThreadNetworkDiagnostics: () => ThreadNetworkDiagnostics
});
module.exports = __toCommonJS(ThreadNetworkDiagnostics_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const ThreadNetworkDiagnostics = (0, import_elements.ClusterElement)(
  {
    name: "ThreadNetworkDiagnostics",
    id: 53,
    classification: "node",
    pics: "DGTHREAD",
    quality: "K",
    details: "The Thread Network Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that may be used by a Node to assist a user or Administrator in diagnosing potential problems. The Thread Network Diagnostics Cluster attempts to centralize all metrics that are relevant to a potential Thread radio running on a Node.",
    xref: { document: "core", section: "11.14" }
  },
  (0, import_elements.AttributeElement)({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 3 }),
  (0, import_elements.AttributeElement)(
    { name: "FeatureMap", id: 65532, type: "FeatureMap", xref: { document: "core", section: "11.14.4" } },
    (0, import_elements.FieldElement)({
      name: "PKTCNT",
      constraint: "0",
      description: "PacketCounts",
      details: "Server supports the counts for the number of received and transmitted packets on the Thread interface."
    }),
    (0, import_elements.FieldElement)({
      name: "ERRCNT",
      constraint: "1",
      description: "ErrorCounts",
      details: "Server supports the counts for the number of errors that have occurred during the reception and transmission of packets on the Thread interface."
    }),
    (0, import_elements.FieldElement)({
      name: "MLECNT",
      constraint: "2",
      description: "MleCounts",
      details: "Server supports the counts for various MLE layer happenings."
    }),
    (0, import_elements.FieldElement)({
      name: "MACCNT",
      constraint: "3",
      description: "MacCounts",
      details: "Server supports the counts for various MAC layer happenings."
    })
  ),
  (0, import_elements.AttributeElement)({
    name: "Channel",
    id: 0,
    type: "uint16",
    access: "R V",
    conformance: "M",
    quality: "X",
    details: "The Channel attribute shall indicate the 802.15.4 channel number configured on the Node\u2019s Thread interface (that is, the Active Operational Dataset\u2019s current Channel value). A value of null shall indicate that the Thread interface is not currently configured or operational.",
    xref: { document: "core", section: "11.14.6.1" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RoutingRole",
    id: 1,
    type: "RoutingRoleEnum",
    access: "R V",
    conformance: "M",
    quality: "X",
    details: "The RoutingRole attribute shall indicate the role that this Node has within the routing of messages through the Thread network, as defined by RoutingRoleEnum. The potential roles are defined\nin the following table. A value of null shall indicate that the Thread interface is not currently configured or operational.",
    xref: { document: "core", section: "11.14.6.2" }
  }),
  (0, import_elements.AttributeElement)({
    name: "NetworkName",
    id: 2,
    type: "string",
    access: "R V",
    conformance: "M",
    constraint: "max 16",
    quality: "X",
    details: "The NetworkName attribute shall indicate a human-readable (displayable) name for the Thread network that the Node has been configured to join to. A value of null shall indicate that the Thread interface is not currently configured or operational.",
    xref: { document: "core", section: "11.14.6.3" }
  }),
  (0, import_elements.AttributeElement)({
    name: "PanId",
    id: 3,
    type: "uint16",
    access: "R V",
    conformance: "M",
    quality: "X",
    details: "The PanId attribute shall indicate the 16-bit identifier of the Node on the Thread network. A value of null shall indicate that the Thread interface is not currently configured or operational.",
    xref: { document: "core", section: "11.14.6.4" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ExtendedPanId",
    id: 4,
    type: "uint64",
    access: "R V",
    conformance: "M",
    quality: "X",
    details: "The ExtendedPanId attribute shall indicate the unique 64-bit identifier of the Node on the Thread network. A value of null shall indicate that the Thread interface is not currently configured or operational.",
    xref: { document: "core", section: "11.14.6.5" }
  }),
  (0, import_elements.AttributeElement)({
    name: "MeshLocalPrefix",
    id: 5,
    type: "ipv6pre",
    access: "R V",
    conformance: "M",
    quality: "X",
    details: "The MeshLocalPrefix attribute shall indicate the mesh-local IPv6 prefix for the Thread network that the Node has been configured to join to. A value of null shall indicate that the Thread interface is not currently configured or operational.",
    xref: { document: "core", section: "11.14.6.6" }
  }),
  (0, import_elements.AttributeElement)({
    name: "OverrunCount",
    id: 6,
    type: "uint64",
    access: "R V",
    conformance: "ERRCNT",
    default: 0,
    quality: "C",
    details: "The OverrunCount attribute shall indicate the number of packets dropped either at ingress or egress, due to lack of buffer memory to retain all packets on the ethernet network interface. The OverrunCount attribute shall be reset to 0 upon a reboot of the Node.",
    xref: { document: "core", section: "11.14.6.7" }
  }),
  (0, import_elements.AttributeElement)(
    {
      name: "NeighborTable",
      id: 7,
      type: "list",
      access: "R V",
      conformance: "M",
      default: [],
      details: "The NeighborTable attribute shall indicate the current list of Nodes that comprise the neighbor table on the Node.",
      xref: { document: "core", section: "11.14.6.8" }
    },
    (0, import_elements.FieldElement)({ name: "entry", type: "NeighborTableStruct" })
  ),
  (0, import_elements.AttributeElement)(
    {
      name: "RouteTable",
      id: 8,
      type: "list",
      access: "R V",
      conformance: "M",
      default: [],
      details: "The RouteTable attribute shall indicate the current list of router capable Nodes for which routes have been established.",
      xref: { document: "core", section: "11.14.6.9" }
    },
    (0, import_elements.FieldElement)({ name: "entry", type: "RouteTableStruct" })
  ),
  (0, import_elements.AttributeElement)({
    name: "PartitionId",
    id: 9,
    type: "uint32",
    access: "R V",
    conformance: "M",
    quality: "X",
    details: "The PartitionId attribute shall indicate the Thread Leader Partition Id for the Thread network to which the Node is joined. Null if not attached to a Thread network.",
    xref: { document: "core", section: "11.14.6.10" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Weighting",
    id: 10,
    type: "uint16",
    access: "R V",
    conformance: "M",
    constraint: "max 255",
    quality: "X",
    details: "The Weighting attribute shall indicate the Thread Leader Weight used when operating in the Leader role. Null if not attached to a Thread network.",
    xref: { document: "core", section: "11.14.6.11" }
  }),
  (0, import_elements.AttributeElement)({
    name: "DataVersion",
    id: 11,
    type: "uint16",
    access: "R V",
    conformance: "M",
    constraint: "max 255",
    quality: "X",
    details: "The DataVersion attribute shall indicate the full Network Data Version the Node currently uses. Null if not attached to a Thread network.",
    xref: { document: "core", section: "11.14.6.12" }
  }),
  (0, import_elements.AttributeElement)({
    name: "StableDataVersion",
    id: 12,
    type: "uint16",
    access: "R V",
    conformance: "M",
    constraint: "max 255",
    quality: "X",
    details: "The StableDataVersion attribute shall indicate the Network Data Version for the stable subset of data the Node currently uses. Null if not attached to a Thread network.",
    xref: { document: "core", section: "11.14.6.13" }
  }),
  (0, import_elements.AttributeElement)({
    name: "LeaderRouterId",
    id: 13,
    type: "uint8",
    access: "R V",
    conformance: "M",
    constraint: "max 62",
    quality: "X",
    details: "The LeaderRouterId attribute shall indicate the 8-bit LeaderRouterId the Node shall attempt to utilize upon becoming a router or leader on the Thread network. Null if not attached to a Thread network.",
    xref: { document: "core", section: "11.14.6.14" }
  }),
  (0, import_elements.AttributeElement)({
    name: "DetachedRoleCount",
    id: 14,
    type: "uint16",
    access: "R V",
    conformance: "[MLECNT]",
    default: 0,
    quality: "C",
    details: "The DetachedRoleCount attribute shall indicate the number of times the Node entered the OT_DEVICE_ROLE_DETACHED role as specified within the Thread specification. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.15" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ChildRoleCount",
    id: 15,
    type: "uint16",
    access: "R V",
    conformance: "[MLECNT]",
    default: 0,
    quality: "C",
    details: "The ChildRoleCount attribute shall indicate the number of times the Node entered the OT_DEVICE_ROLE_CHILD role as specified within the Thread specification. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.16" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RouterRoleCount",
    id: 16,
    type: "uint16",
    access: "R V",
    conformance: "[MLECNT]",
    default: 0,
    quality: "C",
    details: "The RouterRoleCount attribute shall indicate the number of times the Node entered the OT_DEVICE_ROLE_ROUTER role as specified within the Thread specification. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.17" }
  }),
  (0, import_elements.AttributeElement)({
    name: "LeaderRoleCount",
    id: 17,
    type: "uint16",
    access: "R V",
    conformance: "[MLECNT]",
    default: 0,
    quality: "C",
    details: "The LeaderRoleCount attribute shall indicate the number of times the Node entered the OT_DEVICE_ROLE_LEADER role as specified within the Thread specification. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.18" }
  }),
  (0, import_elements.AttributeElement)({
    name: "AttachAttemptCount",
    id: 18,
    type: "uint16",
    access: "R V",
    conformance: "[MLECNT]",
    default: 0,
    quality: "C",
    details: "The AttachAttemptCount attribute shall indicate the number of attempts that have been made to attach to a Thread network while the Node was detached from all Thread networks. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.19" }
  }),
  (0, import_elements.AttributeElement)({
    name: "PartitionIdChangeCount",
    id: 19,
    type: "uint16",
    access: "R V",
    conformance: "[MLECNT]",
    default: 0,
    quality: "C",
    details: "The PartitionIdChangeCount attribute shall indicate the number of times that the Thread network that the Node is connected to has changed its Partition ID. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.20" }
  }),
  (0, import_elements.AttributeElement)({
    name: "BetterPartitionAttachAttemptCount",
    id: 20,
    type: "uint16",
    access: "R V",
    conformance: "[MLECNT]",
    default: 0,
    quality: "C",
    details: "The BetterPartitionAttachAttemptCount attribute shall indicate the number of times a Node has attempted to attach to a different Thread partition that it has determined is better than the partition it is currently attached to. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.21" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ParentChangeCount",
    id: 21,
    type: "uint16",
    access: "R V",
    conformance: "[MLECNT]",
    default: 0,
    quality: "C",
    details: "The ParentChangeCount attribute shall indicate the number of times a Node has changed its parent. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.22" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxTotalCount",
    id: 22,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxTotalCount attribute shall indicate the total number of unique MAC frame transmission requests. The TxTotalCount attribute shall only be incremented by 1 for each MAC transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.23" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxUnicastCount",
    id: 23,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxUnicastCount attribute shall indicate the total number of unique unicast MAC frame transmission requests. The TxUnicastCount attribute shall only be incremented by 1 for each unicast MAC transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.24" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxBroadcastCount",
    id: 24,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxBroadcastCount attribute shall indicate the total number of unique broadcast MAC frame transmission requests. The TxBroadcastCount attribute shall only be incremented by 1 for each broadcast MAC transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.25" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxAckRequestedCount",
    id: 25,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxAckRequestedCount attribute shall indicate the total number of unique MAC frame transmission requests with requested acknowledgment. The TxAckRequestedCount attribute shall only be incremented by 1 for each MAC transmission request with requested acknowledgment regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.26" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxAckedCount",
    id: 26,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxAckedCount attribute shall indicate the total number of unique MAC frame transmission requests that were acked. The TxAckedCount attribute shall only be incremented by 1 for each MAC transmission request that is acked regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.27" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxNoAckRequestedCount",
    id: 27,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxNoAckRequestedCount attribute shall indicate the total number of unique MAC frame\ntransmission requests without requested acknowledgment. The TxNoAckRequestedCount attribute shall only be incremented by 1 for each MAC transmission request that is does not request acknowledgement regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions.",
    xref: { document: "core", section: "11.14.6.28" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxDataCount",
    id: 28,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxDataCount attribute shall indicate the total number of unique MAC Data frame transmission requests. The TxDataCount attribute shall only be incremented by 1 for each MAC Data frame transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.29" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxDataPollCount",
    id: 29,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxDataPollCount attribute shall indicate the total number of unique MAC Data Poll frame transmission requests. The TxDataPollCount attribute shall only be incremented by 1 for each MAC Data Poll frame transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.30" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxBeaconCount",
    id: 30,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxBeaconCount attribute shall indicate the total number of unique MAC Beacon frame transmission requests. The TxBeaconCount attribute shall only be incremented by 1 for each MAC Beacon frame transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions.",
    xref: { document: "core", section: "11.14.6.31" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxBeaconRequestCount",
    id: 31,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxBeaconRequestCount attribute shall indicate the total number of unique MAC Beacon Request frame transmission requests. The TxBeaconRequestCount attribute shall only be incremented by 1 for each MAC Beacon Request frame transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.32" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxOtherCount",
    id: 32,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxOtherCount attribute shall indicate the total number of unique MAC frame transmission requests that are not counted by any other attribute. The TxOtherCount attribute shall only be incremented by 1 for each MAC frame transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.33" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxRetryCount",
    id: 33,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxRetryCount attribute shall indicate the total number of MAC retransmission attempts. The TxRetryCount attribute shall only be incremented by 1 for each retransmission attempt that may be triggered by lack of acknowledgement, CSMA/CA failure, or other type of transmission error. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.34" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxDirectMaxRetryExpiryCount",
    id: 34,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxDirectMaxRetryExpiryCount attribute shall indicate the total number of unique MAC\ntransmission packets that meet maximal retry limit for direct packets. The TxDirectMaxRetryExpiryCount attribute shall only be incremented by 1 for each unique MAC transmission packets that meets the maximal retry limit for direct packets. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.35" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxIndirectMaxRetryExpiryCount",
    id: 35,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxIndirectMaxRetryExpiryCount attribute shall indicate the total number of unique MAC transmission packets that meet maximal retry limit for indirect packets. The TxIndirectMaxRetryExpiryCount attribute shall only be incremented by 1 for each unique MAC transmission packets that meets the maximal retry limit for indirect packets. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.36" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxErrCcaCount",
    id: 36,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxErrCcaCount attribute shall indicate the total number of CCA failures. The TxErrCcaCount attribute shall only be incremented by 1 for each instance of a CCA failure. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.37" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxErrAbortCount",
    id: 37,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxErrAbortCount attribute shall indicate the total number of unique MAC transmission request failures caused by an abort error. The TxErrAbortCount attribute shall only be incremented by 1 for each unique MAC transmission request failure caused by an abort error.",
    xref: { document: "core", section: "11.14.6.38" }
  }),
  (0, import_elements.AttributeElement)({
    name: "TxErrBusyChannelCount",
    id: 38,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The TxErrBusyChannelCount attribute shall indicate the total number of unique MAC transmission request failures caused by an error as the result of a busy channel (a CSMA/CA fail). The TxErrBusyChannelCount attribute shall only be incremented by 1 for each unique MAC transmission request failure caused by a busy channel such as a CSMA/CA failure.",
    xref: { document: "core", section: "11.14.6.39" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxTotalCount",
    id: 39,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxTotalCount attribute shall indicate the total number of received unique MAC frames. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.40" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxUnicastCount",
    id: 40,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxUnicastCount attribute shall indicate the total number of received unique unicast MAC frames. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.41" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxBroadcastCount",
    id: 41,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxBroadcastCount attribute shall indicate the total number of received unique broadcast MAC frames. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.42" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxDataCount",
    id: 42,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxDataCount attribute shall indicate the total number of received unique MAC Data frames.\nThis value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.43" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxDataPollCount",
    id: 43,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxDataPollCount attribute shall indicate the total number of received unique MAC Data Poll frames. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.44" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxBeaconCount",
    id: 44,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxBeaconCount attribute shall indicate the total number of received unique MAC Beacon frames. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.45" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxBeaconRequestCount",
    id: 45,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxBeaconRequestCount attribute shall indicate the total number of received unique MAC Beacon Request frames. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.46" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxOtherCount",
    id: 46,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxOtherCount attribute shall indicate the total number of received unique MAC frame requests that are not counted by any other attribute. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.47" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxAddressFilteredCount",
    id: 47,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxAddressFilteredCount attribute shall indicate the total number of received unique MAC frame requests that have been dropped as a result of MAC filtering. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.48" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxDestAddrFilteredCount",
    id: 48,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxDestAddrFilteredCount attribute shall indicate the total number of received unique MAC frame requests that have been dropped as a result of a destination address check. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.49" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxDuplicatedCount",
    id: 49,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxDuplicatedCount attribute shall indicate the total number of received MAC frame requests that have been dropped as a result of being a duplicate of a previously received MAC frame request. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.50" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxErrNoFrameCount",
    id: 50,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxErrNoFrameCount attribute shall indicate the total number of received unique MAC frame requests that have been dropped as a result of missing or malformed frame contents. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.51" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxErrUnknownNeighborCount",
    id: 51,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxErrUnknownNeighborCount attribute shall indicate the total number of received unique MAC frame requests that have been dropped as a result of originating from an unknown neighbor\ndevice. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.52" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxErrInvalidSrcAddrCount",
    id: 52,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxErrInvalidSrcAddrCount attribute shall indicate the total number of received unique MAC frame requests that have been dropped as a result of containing an invalid source address. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.53" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxErrSecCount",
    id: 53,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxErrSecCount attribute shall indicate the total number of received unique MAC frame requests that have been dropped as a result of an error with the security of the received frame. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.54" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxErrFcsCount",
    id: 54,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxErrFcsCount attribute shall indicate the total number of received unique MAC frame requests that have been dropped as a result of an error with the FCS of the received frame. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.55" }
  }),
  (0, import_elements.AttributeElement)({
    name: "RxErrOtherCount",
    id: 55,
    type: "uint32",
    access: "R V",
    conformance: "[MACCNT]",
    default: 0,
    quality: "C",
    details: "The RxErrOtherCount attribute shall indicate the total number of received unique MAC frame requests that have been dropped as a result of an error that is not counted by any other attribute. This value shall only be reset upon a Node reboot.",
    xref: { document: "core", section: "11.14.6.56" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ActiveTimestamp",
    id: 56,
    type: "uint64",
    access: "R V",
    conformance: "O",
    default: 0,
    quality: "X",
    details: "Null when there is no dataset configured.",
    xref: { document: "core", section: "11.14.6.57" }
  }),
  (0, import_elements.AttributeElement)({
    name: "PendingTimestamp",
    id: 57,
    type: "uint64",
    access: "R V",
    conformance: "O",
    default: 0,
    quality: "X",
    details: "Null when there is no dataset configured.",
    xref: { document: "core", section: "11.14.6.58" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Delay",
    id: 58,
    type: "uint32",
    access: "R V",
    conformance: "O",
    default: 0,
    quality: "X",
    details: "Null when there is no dataset configured.",
    xref: { document: "core", section: "11.14.6.59" }
  }),
  (0, import_elements.AttributeElement)({
    name: "SecurityPolicy",
    id: 59,
    type: "SecurityPolicy",
    access: "R V",
    conformance: "M",
    quality: "X",
    details: "The SecurityPolicy attribute indicates the current security policies for the Thread partition to which a Node is connected. Null when there is no dataset configured.",
    xref: { document: "core", section: "11.14.6.60" }
  }),
  (0, import_elements.AttributeElement)({
    name: "ChannelPage0Mask",
    id: 60,
    type: "octstr",
    access: "R V",
    conformance: "M",
    constraint: "4",
    quality: "X",
    details: "The ChannelPage0Mask attribute indicates the channels within channel page 0, in the 2.4GHz ISM band. The channels are represented in most significant bit order, with bit value 1 meaning selected, bit value 0 meaning unselected. For example, the most significant bit of the left-most byte indicates channel 0. If channel 0 and channel 10 are selected, the mask would be: 80 20 00 00. Null when there is no dataset configured.",
    xref: { document: "core", section: "11.14.6.61" }
  }),
  (0, import_elements.AttributeElement)({
    name: "OperationalDatasetComponents",
    id: 61,
    type: "OperationalDatasetComponents",
    access: "R V",
    conformance: "M",
    quality: "X",
    details: "The OperationalDatasetComponents attribute is a collection of flags to indicate the presence of various operationally acquired values.",
    xref: { document: "core", section: "11.14.6.62" }
  }),
  (0, import_elements.AttributeElement)(
    {
      name: "ActiveNetworkFaultsList",
      id: 62,
      type: "list",
      access: "R V",
      conformance: "M",
      constraint: "max 4",
      xref: { document: "core", section: "11.14.6" }
    },
    (0, import_elements.FieldElement)({ name: "entry", type: "NetworkFaultEnum" })
  ),
  (0, import_elements.AttributeElement)({
    name: "ExtAddress",
    id: 63,
    type: "uint64",
    access: "R V",
    conformance: "P, M",
    quality: "X",
    xref: { document: "core", section: "11.14.6" }
  }),
  (0, import_elements.AttributeElement)({
    name: "Rloc16",
    id: 64,
    type: "uint16",
    access: "R V",
    conformance: "P, M",
    quality: "X",
    xref: { document: "core", section: "11.14.6" }
  }),
  (0, import_elements.EventElement)(
    {
      name: "ConnectionStatus",
      id: 0,
      access: "V",
      conformance: "O",
      priority: "info",
      details: "The ConnectionStatus Event shall indicate that a Node\u2019s connection status to a Thread network has changed.",
      xref: { document: "core", section: "11.14.8.2" }
    },
    (0, import_elements.FieldElement)({ name: "ConnectionStatus", id: 0, type: "ConnectionStatusEnum", conformance: "M" })
  ),
  (0, import_elements.EventElement)(
    {
      name: "NetworkFaultChange",
      id: 1,
      access: "V",
      conformance: "O",
      priority: "info",
      details: "The NetworkFaultChange Event shall indicate a change in the set of network faults currently detected by the Node.",
      xref: { document: "core", section: "11.14.8.1" }
    },
    (0, import_elements.FieldElement)(
      {
        name: "Current",
        id: 0,
        type: "list",
        conformance: "M",
        constraint: "max 4",
        details: "This field shall represent the set of faults currently detected, as per Section 11.14.5.1, \u201CNetworkFaultEnum Type\u201D.",
        xref: { document: "core", section: "11.14.8.1.1" }
      },
      (0, import_elements.FieldElement)({ name: "entry", type: "NetworkFaultEnum" })
    ),
    (0, import_elements.FieldElement)(
      {
        name: "Previous",
        id: 1,
        type: "list",
        conformance: "M",
        constraint: "max 4",
        details: "This field shall represent the set of faults detected prior to this change event, as per Section 11.14.5.1, \u201CNetworkFaultEnum Type\u201D.",
        xref: { document: "core", section: "11.14.8.1.2" }
      },
      (0, import_elements.FieldElement)({ name: "entry", type: "NetworkFaultEnum" })
    )
  ),
  (0, import_elements.CommandElement)({
    name: "ResetCounts",
    id: 0,
    access: "M",
    conformance: "ERRCNT",
    direction: "request",
    response: "status",
    details: "Reception of this command shall reset the following attributes to 0:\n  \u2022 OverrunCount\nThis command has no associated data. Upon completion, this command shall send a status code set to a value of SUCCESS back to the initiator.",
    xref: { document: "core", section: "11.14.7.1" }
  }),
  (0, import_elements.DatatypeElement)(
    { name: "NetworkFaultEnum", type: "enum8", xref: { document: "core", section: "11.14.5.1" } },
    (0, import_elements.FieldElement)({ name: "Unspecified", id: 0, conformance: "M", description: "Indicates an unspecified fault." }),
    (0, import_elements.FieldElement)({ name: "LinkDown", id: 1, conformance: "M", description: "Indicates the Thread link is down." }),
    (0, import_elements.FieldElement)({
      name: "HardwareFailure",
      id: 2,
      conformance: "M",
      description: "Indicates there has been Thread hardware failure."
    }),
    (0, import_elements.FieldElement)({ name: "NetworkJammed", id: 3, conformance: "M", description: "Indicates the Thread network is jammed." })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "ConnectionStatusEnum", type: "enum8", xref: { document: "core", section: "11.14.5.2" } },
    (0, import_elements.FieldElement)({ name: "Connected", id: 0, conformance: "M", description: "Node is connected" }),
    (0, import_elements.FieldElement)({ name: "NotConnected", id: 1, conformance: "M", description: "Node is not connected" })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "RoutingRoleEnum", type: "enum8", xref: { document: "core", section: "11.14.5.3" } },
    (0, import_elements.FieldElement)({ name: "Unspecified", id: 0, conformance: "M", description: "Unspecified routing role." }),
    (0, import_elements.FieldElement)({
      name: "Unassigned",
      id: 1,
      conformance: "M",
      description: "The Node does not currently have a role as a result of the Thread interface not currently being configured or operational."
    }),
    (0, import_elements.FieldElement)({
      name: "SleepyEndDevice",
      id: 2,
      conformance: "M",
      description: "The Node acts as a Sleepy End Device with RX-off-when-idle sleepy radio behavior."
    }),
    (0, import_elements.FieldElement)({
      name: "EndDevice",
      id: 3,
      conformance: "M",
      description: "The Node acts as an End Device without RX- off-when-idle sleepy radio behavior."
    }),
    (0, import_elements.FieldElement)({ name: "Reed", id: 4, conformance: "M", description: "The Node acts as an Router Eligible End Device." }),
    (0, import_elements.FieldElement)({ name: "Router", id: 5, conformance: "M", description: "The Node acts as a Router Device." }),
    (0, import_elements.FieldElement)({ name: "Leader", id: 6, conformance: "M", description: "The Node acts as a Leader Device." })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "NeighborTableStruct", type: "struct", xref: { document: "core", section: "11.14.5.4" } },
    (0, import_elements.FieldElement)({
      name: "ExtAddress",
      id: 0,
      type: "uint64",
      conformance: "M",
      details: "This field shall specify the IEEE 802.15.4 extended address for the neighboring Node.",
      xref: { document: "core", section: "11.14.5.4.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Age",
      id: 1,
      type: "uint32",
      conformance: "M",
      details: "This field shall specify the duration of time, in seconds, since a frame has been received from the neighboring Node.",
      xref: { document: "core", section: "11.14.5.4.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "Rloc16",
      id: 2,
      type: "uint16",
      conformance: "M",
      details: "This field shall specify the RLOC16 of the neighboring Node.",
      xref: { document: "core", section: "11.14.5.4.3" }
    }),
    (0, import_elements.FieldElement)({
      name: "LinkFrameCounter",
      id: 3,
      type: "uint32",
      conformance: "M",
      details: "This field shall specify the number of link layer frames that have been received from the neighboring node. This field shall be reset to 0 upon a reboot of the Node.",
      xref: { document: "core", section: "11.14.5.4.4" }
    }),
    (0, import_elements.FieldElement)({
      name: "MleFrameCounter",
      id: 4,
      type: "uint32",
      conformance: "M",
      details: "This field shall specify the number of Mesh Link Establishment frames that have been received from the neighboring node. This field shall be reset to 0 upon a reboot of the Node.",
      xref: { document: "core", section: "11.14.5.4.5" }
    }),
    (0, import_elements.FieldElement)({
      name: "Lqi",
      id: 5,
      type: "uint8",
      conformance: "M",
      constraint: "0 to 255",
      details: "This field shall specify the implementation specific mix of IEEE 802.15.4 PDU receive quality indicators, scaled from 0 to 255.",
      xref: { document: "core", section: "11.14.5.4.6" }
    }),
    (0, import_elements.FieldElement)({
      name: "AverageRssi",
      id: 6,
      type: "int8",
      conformance: "M",
      constraint: "-128 to 0",
      default: null,
      quality: "X",
      details: "This field SHOULD specify the average RSSI across all received frames from the neighboring Node since the receiving Node\u2019s last reboot. If there is no known received frames this field SHOULD have the value of null. This field shall have the units of dBm, having the range -128 dBm to 0 dBm.",
      xref: { document: "core", section: "11.14.5.4.7" }
    }),
    (0, import_elements.FieldElement)({
      name: "LastRssi",
      id: 7,
      type: "int8",
      conformance: "M",
      constraint: "-128 to 0",
      default: null,
      quality: "X",
      details: "This field shall specify the RSSI of the most recently received frame from the neighboring Node. If there is no known last received frame the LastRssi field SHOULD have the value of null. This field shall have the units of dBm, having the range -128 dBm to 0 dBm.",
      xref: { document: "core", section: "11.14.5.4.8" }
    }),
    (0, import_elements.FieldElement)({
      name: "FrameErrorRate",
      id: 8,
      type: "uint8",
      conformance: "M",
      constraint: "0 to 100",
      default: 0,
      details: "This field shall specify the percentage of received frames from the neighboring Node that have resulted in errors.",
      xref: { document: "core", section: "11.14.5.4.9" }
    }),
    (0, import_elements.FieldElement)({
      name: "MessageErrorRate",
      id: 9,
      type: "uint8",
      conformance: "M",
      constraint: "0 to 100",
      default: 0,
      details: "This field shall specify the percentage of received messages from the neighboring Node that have resulted in errors.",
      xref: { document: "core", section: "11.14.5.4.10" }
    }),
    (0, import_elements.FieldElement)({
      name: "RxOnWhenIdle",
      id: 10,
      type: "bool",
      conformance: "M",
      details: "This field shall specify if the neighboring Node is capable of receiving frames while the Node is in an idle state.",
      xref: { document: "core", section: "11.14.5.4.11" }
    }),
    (0, import_elements.FieldElement)({
      name: "FullThreadDevice",
      id: 11,
      type: "bool",
      conformance: "M",
      details: "This field shall specify if the neighboring Node is a full Thread device.",
      xref: { document: "core", section: "11.14.5.4.12" }
    }),
    (0, import_elements.FieldElement)({
      name: "FullNetworkData",
      id: 12,
      type: "bool",
      conformance: "M",
      details: "This field shall specify if the neighboring Node requires the full Network Data. If set to False, the neighboring Node only requires the stable Network Data.",
      xref: { document: "core", section: "11.14.5.4.13" }
    }),
    (0, import_elements.FieldElement)({
      name: "IsChild",
      id: 13,
      type: "bool",
      conformance: "M",
      details: "This field shall specify if the neighboring Node is a direct child of the Node reporting the NeighborTable attribute.",
      xref: { document: "core", section: "11.14.5.4.14" }
    })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "RouteTableStruct", type: "struct", xref: { document: "core", section: "11.14.5.5" } },
    (0, import_elements.FieldElement)({
      name: "ExtAddress",
      id: 0,
      type: "uint64",
      conformance: "M",
      details: "This field shall specify the IEEE 802.15.4 extended address for the Node for which this route table entry corresponds.",
      xref: { document: "core", section: "11.14.5.5.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Rloc16",
      id: 1,
      type: "uint16",
      conformance: "M",
      details: "This field shall specify the RLOC16 for the Node for which this route table entry corresponds.",
      xref: { document: "core", section: "11.14.5.5.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "RouterId",
      id: 2,
      type: "uint8",
      conformance: "M",
      details: "This field shall specify the Router ID for the Node for which this route table entry corresponds.",
      xref: { document: "core", section: "11.14.5.5.3" }
    }),
    (0, import_elements.FieldElement)({
      name: "NextHop",
      id: 3,
      type: "uint8",
      conformance: "M",
      details: "This field shall specify the Router ID for the next hop in the route to the Node for which this route table entry corresponds.",
      xref: { document: "core", section: "11.14.5.5.4" }
    }),
    (0, import_elements.FieldElement)({
      name: "PathCost",
      id: 4,
      type: "uint8",
      conformance: "M",
      details: "This Field shall specify the cost of the route to the Node for which this route table entry corresponds.",
      xref: { document: "core", section: "11.14.5.5.5" }
    }),
    (0, import_elements.FieldElement)({
      name: "LqiIn",
      id: 5,
      type: "uint8",
      conformance: "M",
      details: "This field shall specify the implementation specific mix of IEEE 802.15.4 PDU receive quality indicators, scaled from 0 to 255, from the perspective of the Node reporting the neighbor table.",
      xref: { document: "core", section: "11.14.5.5.6" }
    }),
    (0, import_elements.FieldElement)({
      name: "LqiOut",
      id: 6,
      type: "uint8",
      conformance: "M",
      details: "This field shall specify the implementation specific mix of IEEE 802.15.4 PDU receive quality indicators, scaled from 0 to 255, from the perspective of the Node specified within the NextHop field.",
      xref: { document: "core", section: "11.14.5.5.7" }
    }),
    (0, import_elements.FieldElement)({
      name: "Age",
      id: 7,
      type: "uint8",
      conformance: "M",
      details: "This field shall specify the duration of time, in seconds, since a frame has been received from the Node for which this route table entry corresponds.",
      xref: { document: "core", section: "11.14.5.5.8" }
    }),
    (0, import_elements.FieldElement)({
      name: "Allocated",
      id: 8,
      type: "bool",
      conformance: "M",
      details: "This field shall specify if the router ID as defined within the RouterId field has been allocated.",
      xref: { document: "core", section: "11.14.5.5.9" }
    }),
    (0, import_elements.FieldElement)({
      name: "LinkEstablished",
      id: 9,
      type: "bool",
      conformance: "M",
      details: "This field shall specify if a link has been established to the Node for which this route table entry corresponds.",
      xref: { document: "core", section: "11.14.5.5.10" }
    })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "SecurityPolicy", type: "struct", xref: { document: "core", section: "11.14.5.6" } },
    (0, import_elements.FieldElement)({
      name: "RotationTime",
      id: 0,
      type: "uint16",
      conformance: "M",
      details: "This field shall specify the interval of time, in hours, that Thread security keys are rotated. Null when there is no dataset configured.",
      xref: { document: "core", section: "11.14.5.6.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Flags",
      id: 1,
      type: "uint16",
      conformance: "M",
      details: "This field shall specify the flags as specified in Thread 1.3.0 section 8.10.1.15. Null when there is no dataset configured.",
      xref: { document: "core", section: "11.14.5.6.2" }
    })
  ),
  (0, import_elements.DatatypeElement)(
    { name: "OperationalDatasetComponents", type: "struct", xref: { document: "core", section: "11.14.5.7" } },
    (0, import_elements.FieldElement)({
      name: "ActiveTimestampPresent",
      id: 0,
      type: "bool",
      conformance: "M",
      details: "This field shall be True if the Node has an active timestamp present, else False.",
      xref: { document: "core", section: "11.14.5.7.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "PendingTimestampPresent",
      id: 1,
      type: "bool",
      conformance: "M",
      details: "This field shall be True if the Node has a pending timestamp is present, else False.",
      xref: { document: "core", section: "11.14.5.7.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "MasterKeyPresent",
      id: 2,
      type: "bool",
      conformance: "M",
      details: "This field shall be True if the Node has the Thread master key, else False.",
      xref: { document: "core", section: "11.14.5.7.3" }
    }),
    (0, import_elements.FieldElement)({
      name: "NetworkNamePresent",
      id: 3,
      type: "bool",
      conformance: "M",
      details: "This field shall be True if the Node has the Thread network\u2019s name, else False.",
      xref: { document: "core", section: "11.14.5.7.4" }
    }),
    (0, import_elements.FieldElement)({
      name: "ExtendedPanIdPresent",
      id: 4,
      type: "bool",
      conformance: "M",
      details: "This field shall be True if the Node has an extended Pan ID, else False.",
      xref: { document: "core", section: "11.14.5.7.5" }
    }),
    (0, import_elements.FieldElement)({
      name: "MeshLocalPrefixPresent",
      id: 5,
      type: "bool",
      conformance: "M",
      details: "This field shall be True if the Node has the mesh local prefix, else False.",
      xref: { document: "core", section: "11.14.5.7.6" }
    }),
    (0, import_elements.FieldElement)({
      name: "DelayPresent",
      id: 6,
      type: "bool",
      conformance: "M",
      details: "This field shall be True if the Node has the Thread network delay set, else False.",
      xref: { document: "core", section: "11.14.5.7.7" }
    }),
    (0, import_elements.FieldElement)({
      name: "PanIdPresent",
      id: 7,
      type: "bool",
      conformance: "M",
      details: "This field shall be True if the Node has a Pan ID, else False.",
      xref: { document: "core", section: "11.14.5.7.8" }
    }),
    (0, import_elements.FieldElement)({
      name: "ChannelPresent",
      id: 8,
      type: "bool",
      conformance: "M",
      details: "This field shall be True if the Node has configured an operational channel for the Thread network, else False.",
      xref: { document: "core", section: "11.14.5.7.9" }
    }),
    (0, import_elements.FieldElement)({
      name: "PskcPresent",
      id: 9,
      type: "bool",
      conformance: "M",
      details: "This field shall be True if the Node has been configured with the Thread network Pskc, else False.",
      xref: { document: "core", section: "11.14.5.7.10" }
    }),
    (0, import_elements.FieldElement)({
      name: "SecurityPolicyPresent",
      id: 10,
      type: "bool",
      conformance: "M",
      details: "This field shall be True if the Node has been configured with the Thread network security policies, else False.",
      xref: { document: "core", section: "11.14.5.7.11" }
    }),
    (0, import_elements.FieldElement)({
      name: "ChannelMaskPresent",
      id: 11,
      type: "bool",
      conformance: "M",
      details: "This field shall be True if the Node has available a mask of available channels, else False.",
      xref: { document: "core", section: "11.14.5.7.12" }
    })
  )
);
import_MatterDefinition.MatterDefinition.children.push(ThreadNetworkDiagnostics);
//# sourceMappingURL=ThreadNetworkDiagnostics.js.map
