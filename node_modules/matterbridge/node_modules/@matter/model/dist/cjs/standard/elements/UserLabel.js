"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var UserLabel_exports = {};
__export(UserLabel_exports, {
  UserLabel: () => UserLabel
});
module.exports = __toCommonJS(UserLabel_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const UserLabel = (0, import_elements.ClusterElement)(
  {
    name: "UserLabel",
    id: 65,
    type: "Label",
    classification: "endpoint",
    pics: "ULABEL",
    details: "This cluster is derived from the Label cluster and provides a feature to tag an endpoint with zero or more writable labels.",
    xref: { document: "core", section: "9.9" }
  },
  (0, import_elements.AttributeElement)(
    {
      name: "LabelList",
      id: 0,
      type: "list",
      access: "RW VM",
      conformance: "M",
      constraint: "min 0",
      default: [],
      quality: "N",
      details: "An implementation shall support at least 4 list entries per node for all User Label cluster instances on the node.",
      xref: { document: "core", section: "9.9.4.1" }
    },
    (0, import_elements.FieldElement)({ name: "entry", type: "LabelStruct" })
  )
);
import_MatterDefinition.MatterDefinition.children.push(UserLabel);
//# sourceMappingURL=UserLabel.js.map
