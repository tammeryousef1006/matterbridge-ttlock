"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var WakeOnLan_exports = {};
__export(WakeOnLan_exports, {
  WakeOnLan: () => WakeOnLan
});
module.exports = __toCommonJS(WakeOnLan_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const WakeOnLan = (0, import_elements.ClusterElement)(
  {
    name: "WakeOnLan",
    id: 1283,
    classification: "application",
    pics: "WAKEONLAN",
    details: 'This cluster provides an interface for managing low power mode on a device that supports the Wake On LAN or Wake On Wireless LAN (WLAN) protocol (see [Wake On LAN]).\nThis cluster would be supported on IP devices that have a low power mode AND support the ability to be woken up using the Wake on LAN or Wake on WLAN protocol. This cluster provides the device MAC address which is a required input to the Wake on LAN protocol. Besides the MAC address, this cluster provides an optional link-local IPv6 address which is useful to support "Wake on Direct Packet" used by some Ethernet and Wi-Fi devices.\nActing on the MAC address or link-local IPv6 address information does require the caller to be in the same broadcast domain as the destination. To wake the destination up, the caller sends a multicast-based magic UDP packet that contains destination\u2019s MAC address in the UDP payload to FF02::1, the IPv6 all-nodes link-local multicast group address. If the optional link-local address is provided by the destination through this cluster, the caller also sends the magic UDP packet in unicast to that link-local address. This unicast-based method is particularly useful for Wi-Fi devices, since due to lack of MAC layer retransmission mechanism, multicast over Wi-Fi is not as reliable as unicast. If a device provides the link-local address in this cluster, its Ethernet controller or Wi-Fi radio shall respond to the IPv6 neighbor solicitation message for the link-local address without the need to wake host CPU up. In order to receive the magic or neighbor solicitation packets in multicast, the Wi-Fi devices must support Group Temporal Key (GTK) rekey operation in low power mode.\nMost devices automatically enter low power mode based upon inactivity.\nThe cluster server for Wake on LAN or Wake on WLAN is implemented by a device that supports the Wake on LAN/WLAN protocol, such as a TV, Set-top Box, or Smart Speaker.',
    xref: { document: "cluster", section: "1.12" }
  },
  (0, import_elements.AttributeElement)({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 1 }),
  (0, import_elements.AttributeElement)({
    name: "MacAddress",
    id: 0,
    type: "string",
    access: "R V",
    conformance: "O",
    constraint: "max 12",
    quality: "F",
    details: "Indicates the current MAC address of the device. Only 48-bit MAC Addresses shall be used for this attribute as required by the Wake on LAN protocol.\nFormat of this attribute shall be an upper-case hex-encoded string representing the hex address, like 12345678ABCD.",
    xref: { document: "cluster", section: "1.12.4.1" }
  }),
  (0, import_elements.AttributeElement)({
    name: "LinkLocalAddress",
    id: 1,
    type: "ipv6adr",
    access: "R V",
    conformance: "O",
    constraint: "desc",
    quality: "F",
    details: "Indicates the current link-local address of the device. Only 128-bit IPv6 link- local addresses shall be used for this attribute.\nNOTE\nSome companies may consider MAC Address to be protected data subject to PII handling considerations and will therefore choose not to include it or read it. The MAC Address can often be determined using ARP in IPv4 or NDP in IPv6.",
    xref: { document: "cluster", section: "1.12.4.2" }
  })
);
import_MatterDefinition.MatterDefinition.children.push(WakeOnLan);
//# sourceMappingURL=WakeOnLan.js.map
