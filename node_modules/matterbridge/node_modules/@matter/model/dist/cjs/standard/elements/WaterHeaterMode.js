"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var WaterHeaterMode_exports = {};
__export(WaterHeaterMode_exports, {
  WaterHeaterMode: () => WaterHeaterMode
});
module.exports = __toCommonJS(WaterHeaterMode_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const WaterHeaterMode = (0, import_elements.ClusterElement)(
  {
    name: "WaterHeaterMode",
    id: 158,
    type: "ModeBase",
    classification: "application",
    pics: "WHM",
    details: "This cluster is derived from the Mode Base cluster and defines additional mode tags and namespaced enumerated values for water heater devices.",
    xref: { document: "cluster", section: "9.6" }
  },
  (0, import_elements.AttributeElement)({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 1 }),
  (0, import_elements.AttributeElement)(
    { name: "FeatureMap", id: 65532, type: "FeatureMap", xref: { document: "cluster", section: "9.6.4" } },
    (0, import_elements.FieldElement)({
      name: "DEPONOFF",
      conformance: "X",
      constraint: "0",
      description: "OnOff",
      details: "Dependency with the OnOff cluster"
    })
  ),
  (0, import_elements.AttributeElement)({
    name: "SupportedModes",
    id: 0,
    details: "At least one entry in the SupportedModes attribute shall include the Manual mode tag in the ModeTags field list.\nAt least one entry in the SupportedModes attribute shall include the Off mode tag in the ModeTags field list.\nAn entry in the SupportedModes attribute that includes one of an Off, Manual, or Timed tag shall NOT also include an additional instance of any one of these tag types.",
    xref: { document: "cluster", section: "9.6.6.1" }
  }),
  (0, import_elements.AttributeElement)({ name: "CurrentMode", id: 1, xref: { document: "cluster", section: "9.6.6" } }),
  (0, import_elements.AttributeElement)({ name: "StartUpMode", id: 2, conformance: "X", xref: { document: "cluster", section: "9.6.6" } }),
  (0, import_elements.AttributeElement)({ name: "OnMode", id: 3, conformance: "X", xref: { document: "cluster", section: "9.6.6" } }),
  (0, import_elements.DatatypeElement)({
    name: "ModeOptionStruct",
    type: "ModeOptionStruct",
    details: "The table below lists the changes relative to the Mode Base cluster for the fields of the ModeOptionStruct type. A blank field indicates no change.",
    xref: { document: "cluster", section: "9.6.5.1" }
  }),
  (0, import_elements.DatatypeElement)(
    { name: "ModeTag", type: "enum16" },
    (0, import_elements.FieldElement)({ name: "Auto", id: 0, xref: { document: "cluster", section: "9.6.7.1" } }),
    (0, import_elements.FieldElement)({ name: "Quick", id: 1, xref: { document: "cluster", section: "9.6.7.1" } }),
    (0, import_elements.FieldElement)({ name: "Quiet", id: 2, xref: { document: "cluster", section: "9.6.7.1" } }),
    (0, import_elements.FieldElement)({ name: "LowNoise", id: 3, xref: { document: "cluster", section: "9.6.7.1" } }),
    (0, import_elements.FieldElement)({ name: "LowEnergy", id: 4, xref: { document: "cluster", section: "9.6.7.1" } }),
    (0, import_elements.FieldElement)({ name: "Vacation", id: 5, xref: { document: "cluster", section: "9.6.7.1" } }),
    (0, import_elements.FieldElement)({ name: "Min", id: 6, xref: { document: "cluster", section: "9.6.7.1" } }),
    (0, import_elements.FieldElement)({ name: "Max", id: 7, xref: { document: "cluster", section: "9.6.7.1" } }),
    (0, import_elements.FieldElement)({ name: "Night", id: 8, xref: { document: "cluster", section: "9.6.7.1" } }),
    (0, import_elements.FieldElement)({ name: "Day", id: 9, xref: { document: "cluster", section: "9.6.7.1" } }),
    (0, import_elements.FieldElement)({
      name: "Off",
      id: 16384,
      details: "While in modes with this tag, the device will not attempt to keep the water warm.",
      xref: { document: "cluster", section: "9.6.7.1.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Manual",
      id: 16385,
      details: "While in modes with this tag, the device will attempt to keep the water warm based on the OccupiedHeatingSetpoint attribute of the associated Thermostat cluster.",
      xref: { document: "cluster", section: "9.6.7.1.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "Timed",
      id: 16386,
      details: "While in modes with this tag, the device will attempt to keep the water warm based on the Schedules attribute of the associated Thermostat cluster.",
      xref: { document: "cluster", section: "9.6.7.1.3" }
    })
  )
);
import_MatterDefinition.MatterDefinition.children.push(WaterHeaterMode);
//# sourceMappingURL=WaterHeaterMode.js.map
