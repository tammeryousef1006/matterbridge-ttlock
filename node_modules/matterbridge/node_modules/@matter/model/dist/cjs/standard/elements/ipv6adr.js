"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ipv6adr_exports = {};
__export(ipv6adr_exports, {
  ipv6Adr: () => ipv6Adr
});
module.exports = __toCommonJS(ipv6adr_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const ipv6Adr = (0, import_elements.DatatypeElement)({
  name: "ipv6adr",
  type: "octstr",
  description: "IPv6 Address",
  isSeed: true,
  details: "The IPv6 address data type is derived from an octet string. The octets shall correspond to the full 16 octets that comprise an IPv6 address as defined by RFC 4291. The octets shall be presented in network byte order.\nExamples of encoding:\n  \u2022 Address 2001:DB8:0:0:8:800:200C:417A \u2192 20010DB80000000000080800200C417A\n  \u2022 Address 2001:0DB8:1122:3344:5566:7788:99AA:BBCC \u2192 20010DB8112233445566778899AABBCC",
  xref: { document: "core", section: "7.19.2.39" }
});
import_MatterDefinition.MatterDefinition.children.push(ipv6Adr);
//# sourceMappingURL=ipv6adr.js.map
