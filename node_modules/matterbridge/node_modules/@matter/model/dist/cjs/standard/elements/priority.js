"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var priority_exports = {};
__export(priority_exports, {
  priority: () => priority
});
module.exports = __toCommonJS(priority_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const priority = (0, import_elements.DatatypeElement)(
  {
    name: "priority",
    type: "enum8",
    description: "Priority",
    isSeed: true,
    details: "This is an enumeration of priority used to tag events and possibly other data. The data type does not define any particular ordering among the values. Specific uses of the data type may assign semantics to the values that imply an ordering relationship.",
    xref: { document: "core", section: "7.19.2.17" }
  },
  (0, import_elements.FieldElement)({ name: "Debug", id: 0, description: "Information for engineering debugging/troubleshooting" }),
  (0, import_elements.FieldElement)({
    name: "Info",
    id: 1,
    description: "Information that either drives customer facing features or provides insights into device functions that are used to drive analytics use cases"
  }),
  (0, import_elements.FieldElement)({
    name: "Critical",
    id: 2,
    description: "Information or notification that impacts safety, a critical function, or ongoing reliable operation of the node or application supported on an endpoint."
  })
);
import_MatterDefinition.MatterDefinition.children.push(priority);
//# sourceMappingURL=priority.js.map
