/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var ValidationExceptions;
((ValidationExceptions2) => {
  ValidationExceptions2.AllowedEmptyEnums = /* @__PURE__ */ new Set([
    // Global types defined as enum but without specific fields
    "tag",
    "namespace",
    // Extensions of ModeBase may define mode tags but the base cluster does not
    "ModeBase.ModeTagStruct.value",
    // It's unclear where these enum values come from or if there even a standard definition for them
    "ModeSelect.state.standardNamespace",
    // This is one of multiple *EffectVariant fields (depending on the EffectIdentifier field).  We could override
    // with a union type but then validation wouldn't be entirely accurate anyway, so we just leave as a bare uint16
    "OnOff.offWithEffect.effectVariant",
    // These are defined as broad ranges without specific values
    "OperationalState.OperationalStateEnum",
    // This is also defined in ranges
    "OperationalState.events.operationCompletion.completionErrorCode",
    // These have some values defined but we place in a separate enum so TS allows other values as well
    "OperationalState.ErrorStateEnum"
  ]);
})(ValidationExceptions || (ValidationExceptions = {}));
export {
  ValidationExceptions
};
//# sourceMappingURL=ValidationExceptions.js.map
