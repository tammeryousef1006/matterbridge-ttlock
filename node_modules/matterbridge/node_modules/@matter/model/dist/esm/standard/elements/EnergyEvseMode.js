/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { MatterDefinition } from "../MatterDefinition.js";
import {
  ClusterElement as Cluster,
  AttributeElement as Attribute,
  FieldElement as Field,
  DatatypeElement as Datatype
} from "../../elements/index.js";
const EnergyEvseMode = Cluster(
  {
    name: "EnergyEvseMode",
    id: 157,
    type: "ModeBase",
    classification: "application",
    pics: "EEVSEM",
    details: "This cluster is derived from the Mode Base cluster and defines additional mode tags and namespaced enumerated values for EVSE devices.",
    xref: { document: "cluster", section: "9.4" }
  },
  Attribute({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 2 }),
  Attribute(
    { name: "FeatureMap", id: 65532, type: "FeatureMap", xref: { document: "cluster", section: "9.4.4" } },
    Field({
      name: "DEPONOFF",
      conformance: "X",
      constraint: "0",
      description: "OnOff",
      details: "Dependency with the OnOff cluster"
    })
  ),
  Attribute({
    name: "SupportedModes",
    id: 0,
    details: "At least one entry in the SupportedModes attribute shall include the Manual mode tag in the ModeTags field list.\nModes with entries in the SupportedModes attribute which contain multiple mode tags permitting\ncharging or discharging under different conditions shall permit the charging or discharging to occur if any of the conditions are satisfied.\nModes shall NOT have both the Manual tag and the TimeOfUse or SolarCharging tags defined in the SupportedModes attribute.",
    xref: { document: "cluster", section: "9.4.6.1" }
  }),
  Attribute({ name: "CurrentMode", id: 1, xref: { document: "cluster", section: "9.4.6" } }),
  Attribute({ name: "StartUpMode", id: 2, conformance: "X", xref: { document: "cluster", section: "9.4.6" } }),
  Attribute({ name: "OnMode", id: 3, conformance: "X", xref: { document: "cluster", section: "9.4.6" } }),
  Datatype({
    name: "ModeOptionStruct",
    type: "ModeOptionStruct",
    details: "The table below lists the changes relative to the Mode Base cluster for the fields of the ModeOptionStruct type. A blank field indicates no change.",
    xref: { document: "cluster", section: "9.4.5.1" }
  }),
  Datatype(
    { name: "ModeTag", type: "enum16" },
    Field({ name: "Auto", id: 0, xref: { document: "cluster", section: "9.4.7.1" } }),
    Field({ name: "Quick", id: 1, xref: { document: "cluster", section: "9.4.7.1" } }),
    Field({ name: "Quiet", id: 2, xref: { document: "cluster", section: "9.4.7.1" } }),
    Field({ name: "LowNoise", id: 3, xref: { document: "cluster", section: "9.4.7.1" } }),
    Field({ name: "LowEnergy", id: 4, xref: { document: "cluster", section: "9.4.7.1" } }),
    Field({ name: "Vacation", id: 5, xref: { document: "cluster", section: "9.4.7.1" } }),
    Field({ name: "Min", id: 6, xref: { document: "cluster", section: "9.4.7.1" } }),
    Field({ name: "Max", id: 7, xref: { document: "cluster", section: "9.4.7.1" } }),
    Field({ name: "Night", id: 8, xref: { document: "cluster", section: "9.4.7.1" } }),
    Field({ name: "Day", id: 9, xref: { document: "cluster", section: "9.4.7.1" } }),
    Field({
      name: "Manual",
      id: 16384,
      details: "While in modes with this tag, and once enabled with the EnableCharging command, the EVSE will permit charging based on demand from the EV.",
      xref: { document: "cluster", section: "9.4.7.1.1" }
    }),
    Field({
      name: "TimeOfUse",
      id: 16385,
      details: "While in modes with this tag, and once enabled with the EnableCharging command, the EVSE will attempt to automatically start charging based on the user\u2019s charging targets (for example, set based on a Time of Use tariff to charge at the cheapest times of the day).",
      xref: { document: "cluster", section: "9.4.7.1.2" }
    }),
    Field({
      name: "SolarCharging",
      id: 16386,
      details: "While in modes with this tag, and once enabled with the EnableCharging, the EVSE will attempt to\nautomatically start charging based on available excess solar PV generation, limiting the charging power to avoid importing energy from the grid.",
      xref: { document: "cluster", section: "9.4.7.1.3" }
    }),
    Field({
      name: "V2X",
      id: 16387,
      details: "While in modes with this tag, and once enabled with the EnableDischarging command, the EVSE will permit discharging based on the current charge state of the EV, and its control from an associated Device Energy Management cluster.\nNOTE\nbeing in a mode with this tag set or not does not affect the handling of the EnableDischarging command by the Energy EVSE cluster, but once enabled, only modes with this tag enable the discharging to actually occur.",
      xref: { document: "cluster", section: "9.4.7.1.4" }
    })
  )
);
MatterDefinition.children.push(EnergyEvseMode);
export {
  EnergyEvseMode
};
//# sourceMappingURL=EnergyEvseMode.js.map
