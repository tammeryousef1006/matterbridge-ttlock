/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { MatterDefinition } from "../MatterDefinition.js";
import {
  ClusterElement as Cluster,
  AttributeElement as Attribute,
  FieldElement as Field,
  CommandElement as Command,
  DatatypeElement as Datatype
} from "../../elements/index.js";
const JointFabricDatastoreCluster = Cluster(
  {
    name: "JointFabricDatastoreCluster",
    id: 1874,
    classification: "node",
    pics: "JFDS",
    details: "The Joint Fabric Datastore Cluster is a cluster that provides a mechanism for the Joint Fabric Administrators to manage the set of Nodes, Groups, and Group membership among Nodes in the Joint Fabric.\nWhen an Ecosystem Administrator Node is commissioned onto the Joint Fabric, the Ecosystem Administrator Node has no knowledge of what Nodes and Groups are present, or what set-up information related to the Joint Fabric is provided by the user. To address lack of knowledge, the Joint Fabric Datastore provides the information required for all Ecosystem Administrators to maintain a consistent view of the Joint Fabric including Nodes, Groups, settings and privileges.\nThe Joint Fabric Datastore cluster server shall only be accessible on a Node which is acting as the Joint Fabric Anchor Administrator. When not acting as the Joint Fabric Anchor Administrator, the Joint Fabric Datastore cluster shall NOT be accessible.\nThe Admin level of access to the Joint Fabric Datastore cluster server shall be limited to JF Administrator Nodes identified using the Administrator CAT.\nNOTE Support for Joint Fabric Datastore cluster is provisional.",
    xref: { document: "core", section: "11.24" }
  },
  Attribute({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 1 }),
  Attribute({
    name: "AnchorRootCa",
    id: 0,
    type: "octstr",
    access: "R S A",
    conformance: "M",
    details: "This shall indicate the Anchor Root CA used to sign all NOC Issuers in the Joint Fabric. A null value indicates that the Joint Fabric is not yet formed.",
    xref: { document: "core", section: "11.24.6.1" }
  }),
  Attribute({
    name: "AnchorNodeId",
    id: 1,
    type: "node-id",
    access: "R S A",
    conformance: "M",
    details: "This shall indicate the Node identifier of the Joint Fabric Anchor Root CA.",
    xref: { document: "core", section: "11.24.6.2" }
  }),
  Attribute({
    name: "AnchorVendorId",
    id: 2,
    type: "vendor-id",
    access: "R S A",
    conformance: "M",
    details: "This shall indicate the Vendor identifier of the Joint Fabric Anchor Root CA.",
    xref: { document: "core", section: "11.24.6.3" }
  }),
  Attribute({
    name: "FriendlyName",
    id: 3,
    type: "string",
    access: "R S A",
    conformance: "M",
    constraint: "max 32",
    details: "Friendly name for this fabric which can be propagated to nodes.",
    xref: { document: "core", section: "11.24.6.4" }
  }),
  Attribute(
    {
      name: "GroupKeySetList",
      id: 4,
      type: "list",
      access: "R S A",
      conformance: "M",
      details: "This shall indicate the list of GroupKeySetStruct used in the Joint Fabric.\nThis attribute shall contain at least one entry, the IPK, which has GroupKeySetID of 0.",
      xref: { document: "core", section: "11.24.6.5" }
    },
    Field({ name: "entry", type: "GroupKeyManagement.GroupKeySetStruct" })
  ),
  Attribute(
    {
      name: "GroupList",
      id: 5,
      type: "list",
      access: "R S A",
      conformance: "M",
      details: "This shall indicate the list of groups in the Joint Fabric.",
      xref: { document: "core", section: "11.24.6.6" }
    },
    Field({ name: "entry", type: "DatastoreGroupInformationEntry" })
  ),
  Attribute(
    {
      name: "NodeList",
      id: 6,
      type: "list",
      access: "R S A",
      conformance: "M",
      details: "This shall indicate the list of nodes in the Joint Fabric.",
      xref: { document: "core", section: "11.24.6.7" }
    },
    Field({ name: "entry", type: "DatastoreNodeInformationEntry" })
  ),
  Attribute(
    {
      name: "AdminList",
      id: 7,
      type: "list",
      access: "R S A",
      conformance: "M",
      details: "This shall indicate the list of administrators in the Joint Fabric.\nOnly one Administrator may serve as the Anchor Root CA and Anchor Fabric Administrator and shall have index value 0. All other Joint Fabric Administrators shall be referenced at index 1 or greater.\nA null value or empty list indicates that the Joint Fabric is not yet formed.",
      xref: { document: "core", section: "11.24.6.8" }
    },
    Field({ name: "entry", type: "DatastoreAdministratorInformationEntry" })
  ),
  Attribute({
    name: "StatusEntry",
    id: 8,
    type: "DatastoreAdministratorInformationEntry",
    access: "R S A",
    conformance: "M",
    details: "This shall indicate the current state of the Joint Fabric Datastore Cluster.\nThe Committed status indicates the DataStore is ready for use. The Pending status indicates that the DataStore is not yet ready for use. The DeletePending status indicates that the DataStore is in the process of being transferred to another Joint Fabric Anchor Administrator.",
    xref: { document: "core", section: "11.24.6.9" }
  }),
  Command({
    name: "Section112471",
    id: 0,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section112472",
    id: 1,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section112473",
    id: 2,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section112474",
    id: 3,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section112475",
    id: 4,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section112476",
    id: 5,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section112477",
    id: 6,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section112478",
    id: 7,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section112479",
    id: 8,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section1124710",
    id: 9,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section1124711",
    id: 10,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section1124712",
    id: 11,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section1124713",
    id: 12,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section1124714",
    id: 13,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section1124715",
    id: 14,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section1124716",
    id: 15,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section1124717",
    id: 16,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section1124718",
    id: 17,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section1124719",
    id: 18,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Command({
    name: "Section1124720",
    id: 19,
    access: "F A",
    conformance: "M",
    direction: "request",
    response: "status",
    xref: { document: "core", section: "11.24.7" }
  }),
  Datatype(
    { name: "DatastoreStateEnum", type: "enum8", xref: { document: "core", section: "11.24.5.1" } },
    Field({ name: "Pending", id: 0, conformance: "M", description: "Target device operation is pending" }),
    Field({ name: "Committed", id: 1, conformance: "M", description: "Target device operation has been committed" }),
    Field({ name: "DeletePending", id: 2, conformance: "M", description: "Target device delete operation is pending" })
  ),
  Datatype(
    { name: "DatastoreStatusEntry", type: "struct", xref: { document: "core", section: "11.24.5.2" } },
    Field({
      name: "State",
      id: 0,
      type: "DatastoreStateEnum",
      access: "R F V",
      conformance: "M",
      default: 0,
      details: "This field shall contain the current state of the target device operation.",
      xref: { document: "core", section: "11.24.5.2.1" }
    }),
    Field({
      name: "UpdateTimestamp",
      id: 1,
      type: "epoch-s",
      access: "R F V",
      conformance: "M",
      default: null,
      details: "This field shall contain the timestamp of the last update.",
      xref: { document: "core", section: "11.24.5.2.2" }
    }),
    Field({ name: "FabricIndex", id: 254, type: "FabricIndex" })
  ),
  Datatype(
    { name: "DatastoreNodeKeyEntry", type: "struct", xref: { document: "core", section: "11.24.5.3" } },
    Field({ name: "GroupKeySetId", id: 0, type: "uint16", access: "R F V", conformance: "M" }),
    Field({
      name: "StatusEntry",
      id: 1,
      type: "DatastoreStatusEntry",
      access: "R F V",
      conformance: "M",
      details: "Indicates whether entry in this list is pending, committed, or delete-pending.",
      xref: { document: "core", section: "11.24.5.3.2" }
    }),
    Field({ name: "FabricIndex", id: 254, type: "FabricIndex" })
  ),
  Datatype(
    { name: "DatastoreGroupInformationEntry", type: "struct", xref: { document: "core", section: "11.24.5.4" } },
    Field({
      name: "GroupId",
      id: 0,
      type: "uint64",
      access: "R F V",
      conformance: "M",
      details: "The unique identifier for the group.",
      xref: { document: "core", section: "11.24.5.4.1" }
    }),
    Field({
      name: "FriendlyName",
      id: 1,
      type: "string",
      access: "R F V",
      conformance: "M",
      constraint: "max 32",
      details: "The friendly name for the group.",
      xref: { document: "core", section: "11.24.5.4.2" }
    }),
    Field({
      name: "GroupKeySetId",
      id: 2,
      type: "uint16",
      access: "R F V",
      conformance: "M",
      constraint: "1 to 65535",
      details: "The unique identifier for the group key set.",
      xref: { document: "core", section: "11.24.5.4.3" }
    }),
    Field({
      name: "GroupCat",
      id: 3,
      type: "uint16",
      access: "R F V",
      conformance: "M",
      constraint: "1 to 65535",
      details: "CAT value for this group. This is used for control of individual members of a group (non-broadcast commands).",
      xref: { document: "core", section: "11.24.5.4.4" }
    }),
    Field({
      name: "GroupCatVersion",
      id: 4,
      type: "uint16",
      access: "R F V",
      conformance: "M",
      constraint: "1 to 65535",
      details: "Current version number for this CAT.",
      xref: { document: "core", section: "11.24.5.4.5" }
    }),
    Field({
      name: "GroupPermission",
      id: 5,
      type: "AccessControl.AccessControlEntryPrivilegeEnum",
      access: "R F V",
      conformance: "M",
      details: "The permission level associated with ACL entries for this group. There should be only one Administrator group per fabric, and at most one Manage group per Ecosystem (Vendor Entry).",
      xref: { document: "core", section: "11.24.5.4.6" }
    }),
    Field({ name: "FabricIndex", id: 254, type: "FabricIndex" })
  ),
  Datatype(
    { name: "DatastoreBindingEntry", type: "struct", xref: { document: "core", section: "11.24.5.4.7" } },
    Field({
      name: "ListId",
      id: 0,
      type: "uint16",
      access: "R F V",
      conformance: "M",
      details: "The unique identifier for the Binding entry in the Datastore\u2019s list of DatastoreBindingEntry.",
      xref: { document: "core", section: "11.24.5.4.7.1" }
    }),
    Field({
      name: "Binding",
      id: 1,
      type: "Binding.TargetStruct",
      access: "R F V",
      conformance: "M",
      constraint: "desc",
      details: "The binding target structure.",
      xref: { document: "core", section: "11.24.5.4.7.2" }
    }),
    Field({
      name: "StatusEntry",
      id: 2,
      type: "DatastoreStatusEntry",
      access: "R F V",
      conformance: "M",
      details: "Indicates whether entry in this list is pending, committed, or delete-pending.",
      xref: { document: "core", section: "11.24.5.4.7.3" }
    }),
    Field({ name: "FabricIndex", id: 254, type: "FabricIndex" })
  ),
  Datatype(
    { name: "DatastoreGroupIDEntry", type: "struct", xref: { document: "core", section: "11.24.5.5" } },
    Field({
      name: "GroupId",
      id: 0,
      type: "group-id",
      access: "R F V",
      conformance: "M",
      details: "The unique identifier for the group.",
      xref: { document: "core", section: "11.24.5.5.1" }
    }),
    Field({
      name: "StatusEntry",
      id: 1,
      type: "DatastoreStatusEntry",
      access: "R F V",
      conformance: "M",
      details: "Indicates whether entry in this list is pending, committed, or delete-pending.",
      xref: { document: "core", section: "11.24.5.5.2" }
    }),
    Field({ name: "FabricIndex", id: 254, type: "FabricIndex" })
  ),
  Datatype(
    { name: "DatastoreEndpointEntry", type: "struct", xref: { document: "core", section: "11.24.5.6" } },
    Field({
      name: "EndpointId",
      id: 0,
      type: "endpoint-no",
      access: "R F V",
      conformance: "M",
      details: "The unique identifier for the endpoint.",
      xref: { document: "core", section: "11.24.5.6.1" }
    }),
    Field({
      name: "NodeId",
      id: 1,
      type: "node-id",
      access: "R F V",
      conformance: "M",
      details: "The unique identifier for the node.",
      xref: { document: "core", section: "11.24.5.6.2" }
    }),
    Field({
      name: "FriendlyName",
      id: 2,
      type: "string",
      access: "R F V",
      conformance: "M",
      constraint: "max 32",
      details: "Friendly name for this endpoint which is propagated to nodes. Any changes to Friendly Name or Group Id List (add/remove entry) must follow the pending\u2192committed workflow with current state reflected in the Status Entry.",
      xref: { document: "core", section: "11.24.5.6.3" }
    }),
    Field({
      name: "StatusEntry",
      id: 3,
      type: "DatastoreStatusEntry",
      access: "R F V",
      conformance: "M",
      details: "Indicates whether changes to Friendly Name are pending or committed.",
      xref: { document: "core", section: "11.24.5.6.4" }
    }),
    Field(
      {
        name: "GroupIdList",
        id: 4,
        type: "list",
        access: "R F V",
        conformance: "M",
        details: "List of Group IDs that this endpoint is a member of. Any changes to Group Id List (add/remove entry) must follow the pending\u2192committed workflow with current state reflected in the Status Entry.",
        xref: { document: "core", section: "11.24.5.6.5" }
      },
      Field({ name: "entry", type: "DatastoreGroupIDEntry" })
    ),
    Field(
      {
        name: "BindingList",
        id: 5,
        type: "list",
        access: "R F V",
        conformance: "M",
        details: "List of Binding Targets for this endpoint. Any changes to Binding List (add/remove entry) must follow the pending\u2192committed workflow with current state reflected in the Status Entry.",
        xref: { document: "core", section: "11.24.5.6.6" }
      },
      Field({ name: "entry", type: "DatastoreBindingEntry" })
    ),
    Field({ name: "FabricIndex", id: 254, type: "FabricIndex" })
  ),
  Datatype(
    { name: "DatastoreACLEntry", type: "struct", xref: { document: "core", section: "11.24.5.7" } },
    Field({
      name: "ListId",
      id: 0,
      type: "uint16",
      access: "R F V",
      conformance: "M",
      details: "The unique identifier for the ACL entry in the Datastore\u2019s list of DatastoreACLEntry.",
      xref: { document: "core", section: "11.24.5.7.1" }
    }),
    Field({
      name: "AclEntry",
      id: 1,
      type: "AccessControl.AccessControlEntryStruct",
      access: "R F V",
      conformance: "M",
      details: "The Access Control Entry structure.",
      xref: { document: "core", section: "11.24.5.7.2" }
    }),
    Field({
      name: "StatusEntry",
      id: 2,
      type: "DatastoreStatusEntry",
      access: "R F V",
      conformance: "M",
      details: "Indicates whether entry in this list is pending, committed, or delete-pending.",
      xref: { document: "core", section: "11.24.5.7.3" }
    }),
    Field({ name: "FabricIndex", id: 254, type: "FabricIndex" })
  ),
  Datatype(
    { name: "DatastoreNodeInformationEntry", type: "struct", xref: { document: "core", section: "11.24.5.8" } },
    Field({
      name: "NodeId",
      id: 1,
      type: "node-id",
      access: "R F V",
      conformance: "M",
      details: "The unique identifier for the node.",
      xref: { document: "core", section: "11.24.5.8.1" }
    }),
    Field({
      name: "FriendlyName",
      id: 2,
      type: "string",
      access: "R F V",
      conformance: "M",
      constraint: "max 32",
      details: "Friendly name for this node which is not propagated to nodes.",
      xref: { document: "core", section: "11.24.5.8.2" }
    }),
    Field({
      name: "CommissioningStatusEntry",
      id: 3,
      type: "DatastoreStatusEntry",
      access: "R F V",
      conformance: "M",
      details: "Set to pending prior to completing commissioning, and set to completed after commissioning complete is successful.",
      xref: { document: "core", section: "11.24.5.8.3" }
    }),
    Field(
      {
        name: "NodeKeySetList",
        id: 4,
        type: "list",
        access: "R F V",
        conformance: "M",
        details: "List of Key Set information for the given Node. Updates to the Group Key List must follow the pending\u2192committed workflow with current state reflected in the Status Entry for the corresponding entry in the list.",
        xref: { document: "core", section: "11.24.5.8.4" }
      },
      Field({ name: "entry", type: "DatastoreNodeKeyEntry" })
    ),
    Field(
      {
        name: "AclList",
        id: 5,
        type: "list",
        access: "R F V",
        conformance: "M",
        details: "List of ACL entries. Group membership for this node is inferred from the ACLs. Client access to a Node Information Entry will be determined from the ACL List. Any changes to ACL List (add/remove entry) must follow the pending\u2192committed workflow with current state reflected in the Status Entry for the corresponding entry in the list.",
        xref: { document: "core", section: "11.24.5.8.5" }
      },
      Field({ name: "entry", type: "DatastoreACLEntry" })
    ),
    Field(
      {
        name: "EndpointList",
        id: 6,
        type: "list",
        access: "R F V",
        conformance: "M",
        details: "The list of endpoints for this node. Any changes to Endpoint List (add/remove entry) must follow the pending\u2192committed workflow with current state reflected in the Status Entry for the corresponding entry in the list.",
        xref: { document: "core", section: "11.24.5.8.6" }
      },
      Field({ name: "entry", type: "DatastoreEndpointEntry" })
    ),
    Field({ name: "FabricIndex", id: 254, type: "FabricIndex" })
  ),
  Datatype(
    {
      name: "DatastoreAdministratorInformationEntry",
      type: "struct",
      xref: { document: "core", section: "11.24.5.9" }
    },
    Field({
      name: "NodeId",
      id: 1,
      type: "node-id",
      access: "R F V",
      conformance: "M",
      details: "The unique identifier for the node.",
      xref: { document: "core", section: "11.24.5.9.1" }
    }),
    Field({
      name: "FriendlyName",
      id: 2,
      type: "string",
      access: "R F V",
      conformance: "M",
      constraint: "max 32",
      details: "Friendly name for this node which is not propagated to nodes.",
      xref: { document: "core", section: "11.24.5.9.2" }
    }),
    Field({
      name: "VendorId",
      id: 3,
      type: "vendor-id",
      access: "R F V",
      conformance: "M",
      details: "The Vendor ID for the node.",
      xref: { document: "core", section: "11.24.5.9.3" }
    }),
    Field({
      name: "Icac",
      id: 4,
      type: "octstr",
      access: "R F V",
      conformance: "M",
      constraint: "max 400",
      details: "The ICAC used to issue the NOC.",
      xref: { document: "core", section: "11.24.5.9.4" }
    }),
    Field({ name: "FabricIndex", id: 254, type: "FabricIndex" })
  )
);
MatterDefinition.children.push(JointFabricDatastoreCluster);
export {
  JointFabricDatastoreCluster
};
//# sourceMappingURL=JointFabricDatastoreCluster.js.map
