/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { MatterDefinition } from "../MatterDefinition.js";
import { DeviceTypeElement as DeviceType, RequirementElement as Requirement } from "../../elements/index.js";
const OtaProviderDt = DeviceType(
  {
    name: "OtaProvider",
    id: 20,
    category: "Utility",
    classification: "utility",
    details: "An OTA Provider is a node that is capable of providing an OTA software update to other nodes on the same fabric.",
    xref: { document: "device", section: "2.4" }
  },
  Requirement(
    { name: "Descriptor", id: 29, element: "serverCluster" },
    Requirement({ name: "DeviceTypeList", default: [{ deviceType: 20, revision: 1 }], element: "attribute" })
  ),
  Requirement({
    name: "OtaSoftwareUpdateRequestor",
    id: 42,
    conformance: "O",
    element: "clientCluster",
    xref: { document: "device", section: "2.4.3" }
  }),
  Requirement({
    name: "OtaSoftwareUpdateProvider",
    id: 41,
    conformance: "M",
    element: "serverCluster",
    xref: { document: "device", section: "2.4.3" }
  })
);
MatterDefinition.children.push(OtaProviderDt);
export {
  OtaProviderDt
};
//# sourceMappingURL=OtaProviderDT.js.map
