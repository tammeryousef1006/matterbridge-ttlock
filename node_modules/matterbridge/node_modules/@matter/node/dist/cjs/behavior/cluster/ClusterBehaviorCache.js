"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ClusterBehaviorCache_exports = {};
__export(ClusterBehaviorCache_exports, {
  ClusterBehaviorCache: () => ClusterBehaviorCache
});
module.exports = __toCommonJS(ClusterBehaviorCache_exports);
/**
 * @license
 * Copyright 2022-2025 Project CHIP Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const typeCache = /* @__PURE__ */ new WeakMap();
var ClusterBehaviorCache;
((ClusterBehaviorCache2) => {
  function get(cluster, base, schema) {
    const baseCache = typeCache.get(base);
    if (baseCache === void 0) {
      return;
    }
    const clusterCache = baseCache.get(cluster);
    if (clusterCache === void 0) {
      return;
    }
    return clusterCache.get(schema)?.deref();
  }
  ClusterBehaviorCache2.get = get;
  function set(cluster, base, schema, type) {
    let baseCache = typeCache.get(base);
    if (baseCache === void 0) {
      typeCache.set(base, baseCache = /* @__PURE__ */ new WeakMap());
    }
    let clusterCache = baseCache.get(cluster);
    if (clusterCache === void 0) {
      baseCache.set(cluster, clusterCache = /* @__PURE__ */ new WeakMap());
    }
    clusterCache.set(schema, new WeakRef(type));
  }
  ClusterBehaviorCache2.set = set;
})(ClusterBehaviorCache || (ClusterBehaviorCache = {}));
//# sourceMappingURL=ClusterBehaviorCache.js.map
