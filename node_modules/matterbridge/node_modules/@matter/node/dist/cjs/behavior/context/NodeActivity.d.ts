/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { Diagnostic, Observable } from "#general";
/**
 * Tracks activity associated with a node.
 */
export declare class NodeActivity {
    #private;
    get isActive(): boolean;
    get active(): Observable<[], void>;
    get inactive(): Observable<[], void>;
    get actors(): NodeActivity.Activity[];
    begin(description: unknown, onClose?: () => void): NodeActivity.Activity;
    get [Diagnostic.value](): Diagnostic;
}
export declare namespace NodeActivity {
    interface Activity extends Disposable {
        readonly stack: unknown[];
        readonly elapsed: Diagnostic.Elapsed;
        readonly [Diagnostic.value]: unknown;
        frame(description: unknown): Disposable;
        close(): void;
    }
}
//# sourceMappingURL=NodeActivity.d.ts.map