"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var StateType_exports = {};
__export(StateType_exports, {
  DerivedState: () => DerivedState,
  EmptyState: () => EmptyState
});
module.exports = __toCommonJS(StateType_exports);
var import_general = require("#general");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const EmptyState = function() {
  return {};
};
function DerivedState({
  base,
  values,
  name
}) {
  if (base === EmptyState) {
    base = void 0;
  }
  const oldDefaults = base ? new base() : {};
  let newDefaults;
  for (const key in values) {
    const value = values[key];
    if (!Object.prototype.hasOwnProperty.call(oldDefaults, key) || oldDefaults[key] !== value) {
      if (!newDefaults) {
        newDefaults = {};
      }
      newDefaults[key] = value;
    }
  }
  if (!newDefaults) {
    return base ?? EmptyState;
  }
  return (0, import_general.GeneratedClass)({
    name: name ?? base?.name ?? "State",
    base,
    instanceProperties: newDefaults
  });
}
//# sourceMappingURL=StateType.js.map
