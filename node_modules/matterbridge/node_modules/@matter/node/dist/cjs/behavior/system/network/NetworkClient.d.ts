/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { DatatypeModel } from "#model";
import { Interactable, Subscribe } from "#protocol";
import { ClientNetworkRuntime } from "./ClientNetworkRuntime.js";
import { NetworkBehavior } from "./NetworkBehavior.js";
export declare class NetworkClient extends NetworkBehavior {
    #private;
    internal: NetworkClient.Internal;
    state: NetworkClient.State;
    initialize(): void;
    interact<T>(interactor: (client: Interactable) => Promise<T>): Promise<T>;
    protected startup(): Promise<void>;
    /**
     * Define logical schema for fields that should persist.
     */
    static readonly schema: DatatypeModel;
}
export declare namespace NetworkClient {
    class Internal extends NetworkBehavior.Internal {
        runtime?: ClientNetworkRuntime;
    }
    class State extends NetworkBehavior.State {
        /**
         * A subscription installed when the node is first commissioned and when the service is restarted.
         *
         * The default subscription is a wildcard for all attributes and events of the node.  You can set to undefined
         * or filter the fields and values but this will prevent the relevant state values from loading.
         *
         * If this subscription does not include appropriate BasicInformation and Descriptor attributes then the
         * endpoint structure may not initialize fully.
         *
         * Set to null to disable.
         */
        startupSubscription?: Subscribe | null;
    }
}
//# sourceMappingURL=NetworkClient.d.ts.map