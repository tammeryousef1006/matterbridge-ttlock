"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var NetworkClient_exports = {};
__export(NetworkClient_exports, {
  NetworkClient: () => NetworkClient
});
module.exports = __toCommonJS(NetworkClient_exports);
var import_root = require("#endpoints/root");
var import_general = require("#general");
var import_model = require("#model");
var import_protocol = require("#protocol");
var import_NetworkBehavior = require("./NetworkBehavior.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const DEFAULT_MIN_INTERVAL_FLOOR_SECONDS = 1;
class NetworkClient extends import_NetworkBehavior.NetworkBehavior {
  initialize() {
    this.reactTo(this.#node.lifecycle.online, this.startup);
  }
  interact(interactor) {
    const { runtime } = this.internal;
    if (!runtime) {
      throw new import_general.ImplementationError("Cannot advertise offline server");
    }
    return runtime.interact(interactor);
  }
  async startup() {
    const { startupSubscription } = this.state;
    if (startupSubscription === null) {
      return;
    }
    const message = (0, import_protocol.Subscribe)({
      isFabricFiltered: true,
      minIntervalFloorSeconds: DEFAULT_MIN_INTERVAL_FLOOR_SECONDS,
      maxIntervalCeilingSeconds: 0,
      ...startupSubscription
    });
    this.#node.interaction.subscribe(message);
  }
  get #node() {
    return this.endpoint.ownerOfType(import_root.RootEndpoint);
  }
  /**
   * Define logical schema for fields that should persist.
   */
  static schema = new import_model.DatatypeModel({
    name: "NetworkState",
    type: "struct",
    children: [
      (0, import_model.FieldElement)({
        name: "startupSubscription",
        type: "any",
        default: { type: "properties", properties: {} },
        quality: "XN"
      })
    ]
  });
}
((NetworkClient2) => {
  class Internal extends import_NetworkBehavior.NetworkBehavior.Internal {
  }
  NetworkClient2.Internal = Internal;
  class State extends import_NetworkBehavior.NetworkBehavior.State {
    /**
     * A subscription installed when the node is first commissioned and when the service is restarted.
     *
     * The default subscription is a wildcard for all attributes and events of the node.  You can set to undefined
     * or filter the fields and values but this will prevent the relevant state values from loading.
     *
     * If this subscription does not include appropriate BasicInformation and Descriptor attributes then the
     * endpoint structure may not initialize fully.
     *
     * Set to null to disable.
     */
    startupSubscription;
  }
  NetworkClient2.State = State;
})(NetworkClient || (NetworkClient = {}));
//# sourceMappingURL=NetworkClient.js.map
