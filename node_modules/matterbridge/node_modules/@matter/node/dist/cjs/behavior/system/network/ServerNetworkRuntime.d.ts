/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { Construction, NetworkInterface, NetworkInterfaceDetailed, TransportInterface, TransportInterfaceSet } from "#general";
import type { ServerNode } from "#node/ServerNode.js";
import { DeviceAdvertiser, InstanceBroadcaster, MdnsInstanceBroadcaster } from "#protocol";
import { NetworkRuntime } from "./NetworkRuntime.js";
/**
 * Handles network functionality for {@link NodeServer}.
 */
export declare class ServerNetworkRuntime extends NetworkRuntime {
    #private;
    get owner(): ServerNode;
    /**
     * Access the MDNS broadcaster for the node.
     */
    get mdnsBroadcaster(): MdnsInstanceBroadcaster;
    get networkInterfaceConfiguration(): NetworkInterface[];
    getNetworkInterfaces(): Promise<NetworkInterfaceDetailed[]>;
    openAdvertisementWindow(): Promise<void>;
    advertiseNow(): Promise<void>;
    /**
     * A BLE broadcaster.
     */
    protected get bleBroadcaster(): InstanceBroadcaster;
    /**
     * A BLE transport.
     */
    protected get bleTransport(): TransportInterface;
    /**
     * Add transports to the {@link TransportInterfaceSet}.
     */
    protected addTransports(interfaces: TransportInterfaceSet): Promise<void>;
    /**
     * Add broadcasters to the {@link DeviceAdvertiser}.
     */
    protected addBroadcasters(advertiser: DeviceAdvertiser): Promise<void>;
    /**
     * When the first Fabric gets added we need to enable MDNS broadcasting.
     */
    enableMdnsBroadcasting(): void;
    /**
     * On commission we turn off bluetooth and join the IP network if we haven't already.
     *
     * On decommission we're destroyed so don't need to handle that case.
     */
    endUncommissionedMode(): void;
    endCommissioning(): Promise<void>;
    protected start(): Promise<void>;
    [Construction.construct](): Promise<void>;
    protected stop(): Promise<void>;
    protected blockNewActivity(): void;
    protected configureCommissioning(): Promise<void>;
}
//# sourceMappingURL=ServerNetworkRuntime.d.ts.map