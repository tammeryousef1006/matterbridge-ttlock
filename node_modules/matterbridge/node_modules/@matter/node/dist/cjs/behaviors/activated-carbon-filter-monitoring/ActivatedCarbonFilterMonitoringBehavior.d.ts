/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
/*** THIS FILE IS GENERATED, DO NOT EDIT ***/
import { ActivatedCarbonFilterMonitoring } from "#clusters/activated-carbon-filter-monitoring";
import { ClusterBehavior } from "../../behavior/cluster/ClusterBehavior.js";
import { ResourceMonitoringInterface } from "../resource-monitoring/ResourceMonitoringInterface.js";
/**
 * ActivatedCarbonFilterMonitoringBehavior is the base class for objects that support interaction with
 * {@link ActivatedCarbonFilterMonitoring.Cluster}.
 *
 * This class does not have optional features of ActivatedCarbonFilterMonitoring.Cluster enabled. You can enable
 * additional features using ActivatedCarbonFilterMonitoringBehavior.with.
 */
export declare const ActivatedCarbonFilterMonitoringBehavior: ClusterBehavior.Type<ActivatedCarbonFilterMonitoring.Cluster, ClusterBehavior.Type<import("@matter/types").ClusterType.Of<{
    readonly id: 0;
    readonly revision: 0;
    readonly name: "Unknown";
    readonly attributes: {};
    readonly commands: {};
    readonly events: {};
}>, typeof ClusterBehavior, ResourceMonitoringInterface>, ResourceMonitoringInterface>;
type ActivatedCarbonFilterMonitoringBehaviorType = InstanceType<typeof ActivatedCarbonFilterMonitoringBehavior>;
export interface ActivatedCarbonFilterMonitoringBehavior extends ActivatedCarbonFilterMonitoringBehaviorType {
}
type StateType = InstanceType<typeof ActivatedCarbonFilterMonitoringBehavior.State>;
export declare namespace ActivatedCarbonFilterMonitoringBehavior {
    interface State extends StateType {
    }
}
export {};
//# sourceMappingURL=ActivatedCarbonFilterMonitoringBehavior.d.ts.map