"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var LocalizationConfigurationServer_exports = {};
__export(LocalizationConfigurationServer_exports, {
  LocalizationConfigurationServer: () => LocalizationConfigurationServer
});
module.exports = __toCommonJS(LocalizationConfigurationServer_exports);
var import_LocalizationConfigurationBehavior = require("./LocalizationConfigurationBehavior.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
class LocalizationConfigurationServer extends import_LocalizationConfigurationBehavior.LocalizationConfigurationBehavior {
  initialize() {
    if (this.state.activeLocale === void 0) {
      this.state.activeLocale = this.detectedLocale;
    }
    if (this.state.supportedLocales === void 0) {
      this.state.supportedLocales = [this.state.activeLocale];
    }
  }
  /** Override this getter with own implementation to detect the locale of the system. */
  get detectedLocale() {
    return Intl.DateTimeFormat().resolvedOptions().locale;
  }
}
((LocalizationConfigurationServer2) => {
})(LocalizationConfigurationServer || (LocalizationConfigurationServer = {}));
//# sourceMappingURL=LocalizationConfigurationServer.js.map
