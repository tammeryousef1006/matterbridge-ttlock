/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
/*** THIS FILE IS GENERATED, DO NOT EDIT ***/
import { TargetNavigator } from "#clusters/target-navigator";
import { ClusterBehavior } from "../../behavior/cluster/ClusterBehavior.js";
import { TargetNavigatorInterface } from "./TargetNavigatorInterface.js";
/**
 * TargetNavigatorBehavior is the base class for objects that support interaction with {@link TargetNavigator.Cluster}.
 */
export declare const TargetNavigatorBehavior: ClusterBehavior.Type<TargetNavigator.Cluster, ClusterBehavior.Type<import("@matter/types").ClusterType.Of<{
    readonly id: 0;
    readonly revision: 0;
    readonly name: "Unknown";
    readonly attributes: {};
    readonly commands: {};
    readonly events: {};
}>, typeof ClusterBehavior, TargetNavigatorInterface>, TargetNavigatorInterface>;
type TargetNavigatorBehaviorType = InstanceType<typeof TargetNavigatorBehavior>;
export interface TargetNavigatorBehavior extends TargetNavigatorBehaviorType {
}
type StateType = InstanceType<typeof TargetNavigatorBehavior.State>;
export declare namespace TargetNavigatorBehavior {
    interface State extends StateType {
    }
}
export {};
//# sourceMappingURL=TargetNavigatorBehavior.d.ts.map