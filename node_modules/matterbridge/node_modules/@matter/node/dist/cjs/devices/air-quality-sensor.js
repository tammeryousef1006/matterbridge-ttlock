"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var air_quality_sensor_exports = {};
__export(air_quality_sensor_exports, {
  AirQualitySensorDevice: () => AirQualitySensorDevice,
  AirQualitySensorDeviceDefinition: () => AirQualitySensorDeviceDefinition,
  AirQualitySensorRequirements: () => AirQualitySensorRequirements
});
module.exports = __toCommonJS(air_quality_sensor_exports);
var import_IdentifyServer = require("../behaviors/identify/IdentifyServer.js");
var import_AirQualityServer = require("../behaviors/air-quality/AirQualityServer.js");
var import_TemperatureMeasurementServer = require("../behaviors/temperature-measurement/TemperatureMeasurementServer.js");
var import_RelativeHumidityMeasurementServer = require("../behaviors/relative-humidity-measurement/RelativeHumidityMeasurementServer.js");
var import_CarbonMonoxideConcentrationMeasurementServer = require("../behaviors/carbon-monoxide-concentration-measurement/CarbonMonoxideConcentrationMeasurementServer.js");
var import_CarbonDioxideConcentrationMeasurementServer = require("../behaviors/carbon-dioxide-concentration-measurement/CarbonDioxideConcentrationMeasurementServer.js");
var import_NitrogenDioxideConcentrationMeasurementServer = require("../behaviors/nitrogen-dioxide-concentration-measurement/NitrogenDioxideConcentrationMeasurementServer.js");
var import_OzoneConcentrationMeasurementServer = require("../behaviors/ozone-concentration-measurement/OzoneConcentrationMeasurementServer.js");
var import_FormaldehydeConcentrationMeasurementServer = require("../behaviors/formaldehyde-concentration-measurement/FormaldehydeConcentrationMeasurementServer.js");
var import_Pm1ConcentrationMeasurementServer = require("../behaviors/pm1-concentration-measurement/Pm1ConcentrationMeasurementServer.js");
var import_Pm25ConcentrationMeasurementServer = require("../behaviors/pm25-concentration-measurement/Pm25ConcentrationMeasurementServer.js");
var import_Pm10ConcentrationMeasurementServer = require("../behaviors/pm10-concentration-measurement/Pm10ConcentrationMeasurementServer.js");
var import_RadonConcentrationMeasurementServer = require("../behaviors/radon-concentration-measurement/RadonConcentrationMeasurementServer.js");
var import_TotalVolatileOrganicCompoundsConcentrationMeasurementServer = require("../behaviors/total-volatile-organic-compounds-concentration-measurement/TotalVolatileOrganicCompoundsConcentrationMeasurementServer.js");
var import_MutableEndpoint = require("../endpoint/type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../endpoint/properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var AirQualitySensorRequirements;
((AirQualitySensorRequirements2) => {
  AirQualitySensorRequirements2.IdentifyServer = import_IdentifyServer.IdentifyServer;
  AirQualitySensorRequirements2.AirQualityServer = import_AirQualityServer.AirQualityServer;
  AirQualitySensorRequirements2.TemperatureMeasurementServer = import_TemperatureMeasurementServer.TemperatureMeasurementServer;
  AirQualitySensorRequirements2.RelativeHumidityMeasurementServer = import_RelativeHumidityMeasurementServer.RelativeHumidityMeasurementServer;
  AirQualitySensorRequirements2.CarbonMonoxideConcentrationMeasurementServer = import_CarbonMonoxideConcentrationMeasurementServer.CarbonMonoxideConcentrationMeasurementServer;
  AirQualitySensorRequirements2.CarbonDioxideConcentrationMeasurementServer = import_CarbonDioxideConcentrationMeasurementServer.CarbonDioxideConcentrationMeasurementServer;
  AirQualitySensorRequirements2.NitrogenDioxideConcentrationMeasurementServer = import_NitrogenDioxideConcentrationMeasurementServer.NitrogenDioxideConcentrationMeasurementServer;
  AirQualitySensorRequirements2.OzoneConcentrationMeasurementServer = import_OzoneConcentrationMeasurementServer.OzoneConcentrationMeasurementServer;
  AirQualitySensorRequirements2.FormaldehydeConcentrationMeasurementServer = import_FormaldehydeConcentrationMeasurementServer.FormaldehydeConcentrationMeasurementServer;
  AirQualitySensorRequirements2.Pm1ConcentrationMeasurementServer = import_Pm1ConcentrationMeasurementServer.Pm1ConcentrationMeasurementServer;
  AirQualitySensorRequirements2.Pm25ConcentrationMeasurementServer = import_Pm25ConcentrationMeasurementServer.Pm25ConcentrationMeasurementServer;
  AirQualitySensorRequirements2.Pm10ConcentrationMeasurementServer = import_Pm10ConcentrationMeasurementServer.Pm10ConcentrationMeasurementServer;
  AirQualitySensorRequirements2.RadonConcentrationMeasurementServer = import_RadonConcentrationMeasurementServer.RadonConcentrationMeasurementServer;
  AirQualitySensorRequirements2.TotalVolatileOrganicCompoundsConcentrationMeasurementServer = import_TotalVolatileOrganicCompoundsConcentrationMeasurementServer.TotalVolatileOrganicCompoundsConcentrationMeasurementServer;
  AirQualitySensorRequirements2.server = {
    mandatory: { Identify: AirQualitySensorRequirements2.IdentifyServer, AirQuality: AirQualitySensorRequirements2.AirQualityServer },
    optional: {
      TemperatureMeasurement: AirQualitySensorRequirements2.TemperatureMeasurementServer,
      RelativeHumidityMeasurement: AirQualitySensorRequirements2.RelativeHumidityMeasurementServer,
      CarbonMonoxideConcentrationMeasurement: AirQualitySensorRequirements2.CarbonMonoxideConcentrationMeasurementServer,
      CarbonDioxideConcentrationMeasurement: AirQualitySensorRequirements2.CarbonDioxideConcentrationMeasurementServer,
      NitrogenDioxideConcentrationMeasurement: AirQualitySensorRequirements2.NitrogenDioxideConcentrationMeasurementServer,
      OzoneConcentrationMeasurement: AirQualitySensorRequirements2.OzoneConcentrationMeasurementServer,
      FormaldehydeConcentrationMeasurement: AirQualitySensorRequirements2.FormaldehydeConcentrationMeasurementServer,
      Pm1ConcentrationMeasurement: AirQualitySensorRequirements2.Pm1ConcentrationMeasurementServer,
      Pm25ConcentrationMeasurement: AirQualitySensorRequirements2.Pm25ConcentrationMeasurementServer,
      Pm10ConcentrationMeasurement: AirQualitySensorRequirements2.Pm10ConcentrationMeasurementServer,
      RadonConcentrationMeasurement: AirQualitySensorRequirements2.RadonConcentrationMeasurementServer,
      TotalVolatileOrganicCompoundsConcentrationMeasurement: AirQualitySensorRequirements2.TotalVolatileOrganicCompoundsConcentrationMeasurementServer
    }
  };
})(AirQualitySensorRequirements || (AirQualitySensorRequirements = {}));
const AirQualitySensorDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "AirQualitySensor",
  deviceType: 44,
  deviceRevision: 1,
  requirements: AirQualitySensorRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(
    AirQualitySensorRequirements.server.mandatory.Identify,
    AirQualitySensorRequirements.server.mandatory.AirQuality
  )
});
const AirQualitySensorDevice = AirQualitySensorDeviceDefinition;
//# sourceMappingURL=air-quality-sensor.js.map
