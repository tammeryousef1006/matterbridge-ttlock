"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var cook_surface_exports = {};
__export(cook_surface_exports, {
  CookSurfaceDevice: () => CookSurfaceDevice,
  CookSurfaceDeviceDefinition: () => CookSurfaceDeviceDefinition,
  CookSurfaceRequirements: () => CookSurfaceRequirements
});
module.exports = __toCommonJS(cook_surface_exports);
var import_TemperatureControlServer = require("../behaviors/temperature-control/TemperatureControlServer.js");
var import_TemperatureMeasurementServer = require("../behaviors/temperature-measurement/TemperatureMeasurementServer.js");
var import_OnOffServer = require("../behaviors/on-off/OnOffServer.js");
var import_MutableEndpoint = require("../endpoint/type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../endpoint/properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var CookSurfaceRequirements;
((CookSurfaceRequirements2) => {
  CookSurfaceRequirements2.TemperatureControlServer = import_TemperatureControlServer.TemperatureControlServer;
  CookSurfaceRequirements2.TemperatureMeasurementServer = import_TemperatureMeasurementServer.TemperatureMeasurementServer;
  CookSurfaceRequirements2.OnOffServer = import_OnOffServer.OnOffServer.with("OffOnly");
  CookSurfaceRequirements2.server = {
    optional: {
      TemperatureControl: CookSurfaceRequirements2.TemperatureControlServer,
      TemperatureMeasurement: CookSurfaceRequirements2.TemperatureMeasurementServer,
      OnOff: CookSurfaceRequirements2.OnOffServer
    },
    mandatory: {}
  };
})(CookSurfaceRequirements || (CookSurfaceRequirements = {}));
const CookSurfaceDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "CookSurface",
  deviceType: 119,
  deviceRevision: 1,
  requirements: CookSurfaceRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)()
});
const CookSurfaceDevice = CookSurfaceDeviceDefinition;
//# sourceMappingURL=cook-surface.js.map
