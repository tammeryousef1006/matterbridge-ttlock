"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var dishwasher_exports = {};
__export(dishwasher_exports, {
  DishwasherDevice: () => DishwasherDevice,
  DishwasherDeviceDefinition: () => DishwasherDeviceDefinition,
  DishwasherRequirements: () => DishwasherRequirements
});
module.exports = __toCommonJS(dishwasher_exports);
var import_OperationalStateServer = require("../behaviors/operational-state/OperationalStateServer.js");
var import_IdentifyServer = require("../behaviors/identify/IdentifyServer.js");
var import_OnOffServer = require("../behaviors/on-off/OnOffServer.js");
var import_TemperatureControlServer = require("../behaviors/temperature-control/TemperatureControlServer.js");
var import_DishwasherModeServer = require("../behaviors/dishwasher-mode/DishwasherModeServer.js");
var import_DishwasherAlarmServer = require("../behaviors/dishwasher-alarm/DishwasherAlarmServer.js");
var import_MutableEndpoint = require("../endpoint/type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../endpoint/properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var DishwasherRequirements;
((DishwasherRequirements2) => {
  DishwasherRequirements2.OperationalStateServer = import_OperationalStateServer.OperationalStateServer;
  DishwasherRequirements2.IdentifyServer = import_IdentifyServer.IdentifyServer;
  DishwasherRequirements2.OnOffServer = import_OnOffServer.OnOffServer.with("DeadFrontBehavior");
  DishwasherRequirements2.TemperatureControlServer = import_TemperatureControlServer.TemperatureControlServer;
  DishwasherRequirements2.DishwasherModeServer = import_DishwasherModeServer.DishwasherModeServer;
  DishwasherRequirements2.DishwasherAlarmServer = import_DishwasherAlarmServer.DishwasherAlarmServer;
  DishwasherRequirements2.server = {
    mandatory: { OperationalState: DishwasherRequirements2.OperationalStateServer },
    optional: {
      Identify: DishwasherRequirements2.IdentifyServer,
      OnOff: DishwasherRequirements2.OnOffServer,
      TemperatureControl: DishwasherRequirements2.TemperatureControlServer,
      DishwasherMode: DishwasherRequirements2.DishwasherModeServer,
      DishwasherAlarm: DishwasherRequirements2.DishwasherAlarmServer
    }
  };
})(DishwasherRequirements || (DishwasherRequirements = {}));
const DishwasherDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "Dishwasher",
  deviceType: 117,
  deviceRevision: 1,
  requirements: DishwasherRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(DishwasherRequirements.server.mandatory.OperationalState)
});
const DishwasherDevice = DishwasherDeviceDefinition;
//# sourceMappingURL=dishwasher.js.map
