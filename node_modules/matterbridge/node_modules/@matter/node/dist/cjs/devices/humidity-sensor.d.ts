/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
/*** THIS FILE IS GENERATED, DO NOT EDIT ***/
import { IdentifyServer as BaseIdentifyServer } from "../behaviors/identify/IdentifyServer.js";
import { RelativeHumidityMeasurementServer as BaseRelativeHumidityMeasurementServer } from "../behaviors/relative-humidity-measurement/RelativeHumidityMeasurementServer.js";
import { MutableEndpoint } from "../endpoint/type/MutableEndpoint.js";
import { Identity } from "#general";
/**
 * A humidity sensor (in most cases a Relative humidity sensor) reports humidity measurements.
 *
 * @see {@link MatterSpecification.v14.Device} ยง 7.7
 */
export interface HumiditySensorDevice extends Identity<typeof HumiditySensorDeviceDefinition> {
}
export declare namespace HumiditySensorRequirements {
    /**
     * The Identify cluster is required by the Matter specification.
     *
     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.
     */
    const IdentifyServer: typeof BaseIdentifyServer;
    /**
     * The RelativeHumidityMeasurement cluster is required by the Matter specification.
     *
     * We provide this alias to the default implementation {@link RelativeHumidityMeasurementServer} for convenience.
     */
    const RelativeHumidityMeasurementServer: typeof BaseRelativeHumidityMeasurementServer;
    /**
     * An implementation for each server cluster supported by the endpoint per the Matter specification.
     */
    const server: {
        mandatory: {
            Identify: typeof BaseIdentifyServer;
            RelativeHumidityMeasurement: typeof BaseRelativeHumidityMeasurementServer;
        };
    };
}
export declare const HumiditySensorDeviceDefinition: MutableEndpoint.With<import("../index.js").EndpointType.For<{
    readonly name: "HumiditySensor";
    readonly deviceType: 775;
    readonly deviceRevision: 2;
    readonly requirements: typeof HumiditySensorRequirements;
    readonly behaviors: {
        readonly identify: typeof BaseIdentifyServer;
    } & {
        readonly relativeHumidityMeasurement: typeof BaseRelativeHumidityMeasurementServer;
    };
}>, {
    readonly identify: typeof BaseIdentifyServer;
} & {
    readonly relativeHumidityMeasurement: typeof BaseRelativeHumidityMeasurementServer;
}>;
export declare const HumiditySensorDevice: HumiditySensorDevice;
//# sourceMappingURL=humidity-sensor.d.ts.map