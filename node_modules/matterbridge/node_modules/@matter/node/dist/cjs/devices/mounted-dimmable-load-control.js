"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var mounted_dimmable_load_control_exports = {};
__export(mounted_dimmable_load_control_exports, {
  MountedDimmableLoadControlDevice: () => MountedDimmableLoadControlDevice,
  MountedDimmableLoadControlDeviceDefinition: () => MountedDimmableLoadControlDeviceDefinition,
  MountedDimmableLoadControlRequirements: () => MountedDimmableLoadControlRequirements
});
module.exports = __toCommonJS(mounted_dimmable_load_control_exports);
var import_IdentifyServer = require("../behaviors/identify/IdentifyServer.js");
var import_GroupsServer = require("../behaviors/groups/GroupsServer.js");
var import_OnOffServer = require("../behaviors/on-off/OnOffServer.js");
var import_LevelControlServer = require("../behaviors/level-control/LevelControlServer.js");
var import_ScenesManagementServer = require("../behaviors/scenes-management/ScenesManagementServer.js");
var import_OccupancySensingBehavior = require("../behaviors/occupancy-sensing/OccupancySensingBehavior.js");
var import_MutableEndpoint = require("../endpoint/type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../endpoint/properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var MountedDimmableLoadControlRequirements;
((MountedDimmableLoadControlRequirements2) => {
  MountedDimmableLoadControlRequirements2.IdentifyServer = import_IdentifyServer.IdentifyServer.alter({ commands: { triggerEffect: { optional: false } } });
  MountedDimmableLoadControlRequirements2.GroupsServer = import_GroupsServer.GroupsServer;
  MountedDimmableLoadControlRequirements2.OnOffServer = import_OnOffServer.OnOffServer.with("Lighting");
  MountedDimmableLoadControlRequirements2.LevelControlServer = import_LevelControlServer.LevelControlServer.with("OnOff", "Lighting").alter({
    attributes: {
      currentLevel: { min: 1, max: 254 },
      minLevel: { default: 1, min: 1, max: 2 },
      maxLevel: { default: 254, min: 254, max: 255 }
    }
  });
  MountedDimmableLoadControlRequirements2.ScenesManagementServer = import_ScenesManagementServer.ScenesManagementServer;
  MountedDimmableLoadControlRequirements2.OccupancySensingBehavior = import_OccupancySensingBehavior.OccupancySensingBehavior;
  MountedDimmableLoadControlRequirements2.server = {
    mandatory: {
      Identify: MountedDimmableLoadControlRequirements2.IdentifyServer,
      Groups: MountedDimmableLoadControlRequirements2.GroupsServer,
      OnOff: MountedDimmableLoadControlRequirements2.OnOffServer,
      LevelControl: MountedDimmableLoadControlRequirements2.LevelControlServer
    },
    optional: { ScenesManagement: MountedDimmableLoadControlRequirements2.ScenesManagementServer }
  };
  MountedDimmableLoadControlRequirements2.client = { optional: { OccupancySensing: MountedDimmableLoadControlRequirements2.OccupancySensingBehavior }, mandatory: {} };
})(MountedDimmableLoadControlRequirements || (MountedDimmableLoadControlRequirements = {}));
const MountedDimmableLoadControlDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "MountedDimmableLoadControl",
  deviceType: 272,
  deviceRevision: 1,
  requirements: MountedDimmableLoadControlRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(
    MountedDimmableLoadControlRequirements.server.mandatory.Identify,
    MountedDimmableLoadControlRequirements.server.mandatory.Groups,
    MountedDimmableLoadControlRequirements.server.mandatory.OnOff,
    MountedDimmableLoadControlRequirements.server.mandatory.LevelControl
  )
});
const MountedDimmableLoadControlDevice = MountedDimmableLoadControlDeviceDefinition;
//# sourceMappingURL=mounted-dimmable-load-control.js.map
