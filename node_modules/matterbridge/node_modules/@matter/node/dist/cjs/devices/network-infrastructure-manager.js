"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var network_infrastructure_manager_exports = {};
__export(network_infrastructure_manager_exports, {
  NetworkInfrastructureManagerDevice: () => NetworkInfrastructureManagerDevice,
  NetworkInfrastructureManagerDeviceDefinition: () => NetworkInfrastructureManagerDeviceDefinition,
  NetworkInfrastructureManagerRequirements: () => NetworkInfrastructureManagerRequirements
});
module.exports = __toCommonJS(network_infrastructure_manager_exports);
var import_WiFiNetworkManagementServer = require("../behaviors/wi-fi-network-management/WiFiNetworkManagementServer.js");
var import_ThreadBorderRouterManagementServer = require("../behaviors/thread-border-router-management/ThreadBorderRouterManagementServer.js");
var import_ThreadNetworkDirectoryServer = require("../behaviors/thread-network-directory/ThreadNetworkDirectoryServer.js");
var import_MutableEndpoint = require("../endpoint/type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../endpoint/properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var NetworkInfrastructureManagerRequirements;
((NetworkInfrastructureManagerRequirements2) => {
  NetworkInfrastructureManagerRequirements2.WiFiNetworkManagementServer = import_WiFiNetworkManagementServer.WiFiNetworkManagementServer;
  NetworkInfrastructureManagerRequirements2.ThreadBorderRouterManagementServer = import_ThreadBorderRouterManagementServer.ThreadBorderRouterManagementServer;
  NetworkInfrastructureManagerRequirements2.ThreadNetworkDirectoryServer = import_ThreadNetworkDirectoryServer.ThreadNetworkDirectoryServer;
  NetworkInfrastructureManagerRequirements2.server = {
    mandatory: {
      WiFiNetworkManagement: NetworkInfrastructureManagerRequirements2.WiFiNetworkManagementServer,
      ThreadBorderRouterManagement: NetworkInfrastructureManagerRequirements2.ThreadBorderRouterManagementServer,
      ThreadNetworkDirectory: NetworkInfrastructureManagerRequirements2.ThreadNetworkDirectoryServer
    }
  };
})(NetworkInfrastructureManagerRequirements || (NetworkInfrastructureManagerRequirements = {}));
const NetworkInfrastructureManagerDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "NetworkInfrastructureManager",
  deviceType: 144,
  deviceRevision: 1,
  requirements: NetworkInfrastructureManagerRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(
    NetworkInfrastructureManagerRequirements.server.mandatory.WiFiNetworkManagement,
    NetworkInfrastructureManagerRequirements.server.mandatory.ThreadBorderRouterManagement,
    NetworkInfrastructureManagerRequirements.server.mandatory.ThreadNetworkDirectory
  )
});
const NetworkInfrastructureManagerDevice = NetworkInfrastructureManagerDeviceDefinition;
//# sourceMappingURL=network-infrastructure-manager.js.map
