"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var on_off_light_switch_exports = {};
__export(on_off_light_switch_exports, {
  OnOffLightSwitchDevice: () => OnOffLightSwitchDevice,
  OnOffLightSwitchDeviceDefinition: () => OnOffLightSwitchDeviceDefinition,
  OnOffLightSwitchRequirements: () => OnOffLightSwitchRequirements
});
module.exports = __toCommonJS(on_off_light_switch_exports);
var import_IdentifyServer = require("../behaviors/identify/IdentifyServer.js");
var import_IdentifyBehavior = require("../behaviors/identify/IdentifyBehavior.js");
var import_OnOffBehavior = require("../behaviors/on-off/OnOffBehavior.js");
var import_GroupsBehavior = require("../behaviors/groups/GroupsBehavior.js");
var import_ScenesManagementBehavior = require("../behaviors/scenes-management/ScenesManagementBehavior.js");
var import_MutableEndpoint = require("../endpoint/type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../endpoint/properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var OnOffLightSwitchRequirements;
((OnOffLightSwitchRequirements2) => {
  OnOffLightSwitchRequirements2.IdentifyServer = import_IdentifyServer.IdentifyServer;
  OnOffLightSwitchRequirements2.IdentifyBehavior = import_IdentifyBehavior.IdentifyBehavior;
  OnOffLightSwitchRequirements2.OnOffBehavior = import_OnOffBehavior.OnOffBehavior;
  OnOffLightSwitchRequirements2.GroupsBehavior = import_GroupsBehavior.GroupsBehavior;
  OnOffLightSwitchRequirements2.ScenesManagementBehavior = import_ScenesManagementBehavior.ScenesManagementBehavior;
  OnOffLightSwitchRequirements2.server = { mandatory: { Identify: OnOffLightSwitchRequirements2.IdentifyServer } };
  OnOffLightSwitchRequirements2.client = {
    mandatory: { Identify: OnOffLightSwitchRequirements2.IdentifyBehavior, OnOff: OnOffLightSwitchRequirements2.OnOffBehavior },
    optional: { Groups: OnOffLightSwitchRequirements2.GroupsBehavior, ScenesManagement: OnOffLightSwitchRequirements2.ScenesManagementBehavior }
  };
})(OnOffLightSwitchRequirements || (OnOffLightSwitchRequirements = {}));
const OnOffLightSwitchDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "OnOffLightSwitch",
  deviceType: 259,
  deviceRevision: 3,
  requirements: OnOffLightSwitchRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(OnOffLightSwitchRequirements.server.mandatory.Identify)
});
const OnOffLightSwitchDevice = OnOffLightSwitchDeviceDefinition;
//# sourceMappingURL=on-off-light-switch.js.map
