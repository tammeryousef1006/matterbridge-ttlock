"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var on_off_plug_in_unit_exports = {};
__export(on_off_plug_in_unit_exports, {
  OnOffPlugInUnitDevice: () => OnOffPlugInUnitDevice,
  OnOffPlugInUnitDeviceDefinition: () => OnOffPlugInUnitDeviceDefinition,
  OnOffPlugInUnitRequirements: () => OnOffPlugInUnitRequirements
});
module.exports = __toCommonJS(on_off_plug_in_unit_exports);
var import_IdentifyServer = require("../behaviors/identify/IdentifyServer.js");
var import_GroupsServer = require("../behaviors/groups/GroupsServer.js");
var import_OnOffServer = require("../behaviors/on-off/OnOffServer.js");
var import_ScenesManagementServer = require("../behaviors/scenes-management/ScenesManagementServer.js");
var import_LevelControlServer = require("../behaviors/level-control/LevelControlServer.js");
var import_OccupancySensingBehavior = require("../behaviors/occupancy-sensing/OccupancySensingBehavior.js");
var import_MutableEndpoint = require("../endpoint/type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../endpoint/properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var OnOffPlugInUnitRequirements;
((OnOffPlugInUnitRequirements2) => {
  OnOffPlugInUnitRequirements2.IdentifyServer = import_IdentifyServer.IdentifyServer.alter({ commands: { triggerEffect: { optional: false } } });
  OnOffPlugInUnitRequirements2.GroupsServer = import_GroupsServer.GroupsServer;
  OnOffPlugInUnitRequirements2.OnOffServer = import_OnOffServer.OnOffServer.with("Lighting");
  OnOffPlugInUnitRequirements2.ScenesManagementServer = import_ScenesManagementServer.ScenesManagementServer;
  OnOffPlugInUnitRequirements2.LevelControlServer = import_LevelControlServer.LevelControlServer.with("OnOff", "Lighting").alter({
    attributes: {
      currentLevel: { min: 1, max: 254 },
      minLevel: { default: 1, min: 1, max: 2 },
      maxLevel: { default: 254, min: 254, max: 255 }
    }
  });
  OnOffPlugInUnitRequirements2.OccupancySensingBehavior = import_OccupancySensingBehavior.OccupancySensingBehavior;
  OnOffPlugInUnitRequirements2.server = {
    mandatory: { Identify: OnOffPlugInUnitRequirements2.IdentifyServer, Groups: OnOffPlugInUnitRequirements2.GroupsServer, OnOff: OnOffPlugInUnitRequirements2.OnOffServer },
    optional: { ScenesManagement: OnOffPlugInUnitRequirements2.ScenesManagementServer, LevelControl: OnOffPlugInUnitRequirements2.LevelControlServer }
  };
  OnOffPlugInUnitRequirements2.client = { optional: { OccupancySensing: OnOffPlugInUnitRequirements2.OccupancySensingBehavior }, mandatory: {} };
})(OnOffPlugInUnitRequirements || (OnOffPlugInUnitRequirements = {}));
const OnOffPlugInUnitDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "OnOffPlugInUnit",
  deviceType: 266,
  deviceRevision: 3,
  requirements: OnOffPlugInUnitRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(
    OnOffPlugInUnitRequirements.server.mandatory.Identify,
    OnOffPlugInUnitRequirements.server.mandatory.Groups,
    OnOffPlugInUnitRequirements.server.mandatory.OnOff
  )
});
const OnOffPlugInUnitDevice = OnOffPlugInUnitDeviceDefinition;
//# sourceMappingURL=on-off-plug-in-unit.js.map
