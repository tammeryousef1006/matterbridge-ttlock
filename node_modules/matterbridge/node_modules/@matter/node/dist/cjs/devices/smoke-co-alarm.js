"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var smoke_co_alarm_exports = {};
__export(smoke_co_alarm_exports, {
  SmokeCoAlarmDevice: () => SmokeCoAlarmDevice,
  SmokeCoAlarmDeviceDefinition: () => SmokeCoAlarmDeviceDefinition,
  SmokeCoAlarmRequirements: () => SmokeCoAlarmRequirements
});
module.exports = __toCommonJS(smoke_co_alarm_exports);
var import_IdentifyServer = require("../behaviors/identify/IdentifyServer.js");
var import_SmokeCoAlarmServer = require("../behaviors/smoke-co-alarm/SmokeCoAlarmServer.js");
var import_GroupsServer = require("../behaviors/groups/GroupsServer.js");
var import_RelativeHumidityMeasurementServer = require("../behaviors/relative-humidity-measurement/RelativeHumidityMeasurementServer.js");
var import_TemperatureMeasurementServer = require("../behaviors/temperature-measurement/TemperatureMeasurementServer.js");
var import_CarbonMonoxideConcentrationMeasurementServer = require("../behaviors/carbon-monoxide-concentration-measurement/CarbonMonoxideConcentrationMeasurementServer.js");
var import_MutableEndpoint = require("../endpoint/type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../endpoint/properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var SmokeCoAlarmRequirements;
((SmokeCoAlarmRequirements2) => {
  SmokeCoAlarmRequirements2.IdentifyServer = import_IdentifyServer.IdentifyServer;
  SmokeCoAlarmRequirements2.SmokeCoAlarmServer = import_SmokeCoAlarmServer.SmokeCoAlarmServer;
  SmokeCoAlarmRequirements2.GroupsServer = import_GroupsServer.GroupsServer;
  SmokeCoAlarmRequirements2.RelativeHumidityMeasurementServer = import_RelativeHumidityMeasurementServer.RelativeHumidityMeasurementServer;
  SmokeCoAlarmRequirements2.TemperatureMeasurementServer = import_TemperatureMeasurementServer.TemperatureMeasurementServer;
  SmokeCoAlarmRequirements2.CarbonMonoxideConcentrationMeasurementServer = import_CarbonMonoxideConcentrationMeasurementServer.CarbonMonoxideConcentrationMeasurementServer;
  SmokeCoAlarmRequirements2.server = {
    mandatory: { Identify: SmokeCoAlarmRequirements2.IdentifyServer, SmokeCoAlarm: SmokeCoAlarmRequirements2.SmokeCoAlarmServer },
    optional: {
      Groups: SmokeCoAlarmRequirements2.GroupsServer,
      RelativeHumidityMeasurement: SmokeCoAlarmRequirements2.RelativeHumidityMeasurementServer,
      TemperatureMeasurement: SmokeCoAlarmRequirements2.TemperatureMeasurementServer,
      CarbonMonoxideConcentrationMeasurement: SmokeCoAlarmRequirements2.CarbonMonoxideConcentrationMeasurementServer
    }
  };
})(SmokeCoAlarmRequirements || (SmokeCoAlarmRequirements = {}));
const SmokeCoAlarmDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "SmokeCoAlarm",
  deviceType: 118,
  deviceRevision: 1,
  requirements: SmokeCoAlarmRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(SmokeCoAlarmRequirements.server.mandatory.Identify)
});
const SmokeCoAlarmDevice = SmokeCoAlarmDeviceDefinition;
//# sourceMappingURL=smoke-co-alarm.js.map
