"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var thermostat_exports = {};
__export(thermostat_exports, {
  ThermostatDevice: () => ThermostatDevice,
  ThermostatDeviceDefinition: () => ThermostatDeviceDefinition,
  ThermostatRequirements: () => ThermostatRequirements
});
module.exports = __toCommonJS(thermostat_exports);
var import_IdentifyServer = require("../behaviors/identify/IdentifyServer.js");
var import_ThermostatServer = require("../behaviors/thermostat/ThermostatServer.js");
var import_GroupsServer = require("../behaviors/groups/GroupsServer.js");
var import_ThermostatUserInterfaceConfigurationServer = require("../behaviors/thermostat-user-interface-configuration/ThermostatUserInterfaceConfigurationServer.js");
var import_EnergyPreferenceServer = require("../behaviors/energy-preference/EnergyPreferenceServer.js");
var import_FanControlBehavior = require("../behaviors/fan-control/FanControlBehavior.js");
var import_TemperatureMeasurementBehavior = require("../behaviors/temperature-measurement/TemperatureMeasurementBehavior.js");
var import_RelativeHumidityMeasurementBehavior = require("../behaviors/relative-humidity-measurement/RelativeHumidityMeasurementBehavior.js");
var import_OccupancySensingBehavior = require("../behaviors/occupancy-sensing/OccupancySensingBehavior.js");
var import_MutableEndpoint = require("../endpoint/type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../endpoint/properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var ThermostatRequirements;
((ThermostatRequirements2) => {
  ThermostatRequirements2.IdentifyServer = import_IdentifyServer.IdentifyServer;
  ThermostatRequirements2.ThermostatServer = import_ThermostatServer.ThermostatServer;
  ThermostatRequirements2.GroupsServer = import_GroupsServer.GroupsServer;
  ThermostatRequirements2.ThermostatUserInterfaceConfigurationServer = import_ThermostatUserInterfaceConfigurationServer.ThermostatUserInterfaceConfigurationServer;
  ThermostatRequirements2.EnergyPreferenceServer = import_EnergyPreferenceServer.EnergyPreferenceServer;
  ThermostatRequirements2.FanControlBehavior = import_FanControlBehavior.FanControlBehavior;
  ThermostatRequirements2.TemperatureMeasurementBehavior = import_TemperatureMeasurementBehavior.TemperatureMeasurementBehavior;
  ThermostatRequirements2.RelativeHumidityMeasurementBehavior = import_RelativeHumidityMeasurementBehavior.RelativeHumidityMeasurementBehavior;
  ThermostatRequirements2.OccupancySensingBehavior = import_OccupancySensingBehavior.OccupancySensingBehavior;
  ThermostatRequirements2.server = {
    mandatory: { Identify: ThermostatRequirements2.IdentifyServer, Thermostat: ThermostatRequirements2.ThermostatServer },
    optional: {
      Groups: ThermostatRequirements2.GroupsServer,
      ThermostatUserInterfaceConfiguration: ThermostatRequirements2.ThermostatUserInterfaceConfigurationServer,
      EnergyPreference: ThermostatRequirements2.EnergyPreferenceServer
    }
  };
  ThermostatRequirements2.client = {
    optional: {
      FanControl: ThermostatRequirements2.FanControlBehavior,
      TemperatureMeasurement: ThermostatRequirements2.TemperatureMeasurementBehavior,
      RelativeHumidityMeasurement: ThermostatRequirements2.RelativeHumidityMeasurementBehavior,
      OccupancySensing: ThermostatRequirements2.OccupancySensingBehavior
    },
    mandatory: {}
  };
})(ThermostatRequirements || (ThermostatRequirements = {}));
const ThermostatDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "Thermostat",
  deviceType: 769,
  deviceRevision: 4,
  requirements: ThermostatRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(ThermostatRequirements.server.mandatory.Identify)
});
const ThermostatDevice = ThermostatDeviceDefinition;
//# sourceMappingURL=thermostat.js.map
