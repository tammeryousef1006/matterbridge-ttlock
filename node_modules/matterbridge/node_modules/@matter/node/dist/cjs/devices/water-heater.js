"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var water_heater_exports = {};
__export(water_heater_exports, {
  WaterHeaterDevice: () => WaterHeaterDevice,
  WaterHeaterDeviceDefinition: () => WaterHeaterDeviceDefinition,
  WaterHeaterRequirements: () => WaterHeaterRequirements
});
module.exports = __toCommonJS(water_heater_exports);
var import_ThermostatServer = require("../behaviors/thermostat/ThermostatServer.js");
var import_WaterHeaterManagementServer = require("../behaviors/water-heater-management/WaterHeaterManagementServer.js");
var import_WaterHeaterModeServer = require("../behaviors/water-heater-mode/WaterHeaterModeServer.js");
var import_IdentifyServer = require("../behaviors/identify/IdentifyServer.js");
var import_MutableEndpoint = require("../endpoint/type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../endpoint/properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var WaterHeaterRequirements;
((WaterHeaterRequirements2) => {
  WaterHeaterRequirements2.ThermostatServer = import_ThermostatServer.ThermostatServer.with("Heating");
  WaterHeaterRequirements2.WaterHeaterManagementServer = import_WaterHeaterManagementServer.WaterHeaterManagementServer;
  WaterHeaterRequirements2.WaterHeaterModeServer = import_WaterHeaterModeServer.WaterHeaterModeServer;
  WaterHeaterRequirements2.IdentifyServer = import_IdentifyServer.IdentifyServer;
  WaterHeaterRequirements2.server = {
    mandatory: {
      Thermostat: WaterHeaterRequirements2.ThermostatServer,
      WaterHeaterManagement: WaterHeaterRequirements2.WaterHeaterManagementServer,
      WaterHeaterMode: WaterHeaterRequirements2.WaterHeaterModeServer
    },
    optional: { Identify: WaterHeaterRequirements2.IdentifyServer }
  };
})(WaterHeaterRequirements || (WaterHeaterRequirements = {}));
const WaterHeaterDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "WaterHeater",
  deviceType: 1295,
  deviceRevision: 1,
  requirements: WaterHeaterRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(
    WaterHeaterRequirements.server.mandatory.WaterHeaterManagement,
    WaterHeaterRequirements.server.mandatory.WaterHeaterMode
  )
});
const WaterHeaterDevice = WaterHeaterDeviceDefinition;
//# sourceMappingURL=water-heater.js.map
