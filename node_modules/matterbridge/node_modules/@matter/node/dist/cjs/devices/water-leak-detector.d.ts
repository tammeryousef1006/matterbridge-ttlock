/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
/*** THIS FILE IS GENERATED, DO NOT EDIT ***/
import { IdentifyServer as BaseIdentifyServer } from "../behaviors/identify/IdentifyServer.js";
import { BooleanStateServer as BaseBooleanStateServer } from "../behaviors/boolean-state/BooleanStateServer.js";
import { BooleanStateConfigurationServer as BaseBooleanStateConfigurationServer } from "../behaviors/boolean-state-configuration/BooleanStateConfigurationServer.js";
import { MutableEndpoint } from "../endpoint/type/MutableEndpoint.js";
import { Identity } from "#general";
/**
 * This defines conformance to the Water Leak Detector device type.
 *
 * @see {@link MatterSpecification.v14.Device} ยง 7.12
 */
export interface WaterLeakDetectorDevice extends Identity<typeof WaterLeakDetectorDeviceDefinition> {
}
export declare namespace WaterLeakDetectorRequirements {
    /**
     * The Identify cluster is required by the Matter specification.
     *
     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.
     */
    const IdentifyServer: typeof BaseIdentifyServer;
    /**
     * The BooleanState cluster is required by the Matter specification.
     *
     * This version of {@link BooleanStateServer} is specialized per the specification.
     */
    const BooleanStateServer: import("../index.js").ClusterBehavior.Type<import("@matter/types").ElementModifier.WithAlterations<import("@matter/types/clusters/boolean-state").BooleanState.Cluster, {
        readonly events: {
            readonly stateChange: {
                readonly optional: false;
            };
        };
    }>, typeof BaseBooleanStateServer, {
        components: never[];
    }>;
    /**
     * The BooleanStateConfiguration cluster is optional per the Matter specification.
     *
     * We provide this alias to the default implementation {@link BooleanStateConfigurationServer} for convenience.
     */
    const BooleanStateConfigurationServer: typeof BaseBooleanStateConfigurationServer;
    /**
     * An implementation for each server cluster supported by the endpoint per the Matter specification.
     */
    const server: {
        mandatory: {
            Identify: typeof BaseIdentifyServer;
            BooleanState: import("../index.js").ClusterBehavior.Type<import("@matter/types").ElementModifier.WithAlterations<import("@matter/types/clusters/boolean-state").BooleanState.Cluster, {
                readonly events: {
                    readonly stateChange: {
                        readonly optional: false;
                    };
                };
            }>, typeof BaseBooleanStateServer, {
                components: never[];
            }>;
        };
        optional: {
            BooleanStateConfiguration: typeof BaseBooleanStateConfigurationServer;
        };
    };
}
export declare const WaterLeakDetectorDeviceDefinition: MutableEndpoint.With<import("../index.js").EndpointType.For<{
    readonly name: "WaterLeakDetector";
    readonly deviceType: 67;
    readonly deviceRevision: 1;
    readonly requirements: typeof WaterLeakDetectorRequirements;
    readonly behaviors: {
        readonly identify: typeof BaseIdentifyServer;
    } & {
        readonly booleanState: import("../index.js").ClusterBehavior.Type<import("@matter/types").ElementModifier.WithAlterations<import("@matter/types/clusters/boolean-state").BooleanState.Cluster, {
            readonly events: {
                readonly stateChange: {
                    readonly optional: false;
                };
            };
        }>, typeof BaseBooleanStateServer, {
            components: never[];
        }>;
    };
}>, {
    readonly identify: typeof BaseIdentifyServer;
} & {
    readonly booleanState: import("../index.js").ClusterBehavior.Type<import("@matter/types").ElementModifier.WithAlterations<import("@matter/types/clusters/boolean-state").BooleanState.Cluster, {
        readonly events: {
            readonly stateChange: {
                readonly optional: false;
            };
        };
    }>, typeof BaseBooleanStateServer, {
        components: never[];
    }>;
}>;
export declare const WaterLeakDetectorDevice: WaterLeakDetectorDevice;
//# sourceMappingURL=water-leak-detector.d.ts.map