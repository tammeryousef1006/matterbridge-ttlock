/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
/*** THIS FILE IS GENERATED, DO NOT EDIT ***/
import { JointFabricPkiServer as BaseJointFabricPkiServer } from "../behaviors/joint-fabric-pki/JointFabricPkiServer.js";
import { MutableEndpoint } from "../endpoint/type/MutableEndpoint.js";
import { DeviceClassification } from "#model";
import { Identity } from "#general";
/**
 * A Joint Fabric Administrator device provides capabilities to manage the Joint Fabric Datastore and issue an ICAC
 * signed by the Joint Fabric Anchor Root CA.
 *
 * A client wanting to access the capabilities of the Joint Fabric Administrator may use the Joint Commissioning Method
 * to be commissioned onto the Joint Fabric. Once commissioned, a client may access the capabilities of the Joint Fabric
 * Administrator.
 *
 * @see {@link MatterSpecification.v14.Device} ยง 2.9
 */
export interface JointFabricAdministratorEndpoint extends Identity<typeof JointFabricAdministratorEndpointDefinition> {
}
export declare namespace JointFabricAdministratorRequirements {
    /**
     * The JointFabricPki cluster is required by the Matter specification.
     *
     * We provide this alias to the default implementation {@link JointFabricPkiServer} for convenience.
     */
    const JointFabricPkiServer: typeof BaseJointFabricPkiServer;
    /**
     * An implementation for each server cluster supported by the endpoint per the Matter specification.
     */
    const server: {
        mandatory: {
            JointFabricPki: typeof BaseJointFabricPkiServer;
        };
    };
}
export declare const JointFabricAdministratorEndpointDefinition: MutableEndpoint.With<import("../index.js").EndpointType.For<{
    readonly name: "JointFabricAdministrator";
    readonly deviceType: 304;
    readonly deviceRevision: 1;
    readonly deviceClass: DeviceClassification.Utility;
    readonly requirements: typeof JointFabricAdministratorRequirements;
    readonly behaviors: {
        readonly jointFabricPki: typeof BaseJointFabricPkiServer;
    };
}>, {
    readonly jointFabricPki: typeof BaseJointFabricPkiServer;
}>;
export declare const JointFabricAdministratorEndpoint: JointFabricAdministratorEndpoint;
//# sourceMappingURL=joint-fabric-administrator.d.ts.map