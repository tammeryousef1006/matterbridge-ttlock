"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ota_provider_exports = {};
__export(ota_provider_exports, {
  OtaProviderEndpoint: () => OtaProviderEndpoint,
  OtaProviderEndpointDefinition: () => OtaProviderEndpointDefinition,
  OtaProviderRequirements: () => OtaProviderRequirements
});
module.exports = __toCommonJS(ota_provider_exports);
var import_OtaSoftwareUpdateProviderServer = require("../behaviors/ota-software-update-provider/OtaSoftwareUpdateProviderServer.js");
var import_OtaSoftwareUpdateRequestorBehavior = require("../behaviors/ota-software-update-requestor/OtaSoftwareUpdateRequestorBehavior.js");
var import_MutableEndpoint = require("../endpoint/type/MutableEndpoint.js");
var import_model = require("#model");
var import_SupportedBehaviors = require("../endpoint/properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var OtaProviderRequirements;
((OtaProviderRequirements2) => {
  OtaProviderRequirements2.OtaSoftwareUpdateProviderServer = import_OtaSoftwareUpdateProviderServer.OtaSoftwareUpdateProviderServer;
  OtaProviderRequirements2.OtaSoftwareUpdateRequestorBehavior = import_OtaSoftwareUpdateRequestorBehavior.OtaSoftwareUpdateRequestorBehavior;
  OtaProviderRequirements2.server = { mandatory: { OtaSoftwareUpdateProvider: OtaProviderRequirements2.OtaSoftwareUpdateProviderServer } };
  OtaProviderRequirements2.client = {
    optional: { OtaSoftwareUpdateRequestor: OtaProviderRequirements2.OtaSoftwareUpdateRequestorBehavior },
    mandatory: {}
  };
})(OtaProviderRequirements || (OtaProviderRequirements = {}));
const OtaProviderEndpointDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "OtaProvider",
  deviceType: 20,
  deviceRevision: 1,
  deviceClass: import_model.DeviceClassification.Utility,
  requirements: OtaProviderRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(OtaProviderRequirements.server.mandatory.OtaSoftwareUpdateProvider)
});
const OtaProviderEndpoint = OtaProviderEndpointDefinition;
//# sourceMappingURL=ota-provider.js.map
