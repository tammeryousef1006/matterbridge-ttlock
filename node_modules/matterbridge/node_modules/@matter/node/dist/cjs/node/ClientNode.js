"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ClientNode_exports = {};
__export(ClientNode_exports, {
  ClientNode: () => ClientNode
});
module.exports = __toCommonJS(ClientNode_exports);
var import_CommissioningClient = require("#behavior/system/commissioning/CommissioningClient.js");
var import_ClientNetworkRuntime = require("#behavior/system/network/ClientNetworkRuntime.js");
var import_NetworkClient = require("#behavior/system/network/NetworkClient.js");
var import_EndpointInitializer = require("#endpoint/properties/EndpointInitializer.js");
var import_general = require("#general");
var import_ClientEndpointInitializer = require("./client/ClientEndpointInitializer.js");
var import_Node = require("./Node.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
class ClientNode extends import_Node.Node {
  constructor(options) {
    const opts = {
      ...options,
      number: 0,
      type: ClientNode.RootEndpoint
    };
    super(opts);
  }
  async initialize() {
    this.env.set(import_EndpointInitializer.EndpointInitializer, await import_ClientEndpointInitializer.ClientEndpointInitializer.create(this));
    await super.initialize();
  }
  get owner() {
    return super.owner;
  }
  set owner(owner) {
    super.owner = owner;
  }
  async commission(options) {
    await this.act("commission", (agent) => agent.commissioning.commission(options));
  }
  createRuntime() {
    return new import_ClientNetworkRuntime.ClientNetworkRuntime(this);
  }
  async prepareRuntimeShutdown() {
  }
  get container() {
    return this.owner?.nodes;
  }
  act(actorOrPurpose, actor) {
    if (this.construction.status === import_general.Lifecycle.Status.Inactive) {
      this.construction.start();
    }
    if (this.construction.status === import_general.Lifecycle.Status.Initializing) {
      return this.construction.then(() => super.act(actorOrPurpose, actor));
    }
    return super.act(actorOrPurpose, actor);
  }
  get interaction() {
    throw new import_general.NotImplementedError();
  }
}
((ClientNode2) => {
  ClientNode2.RootEndpoint = import_Node.Node.CommonRootEndpoint.with(import_CommissioningClient.CommissioningClient, import_NetworkClient.NetworkClient);
})(ClientNode || (ClientNode = {}));
//# sourceMappingURL=ClientNode.js.map
