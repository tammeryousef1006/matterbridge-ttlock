"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ServerEnvironment_exports = {};
__export(ServerEnvironment_exports, {
  ServerEnvironment: () => ServerEnvironment
});
module.exports = __toCommonJS(ServerEnvironment_exports);
var import_endpoint = require("#endpoint/index.js");
var import_ServerNodeStore = require("#node/storage/ServerNodeStore.js");
var import_protocol = require("#protocol");
var import_ServerEndpointInitializer = require("../../endpoint/server/ServerEndpointInitializer.js");
var import_IdentityService = require("./IdentityService.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var ServerEnvironment;
((ServerEnvironment2) => {
  async function initialize(node) {
    const { env } = node;
    env.set(import_ServerNodeStore.ServerNodeStore, await import_ServerNodeStore.ServerNodeStore.create(env, node.id));
    env.set(import_endpoint.EndpointInitializer, new import_ServerEndpointInitializer.ServerEndpointInitializer(env));
    env.set(import_IdentityService.IdentityService, new import_IdentityService.IdentityService(node));
    await env.load(import_protocol.FabricManager);
    await env.load(import_protocol.SessionManager);
  }
  ServerEnvironment2.initialize = initialize;
  async function close(node) {
    const { env } = node;
    env.close(import_protocol.FabricManager);
    await env.close(import_protocol.SessionManager);
    await env.close(import_ServerNodeStore.ServerNodeStore);
  }
  ServerEnvironment2.close = close;
})(ServerEnvironment || (ServerEnvironment = {}));
//# sourceMappingURL=ServerEnvironment.js.map
