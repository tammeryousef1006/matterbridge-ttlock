"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var RelativePositionTag_exports = {};
__export(RelativePositionTag_exports, {
  RelativePositionTag: () => RelativePositionTag
});
module.exports = __toCommonJS(RelativePositionTag_exports);
var import_SemanticNamespace = require("../endpoint/type/SemanticNamespace.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const RelativePositionTag = (0, import_SemanticNamespace.SemanticNamespace)({
  id: 18,
  tags: {
    Under: { id: 0, label: "Under" },
    /**
     * Area in proximity to the point of reference
     */
    NextTo: { id: 1, label: "Next To" },
    /**
     * The area surrounding the point the reference
     */
    Around: { id: 2, label: "Around" },
    On: { id: 3, label: "On" },
    Above: { id: 4, label: "Above" },
    FrontOf: { id: 5, label: "Front Of" },
    Behind: { id: 6, label: "Behind" }
  }
});
//# sourceMappingURL=RelativePositionTag.js.map
