/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { DescriptorServer } from "#behaviors/descriptor";
import { ClusterType } from "@matter/types";
import { PowerSource } from "@matter/types/clusters/power-source";
import { PowerSourceBehavior } from "./PowerSourceBehavior.js";
const PowerSourceLevelBase = PowerSourceBehavior.with(PowerSource.Feature.Battery, PowerSource.Feature.Rechargeable);
class PowerSourceBaseServer extends PowerSourceLevelBase {
  async initialize() {
    (await this.agent.load(DescriptorServer)).addDeviceTypes("PowerSource");
    [
      this.events.batPercentRemaining$Changed,
      this.events.batTimeRemaining$Changed,
      this.events.batTimeToFullCharge$Changed
    ].forEach((event) => {
      if (event !== void 0) {
        event.quiet.minimumEmitIntervalMs = 1e4;
      }
    });
  }
}
class PowerSourceServer extends PowerSourceBaseServer.for(ClusterType(PowerSource.Base)) {
}
export {
  PowerSourceBaseServer,
  PowerSourceServer
};
//# sourceMappingURL=PowerSourceServer.js.map
