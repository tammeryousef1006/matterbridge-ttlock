/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { SmokeCoAlarm } from "#clusters/smoke-co-alarm";
import { ClusterType } from "@matter/types";
import { SmokeCoAlarmBehavior } from "./SmokeCoAlarmBehavior.js";
const SmokeCoAlarmBase = SmokeCoAlarmBehavior.with(SmokeCoAlarm.Feature.SmokeAlarm, SmokeCoAlarm.Feature.CoAlarm);
class SmokeCoAlarmBaseServer extends SmokeCoAlarmBase {
  initialize() {
    if (this.state.expressedState === void 0) {
      this.state.expressedState = SmokeCoAlarm.ExpressedState.Normal;
    }
    if (this.features.smokeAlarm && this.state.smokeState === void 0) {
      this.state.smokeState = SmokeCoAlarm.AlarmState.Normal;
    }
    if (this.features.coAlarm && this.state.coState === void 0) {
      this.state.coState = SmokeCoAlarm.AlarmState.Normal;
    }
    if (this.state.batteryAlert === void 0) {
      this.state.batteryAlert = SmokeCoAlarm.AlarmState.Normal;
    }
    if (this.state.testInProgress === void 0) {
      this.state.testInProgress = false;
    }
    if (this.state.hardwareFaultAlert === void 0) {
      this.state.hardwareFaultAlert = false;
    }
    if (this.state.endOfServiceAlert === void 0) {
      this.state.endOfServiceAlert = SmokeCoAlarm.EndOfService.Normal;
    }
  }
}
class SmokeCoAlarmServer extends SmokeCoAlarmBaseServer.for(ClusterType(SmokeCoAlarm.Base)) {
}
export {
  SmokeCoAlarmBaseServer,
  SmokeCoAlarmServer
};
//# sourceMappingURL=SmokeCoAlarmServer.js.map
