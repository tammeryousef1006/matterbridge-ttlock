/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
/*** THIS FILE IS GENERATED, DO NOT EDIT ***/
import { TimeSynchronization } from "#clusters/time-synchronization";
import { ClusterBehavior } from "../../behavior/cluster/ClusterBehavior.js";
import { TimeSynchronizationInterface } from "./TimeSynchronizationInterface.js";
/**
 * TimeSynchronizationBehavior is the base class for objects that support interaction with
 * {@link TimeSynchronization.Cluster}.
 *
 * This class does not have optional features of TimeSynchronization.Cluster enabled. You can enable additional features
 * using TimeSynchronizationBehavior.with.
 */
export declare const TimeSynchronizationBehavior: ClusterBehavior.Type<TimeSynchronization.Cluster, ClusterBehavior.Type<import("@matter/types").ClusterType.Of<{
    readonly id: 0;
    readonly revision: 0;
    readonly name: "Unknown";
    readonly attributes: {};
    readonly commands: {};
    readonly events: {};
}>, typeof ClusterBehavior, TimeSynchronizationInterface>, TimeSynchronizationInterface>;
type TimeSynchronizationBehaviorType = InstanceType<typeof TimeSynchronizationBehavior>;
export interface TimeSynchronizationBehavior extends TimeSynchronizationBehaviorType {
}
type StateType = InstanceType<typeof TimeSynchronizationBehavior.State>;
export declare namespace TimeSynchronizationBehavior {
    interface State extends StateType {
    }
}
export {};
//# sourceMappingURL=TimeSynchronizationBehavior.d.ts.map