/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { IdentifyServer as BaseIdentifyServer } from "../behaviors/identify/IdentifyServer.js";
import { BooleanStateServer as BaseBooleanStateServer } from "../behaviors/boolean-state/BooleanStateServer.js";
import {
  BooleanStateConfigurationServer as BaseBooleanStateConfigurationServer
} from "../behaviors/boolean-state-configuration/BooleanStateConfigurationServer.js";
import { MutableEndpoint } from "../endpoint/type/MutableEndpoint.js";
import { SupportedBehaviors } from "../endpoint/properties/SupportedBehaviors.js";
var ContactSensorRequirements;
((ContactSensorRequirements2) => {
  ContactSensorRequirements2.IdentifyServer = BaseIdentifyServer;
  ContactSensorRequirements2.BooleanStateServer = BaseBooleanStateServer;
  ContactSensorRequirements2.BooleanStateConfigurationServer = BaseBooleanStateConfigurationServer;
  ContactSensorRequirements2.server = {
    mandatory: { Identify: ContactSensorRequirements2.IdentifyServer, BooleanState: ContactSensorRequirements2.BooleanStateServer },
    optional: { BooleanStateConfiguration: ContactSensorRequirements2.BooleanStateConfigurationServer }
  };
})(ContactSensorRequirements || (ContactSensorRequirements = {}));
const ContactSensorDeviceDefinition = MutableEndpoint({
  name: "ContactSensor",
  deviceType: 21,
  deviceRevision: 2,
  requirements: ContactSensorRequirements,
  behaviors: SupportedBehaviors(
    ContactSensorRequirements.server.mandatory.Identify,
    ContactSensorRequirements.server.mandatory.BooleanState
  )
});
const ContactSensorDevice = ContactSensorDeviceDefinition;
export {
  ContactSensorDevice,
  ContactSensorDeviceDefinition,
  ContactSensorRequirements
};
//# sourceMappingURL=contact-sensor.js.map
