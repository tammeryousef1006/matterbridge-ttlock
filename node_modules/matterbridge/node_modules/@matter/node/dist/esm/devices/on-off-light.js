/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { IdentifyServer as BaseIdentifyServer } from "../behaviors/identify/IdentifyServer.js";
import { GroupsServer as BaseGroupsServer } from "../behaviors/groups/GroupsServer.js";
import { OnOffServer as BaseOnOffServer } from "../behaviors/on-off/OnOffServer.js";
import {
  ScenesManagementServer as BaseScenesManagementServer
} from "../behaviors/scenes-management/ScenesManagementServer.js";
import { LevelControlServer as BaseLevelControlServer } from "../behaviors/level-control/LevelControlServer.js";
import {
  OccupancySensingBehavior as BaseOccupancySensingBehavior
} from "../behaviors/occupancy-sensing/OccupancySensingBehavior.js";
import { MutableEndpoint } from "../endpoint/type/MutableEndpoint.js";
import { SupportedBehaviors } from "../endpoint/properties/SupportedBehaviors.js";
var OnOffLightRequirements;
((OnOffLightRequirements2) => {
  OnOffLightRequirements2.IdentifyServer = BaseIdentifyServer.alter({ commands: { triggerEffect: { optional: false } } });
  OnOffLightRequirements2.GroupsServer = BaseGroupsServer;
  OnOffLightRequirements2.OnOffServer = BaseOnOffServer.with("Lighting");
  OnOffLightRequirements2.ScenesManagementServer = BaseScenesManagementServer;
  OnOffLightRequirements2.LevelControlServer = BaseLevelControlServer.with("OnOff", "Lighting").alter({
    attributes: {
      currentLevel: { min: 1, max: 254 },
      minLevel: { default: 1, min: 1, max: 2 },
      maxLevel: { default: 254, min: 254, max: 255 }
    }
  });
  OnOffLightRequirements2.OccupancySensingBehavior = BaseOccupancySensingBehavior;
  OnOffLightRequirements2.server = {
    mandatory: { Identify: OnOffLightRequirements2.IdentifyServer, Groups: OnOffLightRequirements2.GroupsServer, OnOff: OnOffLightRequirements2.OnOffServer },
    optional: { ScenesManagement: OnOffLightRequirements2.ScenesManagementServer, LevelControl: OnOffLightRequirements2.LevelControlServer }
  };
  OnOffLightRequirements2.client = { optional: { OccupancySensing: OnOffLightRequirements2.OccupancySensingBehavior }, mandatory: {} };
})(OnOffLightRequirements || (OnOffLightRequirements = {}));
const OnOffLightDeviceDefinition = MutableEndpoint({
  name: "OnOffLight",
  deviceType: 256,
  deviceRevision: 3,
  requirements: OnOffLightRequirements,
  behaviors: SupportedBehaviors(
    OnOffLightRequirements.server.mandatory.Identify,
    OnOffLightRequirements.server.mandatory.Groups,
    OnOffLightRequirements.server.mandatory.OnOff
  )
});
const OnOffLightDevice = OnOffLightDeviceDefinition;
export {
  OnOffLightDevice,
  OnOffLightDeviceDefinition,
  OnOffLightRequirements
};
//# sourceMappingURL=on-off-light.js.map
