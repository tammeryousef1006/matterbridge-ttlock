/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
/*** THIS FILE IS GENERATED, DO NOT EDIT ***/
import { PressureMeasurementServer as BasePressureMeasurementServer } from "../behaviors/pressure-measurement/PressureMeasurementServer.js";
import { IdentifyServer as BaseIdentifyServer } from "../behaviors/identify/IdentifyServer.js";
import { MutableEndpoint } from "../endpoint/type/MutableEndpoint.js";
import { Identity } from "#general";
/**
 * A Pressure Sensor device measures and reports the pressure of a fluid.
 *
 * @see {@link MatterSpecification.v14.Device} ยง 7.5
 */
export interface PressureSensorDevice extends Identity<typeof PressureSensorDeviceDefinition> {
}
export declare namespace PressureSensorRequirements {
    /**
     * The PressureMeasurement cluster is required by the Matter specification.
     *
     * We provide this alias to the default implementation {@link PressureMeasurementServer} for convenience.
     */
    const PressureMeasurementServer: typeof BasePressureMeasurementServer;
    /**
     * The Identify cluster is required by the Matter specification.
     *
     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.
     */
    const IdentifyServer: typeof BaseIdentifyServer;
    /**
     * An implementation for each server cluster supported by the endpoint per the Matter specification.
     */
    const server: {
        mandatory: {
            PressureMeasurement: typeof BasePressureMeasurementServer;
            Identify: typeof BaseIdentifyServer;
        };
    };
}
export declare const PressureSensorDeviceDefinition: MutableEndpoint.With<import("../index.js").EndpointType.For<{
    readonly name: "PressureSensor";
    readonly deviceType: 773;
    readonly deviceRevision: 2;
    readonly requirements: typeof PressureSensorRequirements;
    readonly behaviors: {
        readonly pressureMeasurement: typeof BasePressureMeasurementServer;
    } & {
        readonly identify: typeof BaseIdentifyServer;
    };
}>, {
    readonly pressureMeasurement: typeof BasePressureMeasurementServer;
} & {
    readonly identify: typeof BaseIdentifyServer;
}>;
export declare const PressureSensorDevice: PressureSensorDevice;
//# sourceMappingURL=pressure-sensor.d.ts.map