/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import {
  PressureMeasurementServer as BasePressureMeasurementServer
} from "../behaviors/pressure-measurement/PressureMeasurementServer.js";
import { IdentifyServer as BaseIdentifyServer } from "../behaviors/identify/IdentifyServer.js";
import { MutableEndpoint } from "../endpoint/type/MutableEndpoint.js";
import { SupportedBehaviors } from "../endpoint/properties/SupportedBehaviors.js";
var PressureSensorRequirements;
((PressureSensorRequirements2) => {
  PressureSensorRequirements2.PressureMeasurementServer = BasePressureMeasurementServer;
  PressureSensorRequirements2.IdentifyServer = BaseIdentifyServer;
  PressureSensorRequirements2.server = { mandatory: { PressureMeasurement: PressureSensorRequirements2.PressureMeasurementServer, Identify: PressureSensorRequirements2.IdentifyServer } };
})(PressureSensorRequirements || (PressureSensorRequirements = {}));
const PressureSensorDeviceDefinition = MutableEndpoint({
  name: "PressureSensor",
  deviceType: 773,
  deviceRevision: 2,
  requirements: PressureSensorRequirements,
  behaviors: SupportedBehaviors(
    PressureSensorRequirements.server.mandatory.PressureMeasurement,
    PressureSensorRequirements.server.mandatory.Identify
  )
});
const PressureSensorDevice = PressureSensorDeviceDefinition;
export {
  PressureSensorDevice,
  PressureSensorDeviceDefinition,
  PressureSensorRequirements
};
//# sourceMappingURL=pressure-sensor.js.map
