/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { IdentifyServer as BaseIdentifyServer } from "../behaviors/identify/IdentifyServer.js";
import { BooleanStateServer as BaseBooleanStateServer } from "../behaviors/boolean-state/BooleanStateServer.js";
import {
  BooleanStateConfigurationServer as BaseBooleanStateConfigurationServer
} from "../behaviors/boolean-state-configuration/BooleanStateConfigurationServer.js";
import { MutableEndpoint } from "../endpoint/type/MutableEndpoint.js";
import { SupportedBehaviors } from "../endpoint/properties/SupportedBehaviors.js";
var RainSensorRequirements;
((RainSensorRequirements2) => {
  RainSensorRequirements2.IdentifyServer = BaseIdentifyServer;
  RainSensorRequirements2.BooleanStateServer = BaseBooleanStateServer.alter({ events: { stateChange: { optional: false } } });
  RainSensorRequirements2.BooleanStateConfigurationServer = BaseBooleanStateConfigurationServer;
  RainSensorRequirements2.server = {
    mandatory: { Identify: RainSensorRequirements2.IdentifyServer, BooleanState: RainSensorRequirements2.BooleanStateServer },
    optional: { BooleanStateConfiguration: RainSensorRequirements2.BooleanStateConfigurationServer }
  };
})(RainSensorRequirements || (RainSensorRequirements = {}));
const RainSensorDeviceDefinition = MutableEndpoint({
  name: "RainSensor",
  deviceType: 68,
  deviceRevision: 1,
  requirements: RainSensorRequirements,
  behaviors: SupportedBehaviors(
    RainSensorRequirements.server.mandatory.Identify,
    RainSensorRequirements.server.mandatory.BooleanState
  )
});
const RainSensorDevice = RainSensorDeviceDefinition;
export {
  RainSensorDevice,
  RainSensorDeviceDefinition,
  RainSensorRequirements
};
//# sourceMappingURL=rain-sensor.js.map
