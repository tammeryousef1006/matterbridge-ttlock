/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
/*** THIS FILE IS GENERATED, DO NOT EDIT ***/
import { IdentifyServer as BaseIdentifyServer } from "../behaviors/identify/IdentifyServer.js";
import { RvcRunModeServer as BaseRvcRunModeServer } from "../behaviors/rvc-run-mode/RvcRunModeServer.js";
import { RvcOperationalStateServer as BaseRvcOperationalStateServer } from "../behaviors/rvc-operational-state/RvcOperationalStateServer.js";
import { RvcCleanModeServer as BaseRvcCleanModeServer } from "../behaviors/rvc-clean-mode/RvcCleanModeServer.js";
import { ServiceAreaServer as BaseServiceAreaServer } from "../behaviors/service-area/ServiceAreaServer.js";
import { MutableEndpoint } from "../endpoint/type/MutableEndpoint.js";
import { Identity } from "#general";
/**
 * This defines conformance for the Robotic Vacuum Cleaner device type.
 *
 * @see {@link MatterSpecification.v14.Device} ยง 12.1
 */
export interface RoboticVacuumCleanerDevice extends Identity<typeof RoboticVacuumCleanerDeviceDefinition> {
}
export declare namespace RoboticVacuumCleanerRequirements {
    /**
     * The Identify cluster is required by the Matter specification.
     *
     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.
     */
    const IdentifyServer: typeof BaseIdentifyServer;
    /**
     * The RvcRunMode cluster is required by the Matter specification.
     *
     * We provide this alias to the default implementation {@link RvcRunModeServer} for convenience.
     */
    const RvcRunModeServer: typeof BaseRvcRunModeServer;
    /**
     * The RvcOperationalState cluster is required by the Matter specification.
     *
     * We provide this alias to the default implementation {@link RvcOperationalStateServer} for convenience.
     */
    const RvcOperationalStateServer: typeof BaseRvcOperationalStateServer;
    /**
     * The RvcCleanMode cluster is optional per the Matter specification.
     *
     * We provide this alias to the default implementation {@link RvcCleanModeServer} for convenience.
     */
    const RvcCleanModeServer: typeof BaseRvcCleanModeServer;
    /**
     * The ServiceArea cluster is optional per the Matter specification.
     *
     * We provide this alias to the default implementation {@link ServiceAreaServer} for convenience.
     */
    const ServiceAreaServer: typeof BaseServiceAreaServer;
    /**
     * An implementation for each server cluster supported by the endpoint per the Matter specification.
     */
    const server: {
        mandatory: {
            Identify: typeof BaseIdentifyServer;
            RvcRunMode: typeof BaseRvcRunModeServer;
            RvcOperationalState: typeof BaseRvcOperationalStateServer;
        };
        optional: {
            RvcCleanMode: typeof BaseRvcCleanModeServer;
            ServiceArea: typeof BaseServiceAreaServer;
        };
    };
}
export declare const RoboticVacuumCleanerDeviceDefinition: MutableEndpoint.With<import("../index.js").EndpointType.For<{
    readonly name: "RoboticVacuumCleaner";
    readonly deviceType: 116;
    readonly deviceRevision: 3;
    readonly requirements: typeof RoboticVacuumCleanerRequirements;
    readonly behaviors: {
        readonly identify: typeof BaseIdentifyServer;
    } & {
        readonly rvcRunMode: typeof BaseRvcRunModeServer;
    } & {
        readonly rvcOperationalState: typeof BaseRvcOperationalStateServer;
    };
}>, {
    readonly identify: typeof BaseIdentifyServer;
} & {
    readonly rvcRunMode: typeof BaseRvcRunModeServer;
} & {
    readonly rvcOperationalState: typeof BaseRvcOperationalStateServer;
}>;
export declare const RoboticVacuumCleanerDevice: RoboticVacuumCleanerDevice;
//# sourceMappingURL=robotic-vacuum-cleaner.d.ts.map