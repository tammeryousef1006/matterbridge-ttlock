/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { describeList, MatterAggregateError, MatterError } from "#general";
class BehaviorInitializationError extends MatterError {
  constructor(message, cause) {
    super(message);
    this.cause = cause;
  }
}
class EndpointBehaviorsError extends MatterAggregateError {
  constructor(causes) {
    super(causes, `Behaviors have errors`);
  }
}
class EndpointPartsError extends MatterError {
  constructor(causes) {
    let suffix;
    const causesArray = [...causes];
    if (causesArray.length) {
      suffix = `${causesArray.length === 1 ? "" : "s"} ${describeList("and", ...causesArray.map((cause) => cause.toString()))}`;
    } else {
      suffix = "";
    }
    super(`Error initializing part${suffix}`);
  }
}
class PartNotFoundError extends MatterError {
}
export {
  BehaviorInitializationError,
  EndpointBehaviorsError,
  EndpointPartsError,
  PartNotFoundError
};
//# sourceMappingURL=errors.js.map
