/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { ClientNode } from "#node/ClientNode.js";
import type { ServerNode } from "#node/ServerNode.js";
import { OperationalPeer, PeerAddress, PeerAddressStore } from "#protocol";
import { FabricIndex, NodeId } from "#types";
/**
 * This is an adapter for lower-level components in the protocol package.
 */
export declare class NodePeerAddressStore extends PeerAddressStore {
    #private;
    constructor(owner: ServerNode);
    assignNewAddress(node: ClientNode, fabricIndex: FabricIndex, nodeId?: NodeId): PeerAddress;
    loadPeers(): OperationalPeer[];
    updatePeer(peer: OperationalPeer): Promise<void>;
    deletePeer(address: PeerAddress): void;
    createNodeStore(): undefined;
}
//# sourceMappingURL=NodePeerAddressStore.d.ts.map