/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { Network, NetworkInterface, NetworkInterfaceDetails, UdpChannel, UdpChannelOptions } from "#general";
export declare class NodeJsNetwork extends Network {
    static getMulticastInterfaceIpv4(netInterface: string): string | undefined;
    static getMembershipMulticastInterfaces(netInterface: string | undefined, ipv4: boolean): (string | undefined)[];
    static getNetInterfaceZoneIpv6(netInterface: string): string | undefined;
    static getNetInterfaceForIp(ip: string): string | undefined;
    private static readonly netInterfaces;
    close(): Promise<void>;
    private static getNetInterfaceForRemoteAddress;
    private static getNetInterfaceZoneIpv6Internal;
    /**
     * Get all network interfaces.
     * The optional configuration parameter allows to map interface names to types if this mapping is known.
     * Each network interface which has no mapped type is returned as Ethernet for now.
     *
     * @param configuration - An array of objects with the name and type properties.
     */
    getNetInterfaces(configuration?: NetworkInterface[]): NetworkInterface[];
    getIpMac(netInterface: string): NetworkInterfaceDetails | undefined;
    createUdpChannel(options: UdpChannelOptions): Promise<UdpChannel>;
}
//# sourceMappingURL=NodeJsNetwork.d.ts.map