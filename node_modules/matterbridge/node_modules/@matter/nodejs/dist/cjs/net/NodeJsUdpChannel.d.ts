/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChannelType, UdpChannel, UdpChannelOptions } from "#general";
import * as dgram from "node:dgram";
export declare class NodeJsUdpChannel implements UdpChannel {
    #private;
    private readonly type;
    private readonly socket;
    private readonly netInterface?;
    static create({ listeningPort, type, listeningAddress, netInterface, membershipAddresses, }: UdpChannelOptions): Promise<NodeJsUdpChannel>;
    readonly maxPayloadSize: number;
    constructor(type: "udp4" | "udp6", socket: dgram.Socket, netInterface?: string | undefined);
    onData(listener: (netInterface: string | undefined, peerAddress: string, peerPort: number, data: Uint8Array) => void): {
        close: () => Promise<void>;
    };
    send(host: string, port: number, data: Uint8Array): Promise<void>;
    close(): Promise<void>;
    get port(): number;
    supports(type: ChannelType, address?: string): boolean;
}
//# sourceMappingURL=NodeJsUdpChannel.d.ts.map