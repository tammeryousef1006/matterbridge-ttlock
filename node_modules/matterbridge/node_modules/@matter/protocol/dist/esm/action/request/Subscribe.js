/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { UINT16_MAX } from "#general";
import { MalformedRequestError } from "./MalformedRequestError.js";
import { Read } from "./Read.js";
function Subscribe(options) {
  const subscribe = Read(options);
  const { keepSubscriptions, minIntervalFloorSeconds, maxIntervalCeilingSeconds } = options;
  subscribe.keepSubscriptions = keepSubscriptions ?? true;
  if (minIntervalFloorSeconds !== void 0) {
    if (minIntervalFloorSeconds < 0 || minIntervalFloorSeconds > UINT16_MAX) {
      throw new MalformedRequestError(`Minimum interval floor ${minIntervalFloorSeconds} is out of range`);
    }
    subscribe.minIntervalFloorSeconds = minIntervalFloorSeconds;
  }
  if (maxIntervalCeilingSeconds !== void 0) {
    if (maxIntervalCeilingSeconds < 0 || maxIntervalCeilingSeconds > UINT16_MAX) {
      throw new MalformedRequestError(`Maximum interval ceiling ${maxIntervalCeilingSeconds} is out of range`);
    }
    subscribe.maxIntervalCeilingSeconds = maxIntervalCeilingSeconds;
  }
  return subscribe;
}
export {
  Subscribe
};
//# sourceMappingURL=Subscribe.js.map
