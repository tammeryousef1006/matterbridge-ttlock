/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { BasicSet, ChannelType, Environmental } from "#general";
import { BitFlag, BitmapSchema } from "#types";
const SupportedTransportsBitmap = {
  // Bit 0 is reserved
  /**
   * TCP Client
   * The advertising Node implements the TCP Client mode and MAY connect to a peer Node that is a TCP Server.
   */
  tcpClient: BitFlag(1),
  /**
   * TCP Server
   * The advertising Node implements the TCP Server mode and SHALL listen for incoming TCP connections.
   */
  tcpServer: BitFlag(2)
};
const SupportedTransportsSchema = BitmapSchema(SupportedTransportsBitmap);
class ScannerSet extends BasicSet {
  scannerFor(type) {
    return this.find((scanner) => scanner.type === type);
  }
  hasScannerFor(type) {
    return this.scannerFor(type) !== void 0;
  }
  /**
   * Select a set of scanners based on discovery capabilities.
   */
  select(discoveryCapabilities) {
    return this.filter(
      (scanner) => scanner.type === ChannelType.UDP || discoveryCapabilities?.ble && scanner.type === ChannelType.BLE
    );
  }
  static [Environmental.create](env) {
    const instance = new ScannerSet();
    env.set(ScannerSet, instance);
    return instance;
  }
}
export {
  ScannerSet,
  SupportedTransportsBitmap,
  SupportedTransportsSchema
};
//# sourceMappingURL=Scanner.js.map
