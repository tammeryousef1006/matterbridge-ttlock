/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { DataReader, DataWriter, Endian } from "#general";
import { Schema } from "#types";
class SecureChannelStatusMessageSchema extends Schema {
  encodeInternal({ generalStatus, protocolId, protocolStatus, protocolData }) {
    const writer = new DataWriter(Endian.Little);
    writer.writeUInt16(generalStatus);
    writer.writeUInt32(protocolId);
    writer.writeUInt16(protocolStatus);
    if (protocolData !== void 0 && protocolData.length > 0) {
      writer.writeByteArray(protocolData);
    }
    return writer.toByteArray();
  }
  decodeInternal(bytes) {
    const reader = new DataReader(bytes, Endian.Little);
    const generalStatus = reader.readUInt16();
    const protocolId = reader.readUInt32();
    const protocolStatus = reader.readUInt16();
    const remainingBytes = reader.remainingBytesCount > 0 ? reader.remainingBytes : void 0;
    return { generalStatus, protocolId, protocolStatus, remainingBytes };
  }
}
const TlvSecureChannelStatusMessage = new SecureChannelStatusMessageSchema();
export {
  SecureChannelStatusMessageSchema,
  TlvSecureChannelStatusMessage
};
//# sourceMappingURL=SecureChannelStatusMessageSchema.js.map
