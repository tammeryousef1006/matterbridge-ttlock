"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var hepa_filter_monitoring_exports = {};
__export(hepa_filter_monitoring_exports, {
  HepaFilterMonitoring: () => HepaFilterMonitoring,
  HepaFilterMonitoringCluster: () => HepaFilterMonitoringCluster
});
module.exports = __toCommonJS(hepa_filter_monitoring_exports);
var import_MutableCluster = require("../cluster/mutation/MutableCluster.js");
var import_resource_monitoring = require("./resource-monitoring.js");
var import_ClusterRegistry = require("../cluster/ClusterRegistry.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var HepaFilterMonitoring;
((HepaFilterMonitoring2) => {
  HepaFilterMonitoring2.Base = { ...import_resource_monitoring.ResourceMonitoring.Base, id: 113, name: "HepaFilterMonitoring" };
  HepaFilterMonitoring2.ClusterInstance = (0, import_MutableCluster.MutableCluster)(HepaFilterMonitoring2.Base);
  HepaFilterMonitoring2.Cluster = HepaFilterMonitoring2.ClusterInstance;
  HepaFilterMonitoring2.CompleteInstance = (0, import_MutableCluster.MutableCluster)({
    ...import_resource_monitoring.ResourceMonitoring.Complete,
    id: 113,
    name: "HepaFilterMonitoring"
  });
  HepaFilterMonitoring2.Complete = HepaFilterMonitoring2.CompleteInstance;
})(HepaFilterMonitoring || (HepaFilterMonitoring = {}));
const HepaFilterMonitoringCluster = HepaFilterMonitoring.Cluster;
import_ClusterRegistry.ClusterRegistry.register(HepaFilterMonitoring.Complete);
//# sourceMappingURL=hepa-filter-monitoring.js.map
