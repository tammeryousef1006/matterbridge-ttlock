"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var label_exports = {};
__export(label_exports, {
  Label: () => Label
});
module.exports = __toCommonJS(label_exports);
var import_MutableCluster = require("../cluster/mutation/MutableCluster.js");
var import_Cluster = require("../cluster/Cluster.js");
var import_TlvArray = require("../tlv/TlvArray.js");
var import_TlvObject = require("../tlv/TlvObject.js");
var import_TlvString = require("../tlv/TlvString.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var Label;
((Label2) => {
  Label2.TlvLabelStruct = (0, import_TlvObject.TlvObject)({
    /**
     * The Label or Value semantic is not defined here. Label examples: "room", "zone", "group", "direction".
     *
     * @see {@link MatterSpecification.v14.Core} ยง 9.7.4.1.1
     */
    label: (0, import_TlvObject.TlvField)(0, import_TlvString.TlvString.bound({ maxLength: 16 })),
    /**
     * The Label or Value semantic is not defined here. The Value is a discriminator for a Label that may have
     * multiple instances. Label:Value examples: "room":"bedroom 2", "orientation":"North", "floor":"2",
     * "direction":"up"
     *
     * @see {@link MatterSpecification.v14.Core} ยง 9.7.4.1.2
     */
    value: (0, import_TlvObject.TlvField)(1, import_TlvString.TlvString.bound({ maxLength: 16 }))
  });
  Label2.Base = import_MutableCluster.MutableCluster.Component({
    name: "Label",
    revision: 1,
    attributes: {
      /**
       * This is a list of string tuples. Each entry is a LabelStruct.
       *
       * @see {@link MatterSpecification.v14.Core} ยง 9.7.5.1
       */
      labelList: (0, import_Cluster.WritableAttribute)(0, (0, import_TlvArray.TlvArray)(Label2.TlvLabelStruct), { default: [] })
    }
  });
  Label2.Complete = Label2.Base;
})(Label || (Label = {}));
//# sourceMappingURL=label.js.map
