"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var laundry_dryer_controls_exports = {};
__export(laundry_dryer_controls_exports, {
  LaundryDryerControls: () => LaundryDryerControls,
  LaundryDryerControlsCluster: () => LaundryDryerControlsCluster
});
module.exports = __toCommonJS(laundry_dryer_controls_exports);
var import_MutableCluster = require("../cluster/mutation/MutableCluster.js");
var import_Cluster = require("../cluster/Cluster.js");
var import_TlvArray = require("../tlv/TlvArray.js");
var import_TlvNumber = require("../tlv/TlvNumber.js");
var import_TlvNullable = require("../tlv/TlvNullable.js");
var import_ClusterRegistry = require("../cluster/ClusterRegistry.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var LaundryDryerControls;
((LaundryDryerControls2) => {
  let DrynessLevel;
  ((DrynessLevel2) => {
    DrynessLevel2[DrynessLevel2["Low"] = 0] = "Low";
    DrynessLevel2[DrynessLevel2["Normal"] = 1] = "Normal";
    DrynessLevel2[DrynessLevel2["Extra"] = 2] = "Extra";
    DrynessLevel2[DrynessLevel2["Max"] = 3] = "Max";
  })(DrynessLevel = LaundryDryerControls2.DrynessLevel || (LaundryDryerControls2.DrynessLevel = {}));
  LaundryDryerControls2.ClusterInstance = (0, import_MutableCluster.MutableCluster)({
    id: 74,
    name: "LaundryDryerControls",
    revision: 1,
    attributes: {
      /**
       * Indicates the list of supported dryness levels available to the appliance in the currently selected mode.
       * The dryness level values are determined by the manufacturer. At least one dryness level value shall be
       * provided in the SupportedDrynessLevels list. The list of dryness levels may change depending on the
       * currently-selected Laundry Dryer mode.
       *
       * @see {@link MatterSpecification.v14.Cluster} ยง 8.9.5.1
       */
      supportedDrynessLevels: (0, import_Cluster.Attribute)(0, (0, import_TlvArray.TlvArray)((0, import_TlvNumber.TlvEnum)(), { minLength: 1, maxLength: 4 })),
      /**
       * Indicates the currently-selected dryness level and it shall be the index into the SupportedDrynessLevels
       * list of the selected dryness level.
       *
       * If an attempt is made to write this attribute with a value other than null or a value contained in
       * SupportedDrynessLevels, a CONSTRAINT_ERROR response shall be sent as the response. If an attempt is made
       * to write this attribute while the device is not in a state that supports modifying the dryness level, an
       * INVALID_IN_STATE error shall be sent as the response. A value of null shall indicate that there will be
       * no dryness level setting for the current mode.
       *
       * @see {@link MatterSpecification.v14.Cluster} ยง 8.9.5.2
       */
      selectedDrynessLevel: (0, import_Cluster.WritableAttribute)(1, (0, import_TlvNullable.TlvNullable)((0, import_TlvNumber.TlvEnum)()))
    }
  });
  LaundryDryerControls2.Cluster = LaundryDryerControls2.ClusterInstance;
  LaundryDryerControls2.Complete = LaundryDryerControls2.Cluster;
})(LaundryDryerControls || (LaundryDryerControls = {}));
const LaundryDryerControlsCluster = LaundryDryerControls.Cluster;
import_ClusterRegistry.ClusterRegistry.register(LaundryDryerControls.Complete);
//# sourceMappingURL=laundry-dryer-controls.js.map
