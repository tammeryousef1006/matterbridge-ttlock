/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
/*** THIS FILE IS GENERATED, DO NOT EDIT ***/
import { MutableCluster } from "../cluster/mutation/MutableCluster.js";
import { Command } from "../cluster/Cluster.js";
import { Identity } from "#general";
export declare namespace LowPower {
    /**
     * @see {@link Cluster}
     */
    const ClusterInstance: MutableCluster<{
        readonly id: 1288;
        readonly name: "LowPower";
        readonly revision: 1;
        readonly commands: {
            /**
             * This command shall put the device into low power mode.
             *
             * @see {@link MatterSpecification.v14.Cluster} § 1.11.4.1
             */
            readonly sleep: Command<void, void, any>;
        };
    }, []>;
    /**
     * This cluster provides an interface for managing low power mode on a device.
     *
     * This cluster would be supported on an endpoint that represents a physical device with a low power mode. This
     * cluster provides a sleep() command to allow clients to manually put the device into low power mode. There is no
     * command here to wake up a sleeping device because that operation often involves other protocols such as Wake On
     * LAN. Most devices automatically enter low power mode based upon inactivity.
     *
     * The cluster server for Low Power is implemented by a device that supports a low power mode, such as a TV, Set-top
     * box, or Smart Speaker.
     *
     * NOTE
     *
     * We have considered a “DisableLowPowerMode” command but have not added it due to suspected issues with energy
     * consumption regulations. This can be added in the future.
     *
     * @see {@link MatterSpecification.v14.Cluster} § 1.11
     */
    interface Cluster extends Identity<typeof ClusterInstance> {
    }
    const Cluster: Cluster;
    const Complete: Cluster;
}
export type LowPowerCluster = LowPower.Cluster;
export declare const LowPowerCluster: LowPower.Cluster;
//# sourceMappingURL=low-power.d.ts.map