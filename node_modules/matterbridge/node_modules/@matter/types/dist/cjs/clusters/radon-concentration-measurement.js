"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var radon_concentration_measurement_exports = {};
__export(radon_concentration_measurement_exports, {
  RadonConcentrationMeasurement: () => RadonConcentrationMeasurement,
  RadonConcentrationMeasurementCluster: () => RadonConcentrationMeasurementCluster
});
module.exports = __toCommonJS(radon_concentration_measurement_exports);
var import_MutableCluster = require("../cluster/mutation/MutableCluster.js");
var import_concentration_measurement = require("./concentration-measurement.js");
var import_ClusterRegistry = require("../cluster/ClusterRegistry.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var RadonConcentrationMeasurement;
((RadonConcentrationMeasurement2) => {
  RadonConcentrationMeasurement2.Base = { ...import_concentration_measurement.ConcentrationMeasurement.Base, id: 1071, name: "RadonConcentrationMeasurement" };
  RadonConcentrationMeasurement2.ClusterInstance = import_MutableCluster.MutableCluster.ExtensibleOnly(RadonConcentrationMeasurement2.Base);
  RadonConcentrationMeasurement2.Cluster = RadonConcentrationMeasurement2.ClusterInstance;
  RadonConcentrationMeasurement2.CompleteInstance = (0, import_MutableCluster.MutableCluster)({
    ...import_concentration_measurement.ConcentrationMeasurement.Complete,
    id: 1071,
    name: "RadonConcentrationMeasurement"
  });
  RadonConcentrationMeasurement2.Complete = RadonConcentrationMeasurement2.CompleteInstance;
})(RadonConcentrationMeasurement || (RadonConcentrationMeasurement = {}));
const RadonConcentrationMeasurementCluster = RadonConcentrationMeasurement.Cluster;
import_ClusterRegistry.ClusterRegistry.register(RadonConcentrationMeasurement.Complete);
//# sourceMappingURL=radon-concentration-measurement.js.map
