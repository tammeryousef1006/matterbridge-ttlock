/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { Branded } from "#general";
import { TlvWrapper } from "../tlv/TlvWrapper.js";
/**
 * A CASE Authenticated Tag (CAT) is a special subject distinguished name within the Operational Certificate.
 *
 * @see {@link MatterSpecification.v12.Core} ยง 6.6.2.1.2.
 */
export type CaseAuthenticatedTag = Branded<number, "CaseAuthenticatedTag">;
export declare function CaseAuthenticatedTag(id: number): CaseAuthenticatedTag;
export declare namespace CaseAuthenticatedTag {
    const getIdentifyValue: (tag: CaseAuthenticatedTag) => number;
    const getVersion: (tag: CaseAuthenticatedTag) => number;
    const increaseVersion: (tag: CaseAuthenticatedTag) => CaseAuthenticatedTag;
    const validateNocTagList: (tags: CaseAuthenticatedTag[]) => void;
}
/** Tlv schema for an CASE Authenticated Tag. */
declare class TlvCaseAuthenticatedTagSchema extends TlvWrapper<CaseAuthenticatedTag, number> {
    constructor();
    validate(value: CaseAuthenticatedTag): void;
}
export declare const TlvCaseAuthenticatedTag: TlvCaseAuthenticatedTagSchema;
export {};
//# sourceMappingURL=CaseAuthenticatedTag.d.ts.map