"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var DeviceTypeId_exports = {};
__export(DeviceTypeId_exports, {
  DeviceTypeId: () => DeviceTypeId,
  TlvDeviceTypeId: () => TlvDeviceTypeId
});
module.exports = __toCommonJS(DeviceTypeId_exports);
var import_ValidationError = require("../common/ValidationError.js");
var import_TlvNumber = require("../tlv/TlvNumber.js");
var import_TlvWrapper = require("../tlv/TlvWrapper.js");
var import_ManufacturerExtensibleIdentifier = require("./ManufacturerExtensibleIdentifier.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
function DeviceTypeId(deviceTypeId, validate = true) {
  if (!validate) {
    return deviceTypeId;
  }
  const { typeSuffix } = import_ManufacturerExtensibleIdentifier.Mei.fromMei(deviceTypeId);
  if (typeSuffix >= 0 && typeSuffix <= 49151) {
    return deviceTypeId;
  }
  throw new import_ValidationError.ValidationOutOfBoundsError(`Invalid device type ID: ${deviceTypeId}`);
}
((DeviceTypeId2) => {
  DeviceTypeId2.isValid = (0, import_ValidationError.validatorOf)(DeviceTypeId2);
})(DeviceTypeId || (DeviceTypeId = {}));
const TlvDeviceTypeId = new import_TlvWrapper.TlvWrapper(
  import_TlvNumber.TlvUInt32,
  (deviceTypeId) => deviceTypeId,
  (value) => DeviceTypeId(value, false)
  // No automatic validation on decode
);
//# sourceMappingURL=DeviceTypeId.js.map
