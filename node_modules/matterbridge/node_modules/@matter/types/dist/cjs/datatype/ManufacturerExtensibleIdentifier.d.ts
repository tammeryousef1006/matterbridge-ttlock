/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { VendorId } from "./VendorId.js";
export declare namespace Mei {
    /** Create a Manufacturer Extensible Identifier (MEI) from a vendor prefix and type suffix. */
    const asMei: (vendorPrefix: VendorId, typeSuffix: number) => number;
    /** Extract the vendor prefix and type suffix from a Manufacturer Extensible Identifier (MEI). */
    const fromMei: (mei: number) => {
        vendorPrefix: VendorId;
        typeSuffix: number;
    };
    /**
     * Check if the MEI has a custom vendor prefix.
     *
     * @param mei The MEI to check.
     * @param vendorPrefix An optional vendor prefix to check against. if not provided, checks if the prefix is not equal 0
     */
    const hasCustomMeiPrefix: (mei: number, vendorPrefix?: VendorId) => boolean;
}
//# sourceMappingURL=ManufacturerExtensibleIdentifier.d.ts.map