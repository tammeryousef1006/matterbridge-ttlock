"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var MeasurementType_exports = {};
__export(MeasurementType_exports, {
  MeasurementType: () => MeasurementType
});
module.exports = __toCommonJS(MeasurementType_exports);
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var MeasurementType = /* @__PURE__ */ ((MeasurementType2) => {
  MeasurementType2[MeasurementType2["Unspecified"] = 0] = "Unspecified";
  MeasurementType2[MeasurementType2["Voltage"] = 1] = "Voltage";
  MeasurementType2[MeasurementType2["ActiveCurrent"] = 2] = "ActiveCurrent";
  MeasurementType2[MeasurementType2["ReactiveCurrent"] = 3] = "ReactiveCurrent";
  MeasurementType2[MeasurementType2["ApparentCurrent"] = 4] = "ApparentCurrent";
  MeasurementType2[MeasurementType2["ActivePower"] = 5] = "ActivePower";
  MeasurementType2[MeasurementType2["ReactivePower"] = 6] = "ReactivePower";
  MeasurementType2[MeasurementType2["ApparentPower"] = 7] = "ApparentPower";
  MeasurementType2[MeasurementType2["RmsVoltage"] = 8] = "RmsVoltage";
  MeasurementType2[MeasurementType2["RmsCurrent"] = 9] = "RmsCurrent";
  MeasurementType2[MeasurementType2["RmsPower"] = 10] = "RmsPower";
  MeasurementType2[MeasurementType2["Frequency"] = 11] = "Frequency";
  MeasurementType2[MeasurementType2["PowerFactor"] = 12] = "PowerFactor";
  MeasurementType2[MeasurementType2["NeutralCurrent"] = 13] = "NeutralCurrent";
  MeasurementType2[MeasurementType2["ElectricalEnergy"] = 14] = "ElectricalEnergy";
  return MeasurementType2;
})(MeasurementType || {});
//# sourceMappingURL=MeasurementType.js.map
