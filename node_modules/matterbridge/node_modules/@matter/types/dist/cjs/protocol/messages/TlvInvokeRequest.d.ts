/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { TypeFromSchema } from "#tlv/TlvSchema.js";
/** @see {@link MatterSpecification.v13.Core}, section 10.7.9 */
export declare const TlvInvokeRequest: import("../../tlv/TlvObject.js").ObjectSchema<{
    /** Do not send a response to this action. */
    suppressResponse: import("../../tlv/TlvObject.js").FieldType<boolean>;
    /** Flag action as part of a timed invoke transaction. */
    timedRequest: import("../../tlv/TlvObject.js").FieldType<boolean>;
    /** Cluster command(s) to invoke. */
    invokeRequests: import("../../tlv/TlvObject.js").FieldType<import("../../tlv/TlvObject.js").TypeFromFields<{
        commandPath: import("../../tlv/TlvObject.js").FieldType<import("../../tlv/TlvObject.js").TypeFromFields<{
            endpointId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").EndpointNumber>;
            clusterId: import("../../tlv/TlvObject.js").FieldType<import("../../index.js").ClusterId>;
            commandId: import("../../tlv/TlvObject.js").FieldType<import("../../index.js").CommandId>;
        }>>;
        commandFields: import("../../tlv/TlvObject.js").OptionalFieldType<import("#tlv/TlvSchema.js").TlvStream>;
        commandRef: import("../../tlv/TlvObject.js").OptionalFieldType<number>;
    }>[]>;
    interactionModelRevision: import("../../tlv/TlvObject.js").FieldType<number>;
}>;
export type InvokeRequest = TypeFromSchema<typeof TlvInvokeRequest>;
//# sourceMappingURL=TlvInvokeRequest.d.ts.map