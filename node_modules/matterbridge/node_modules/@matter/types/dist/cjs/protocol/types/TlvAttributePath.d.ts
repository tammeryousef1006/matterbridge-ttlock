/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { TypeFromSchema } from "#tlv/TlvSchema.js";
/** @see {@link MatterSpecification.v13.Core}, section 10.6.2 */
export declare const TlvAttributePath: import("../../tlv/TlvObject.js").ObjectSchema<{
    enableTagCompression: import("../../tlv/TlvObject.js").OptionalFieldType<boolean>;
    nodeId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../datatype/NodeId.js").NodeId>;
    endpointId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../datatype/EndpointNumber.js").EndpointNumber>;
    clusterId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../datatype/ClusterId.js").ClusterId>;
    attributeId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../datatype/AttributeId.js").AttributeId>;
    listIndex: import("../../tlv/TlvObject.js").OptionalFieldType<number | null>;
    wildcardPathFlags: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").TypeFromPartialBitSchema<{
        skipRootNode: import("../../index.js").BitFlag;
        skipGlobalAttributes: import("../../index.js").BitFlag;
        skipAttributeList: import("../../index.js").BitFlag;
        reserved1: import("../../index.js").BitFlag;
        skipCommandLists: import("../../index.js").BitFlag;
        skipCustomElements: import("../../index.js").BitFlag;
        skipFixedAttributes: import("../../index.js").BitFlag;
        skipChangesOmittedAttributes: import("../../index.js").BitFlag;
        skipDiagnosticsClusters: import("../../index.js").BitFlag;
    }>>;
}>;
export type AttributePath = TypeFromSchema<typeof TlvAttributePath>;
//# sourceMappingURL=TlvAttributePath.d.ts.map