/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { TypeFromSchema } from "#tlv/TlvSchema.js";
export declare const TlvAttributeReportData: import("../../tlv/TlvObject.js").ObjectSchema<{
    dataVersion: import("../../tlv/TlvObject.js").OptionalFieldType<number>;
    path: import("../../tlv/TlvObject.js").FieldType<import("../../tlv/TlvObject.js").TypeFromFields<{
        enableTagCompression: import("../../tlv/TlvObject.js").OptionalFieldType<boolean>;
        nodeId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").NodeId>;
        endpointId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").EndpointNumber>;
        clusterId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").ClusterId>;
        attributeId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").AttributeId>;
        listIndex: import("../../tlv/TlvObject.js").OptionalFieldType<number | null>;
        wildcardPathFlags: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").TypeFromPartialBitSchema<{
            skipRootNode: import("../../index.js").BitFlag;
            skipGlobalAttributes: import("../../index.js").BitFlag;
            skipAttributeList: import("../../index.js").BitFlag;
            reserved1: import("../../index.js").BitFlag;
            skipCommandLists: import("../../index.js").BitFlag;
            skipCustomElements: import("../../index.js").BitFlag;
            skipFixedAttributes: import("../../index.js").BitFlag;
            skipChangesOmittedAttributes: import("../../index.js").BitFlag;
            skipDiagnosticsClusters: import("../../index.js").BitFlag;
        }>>;
    }>>;
    data: import("../../tlv/TlvObject.js").FieldType<import("#tlv/TlvSchema.js").TlvStream>;
}>;
export type AttributeReportData = TypeFromSchema<typeof TlvAttributeReportData>;
//# sourceMappingURL=TlvAttributeReportData.d.ts.map