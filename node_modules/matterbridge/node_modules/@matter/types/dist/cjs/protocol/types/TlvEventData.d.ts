/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { TypeFromSchema } from "#tlv/TlvSchema.js";
import { EventPriority } from "../../cluster/Cluster.js";
/** @see {@link MatterSpecification.v13.Core}, section 10.6.9 */
export declare const TlvEventData: import("../../tlv/TlvObject.js").ObjectSchema<{
    path: import("../../tlv/TlvObject.js").FieldType<import("../../tlv/TlvObject.js").TypeFromFields<{
        nodeId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").NodeId>;
        endpointId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").EndpointNumber>;
        clusterId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").ClusterId>;
        eventId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").EventId>;
        isUrgent: import("../../tlv/TlvObject.js").OptionalFieldType<boolean>;
    }>>;
    eventNumber: import("../../tlv/TlvObject.js").FieldType<import("../../datatype/EventNumber.js").EventNumber>;
    priority: import("../../tlv/TlvObject.js").FieldType<EventPriority>;
    epochTimestamp: import("../../tlv/TlvObject.js").OptionalFieldType<number | bigint>;
    systemTimestamp: import("../../tlv/TlvObject.js").OptionalFieldType<number | bigint>;
    deltaEpochTimestamp: import("../../tlv/TlvObject.js").OptionalFieldType<number | bigint>;
    deltaSystemTimestamp: import("../../tlv/TlvObject.js").OptionalFieldType<number | bigint>;
    data: import("../../tlv/TlvObject.js").OptionalFieldType<import("#tlv/TlvSchema.js").TlvStream>;
}>;
export type EventData = TypeFromSchema<typeof TlvEventData>;
//# sourceMappingURL=TlvEventData.d.ts.map