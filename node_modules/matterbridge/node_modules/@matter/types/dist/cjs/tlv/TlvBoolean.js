"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var TlvBoolean_exports = {};
__export(TlvBoolean_exports, {
  BooleanSchema: () => BooleanSchema,
  TlvBoolean: () => TlvBoolean
});
module.exports = __toCommonJS(TlvBoolean_exports);
var import_general = require("#general");
var import_ValidationError = require("../common/ValidationError.js");
var import_TlvCodec = require("./TlvCodec.js");
var import_TlvSchema = require("./TlvSchema.js");
/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
class BooleanSchema extends import_TlvSchema.TlvSchema {
  encodeTlvInternal(writer, value, tag) {
    writer.writeTag({ type: import_TlvCodec.TlvType.Boolean, value }, tag);
  }
  decodeTlvInternalValue(_reader, typeLength) {
    if (typeLength.type !== import_TlvCodec.TlvType.Boolean) throw new import_general.UnexpectedDataError(`Unexpected type ${typeLength.type}.`);
    return typeLength.value;
  }
  validate(value) {
    if (typeof value !== "boolean")
      throw new import_ValidationError.ValidationDatatypeMismatchError(`Expected boolean, got ${typeof value}.`);
  }
}
const TlvBoolean = new BooleanSchema();
//# sourceMappingURL=TlvBoolean.js.map
