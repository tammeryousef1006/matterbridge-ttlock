/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { MutableCluster } from "../cluster/mutation/MutableCluster.js";
import { ConcentrationMeasurement } from "./concentration-measurement.js";
import { ClusterRegistry } from "../cluster/ClusterRegistry.js";
var FormaldehydeConcentrationMeasurement;
((FormaldehydeConcentrationMeasurement2) => {
  FormaldehydeConcentrationMeasurement2.Base = {
    ...ConcentrationMeasurement.Base,
    id: 1067,
    name: "FormaldehydeConcentrationMeasurement"
  };
  FormaldehydeConcentrationMeasurement2.ClusterInstance = MutableCluster.ExtensibleOnly(FormaldehydeConcentrationMeasurement2.Base);
  FormaldehydeConcentrationMeasurement2.Cluster = FormaldehydeConcentrationMeasurement2.ClusterInstance;
  FormaldehydeConcentrationMeasurement2.CompleteInstance = MutableCluster({
    ...ConcentrationMeasurement.Complete,
    id: 1067,
    name: "FormaldehydeConcentrationMeasurement"
  });
  FormaldehydeConcentrationMeasurement2.Complete = FormaldehydeConcentrationMeasurement2.CompleteInstance;
})(FormaldehydeConcentrationMeasurement || (FormaldehydeConcentrationMeasurement = {}));
const FormaldehydeConcentrationMeasurementCluster = FormaldehydeConcentrationMeasurement.Cluster;
ClusterRegistry.register(FormaldehydeConcentrationMeasurement.Complete);
export {
  FormaldehydeConcentrationMeasurement,
  FormaldehydeConcentrationMeasurementCluster
};
//# sourceMappingURL=formaldehyde-concentration-measurement.js.map
