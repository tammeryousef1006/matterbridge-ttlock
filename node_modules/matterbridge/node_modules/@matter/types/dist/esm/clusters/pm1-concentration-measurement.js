/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { MutableCluster } from "../cluster/mutation/MutableCluster.js";
import { ConcentrationMeasurement } from "./concentration-measurement.js";
import { ClusterRegistry } from "../cluster/ClusterRegistry.js";
var Pm1ConcentrationMeasurement;
((Pm1ConcentrationMeasurement2) => {
  Pm1ConcentrationMeasurement2.Base = { ...ConcentrationMeasurement.Base, id: 1068, name: "Pm1ConcentrationMeasurement" };
  Pm1ConcentrationMeasurement2.ClusterInstance = MutableCluster.ExtensibleOnly(Pm1ConcentrationMeasurement2.Base);
  Pm1ConcentrationMeasurement2.Cluster = Pm1ConcentrationMeasurement2.ClusterInstance;
  Pm1ConcentrationMeasurement2.CompleteInstance = MutableCluster({
    ...ConcentrationMeasurement.Complete,
    id: 1068,
    name: "Pm1ConcentrationMeasurement"
  });
  Pm1ConcentrationMeasurement2.Complete = Pm1ConcentrationMeasurement2.CompleteInstance;
})(Pm1ConcentrationMeasurement || (Pm1ConcentrationMeasurement = {}));
const Pm1ConcentrationMeasurementCluster = Pm1ConcentrationMeasurement.Cluster;
ClusterRegistry.register(Pm1ConcentrationMeasurement.Complete);
export {
  Pm1ConcentrationMeasurement,
  Pm1ConcentrationMeasurementCluster
};
//# sourceMappingURL=pm1-concentration-measurement.js.map
