/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
/*** THIS FILE IS GENERATED, DO NOT EDIT ***/
import { MutableCluster } from "../cluster/mutation/MutableCluster.js";
import { WritableAttribute } from "../cluster/Cluster.js";
import { Identity } from "#general";
export declare namespace UserLabel {
    /**
     * @see {@link Cluster}
     */
    const ClusterInstance: MutableCluster<{
        readonly id: 65;
        readonly name: "UserLabel";
        readonly revision: 1;
        readonly attributes: {
            /**
             * An implementation shall support at least 4 list entries per node for all User Label cluster instances on
             * the node.
             *
             * @see {@link MatterSpecification.v14.Core} ยง 9.9.4.1
             */
            readonly labelList: WritableAttribute<import("../index.js").TypeFromFields<{
                label: import("../index.js").FieldType<string>;
                value: import("../index.js").FieldType<string>;
            }>[], any>;
        };
    }, []>;
    /**
     * This cluster is derived from the Label cluster and provides a feature to tag an endpoint with zero or more
     * writable labels.
     *
     * @see {@link MatterSpecification.v14.Core} ยง 9.9
     */
    interface Cluster extends Identity<typeof ClusterInstance> {
    }
    const Cluster: Cluster;
    const Complete: Cluster;
}
export type UserLabelCluster = UserLabel.Cluster;
export declare const UserLabelCluster: UserLabel.Cluster;
//# sourceMappingURL=user-label.d.ts.map