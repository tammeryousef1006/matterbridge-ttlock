/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { TypeFromSchema } from "#tlv/TlvSchema.js";
/** @see {@link MatterSpecification.v13.Core}, section 10.7.10 */
export declare const TlvInvokeResponse: import("../../tlv/TlvObject.js").ObjectSchema<{
    /** Deprecated and ignored by client, but required for backward compatibility reasons. */
    suppressResponse: import("../../tlv/TlvObject.js").FieldType<boolean>;
    /** Command response or status. */
    invokeResponses: import("../../tlv/TlvObject.js").FieldType<import("../../tlv/TlvObject.js").TypeFromFields<{
        command: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../tlv/TlvObject.js").TypeFromFields<{
            commandPath: import("../../tlv/TlvObject.js").FieldType<import("../../tlv/TlvObject.js").TypeFromFields<{
                endpointId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").EndpointNumber>;
                clusterId: import("../../tlv/TlvObject.js").FieldType<import("../../index.js").ClusterId>;
                commandId: import("../../tlv/TlvObject.js").FieldType<import("../../index.js").CommandId>;
            }>>;
            commandFields: import("../../tlv/TlvObject.js").OptionalFieldType<import("#tlv/TlvSchema.js").TlvStream>;
            commandRef: import("../../tlv/TlvObject.js").OptionalFieldType<number>;
        }>>;
        status: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../tlv/TlvObject.js").TypeFromFields<{
            commandPath: import("../../tlv/TlvObject.js").FieldType<import("../../tlv/TlvObject.js").TypeFromFields<{
                endpointId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").EndpointNumber>;
                clusterId: import("../../tlv/TlvObject.js").FieldType<import("../../index.js").ClusterId>;
                commandId: import("../../tlv/TlvObject.js").FieldType<import("../../index.js").CommandId>;
            }>>;
            status: import("../../tlv/TlvObject.js").FieldType<import("../../tlv/TlvObject.js").TypeFromFields<{
                status: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").Status>;
                clusterStatus: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").Status>;
            }>>;
            commandRef: import("../../tlv/TlvObject.js").OptionalFieldType<number>;
        }>>;
    }>[]>;
    moreChunkedMessages: import("../../tlv/TlvObject.js").OptionalFieldType<boolean>;
    interactionModelRevision: import("../../tlv/TlvObject.js").FieldType<number>;
}>;
export type InvokeResponse = TypeFromSchema<typeof TlvInvokeResponse>;
//# sourceMappingURL=TlvInvokeResponse.d.ts.map