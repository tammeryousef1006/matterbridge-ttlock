/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { TypeFromSchema } from "#tlv/TlvSchema.js";
/** @see {@link MatterSpecification.v13.Core}, section 10.7.6 */
export declare const TlvWriteRequest: import("../../tlv/TlvObject.js").ObjectSchema<{
    /** Do not send a response to this action. */
    suppressResponse: import("../../tlv/TlvObject.js").OptionalFieldType<boolean>;
    /** Flag action as part of a timed write transaction. */
    timedRequest: import("../../tlv/TlvObject.js").FieldType<boolean>;
    /** A list of one or more path and data tuples. */
    writeRequests: import("../../tlv/TlvObject.js").FieldType<import("../../tlv/TlvObject.js").TypeFromFields<{
        dataVersion: import("../../tlv/TlvObject.js").OptionalFieldType<number>;
        path: import("../../tlv/TlvObject.js").FieldType<import("../../tlv/TlvObject.js").TypeFromFields<{
            enableTagCompression: import("../../tlv/TlvObject.js").OptionalFieldType<boolean>;
            nodeId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").NodeId>;
            endpointId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").EndpointNumber>;
            clusterId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").ClusterId>;
            attributeId: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").AttributeId>;
            listIndex: import("../../tlv/TlvObject.js").OptionalFieldType<number | null>;
            wildcardPathFlags: import("../../tlv/TlvObject.js").OptionalFieldType<import("../../index.js").TypeFromPartialBitSchema<{
                skipRootNode: import("../../index.js").BitFlag;
                skipGlobalAttributes: import("../../index.js").BitFlag;
                skipAttributeList: import("../../index.js").BitFlag;
                reserved1: import("../../index.js").BitFlag;
                skipCommandLists: import("../../index.js").BitFlag;
                skipCustomElements: import("../../index.js").BitFlag;
                skipFixedAttributes: import("../../index.js").BitFlag;
                skipChangesOmittedAttributes: import("../../index.js").BitFlag;
                skipDiagnosticsClusters: import("../../index.js").BitFlag;
            }>>;
        }>>;
        data: import("../../tlv/TlvObject.js").FieldType<import("#tlv/TlvSchema.js").TlvStream>;
    }>[]>;
    moreChunkedMessages: import("../../tlv/TlvObject.js").OptionalFieldType<boolean>;
    interactionModelRevision: import("../../tlv/TlvObject.js").FieldType<number>;
}>;
export type WriteRequest = TypeFromSchema<typeof TlvWriteRequest>;
//# sourceMappingURL=TlvWriteRequest.d.ts.map