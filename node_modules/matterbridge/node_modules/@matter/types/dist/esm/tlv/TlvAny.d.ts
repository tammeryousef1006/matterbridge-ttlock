/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { TlvTag, TlvTypeLength } from "./TlvCodec.js";
import { TlvArrayReader, TlvElement, TlvReader, TlvSchema, TlvStream, TlvWriter } from "./TlvSchema.js";
export declare class AnySchema extends TlvSchema<TlvStream> {
    getEncodedByteLength(tlvStream: TlvStream): number;
    encodeTlvInternal(writer: TlvWriter, tlvStream: TlvStream, tagAssigned?: TlvTag): void;
    decodeTlvInternalValue(reader: TlvReader, typeLength: TlvTypeLength): TlvStream;
    decodeTlvValueRec(reader: TlvReader, typeLength: TlvTypeLength, tlvStream: TlvStream, tag?: TlvTag): TlvStream;
    validate(tlvStream: TlvStream): void;
    decodeAnyTlvStream(encoded: TlvStream): any;
    decodeGenericElement(reader: TlvArrayReader, preReadElement?: TlvElement<any>, allowTag?: boolean): any;
    decodeGenericArrayOrList(reader: TlvArrayReader, allowTag?: boolean): any[];
    decodeGenericStructure(reader: TlvArrayReader): {
        [key: string]: any;
    };
}
export declare const TlvAny: AnySchema;
//# sourceMappingURL=TlvAny.d.ts.map